// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#include <winrt/Windows.Devices.Printers.h>

namespace py::proj::Windows::Devices::Printers
{}

namespace py::impl::Windows::Devices::Printers
{}

namespace py::wrapper::Windows::Devices::Printers
{
    using IppAttributeError = py::winrt_wrapper<winrt::Windows::Devices::Printers::IppAttributeError>;
    using IppAttributeValue = py::winrt_wrapper<winrt::Windows::Devices::Printers::IppAttributeValue>;
    using IppIntegerRange = py::winrt_wrapper<winrt::Windows::Devices::Printers::IppIntegerRange>;
    using IppPrintDevice = py::winrt_wrapper<winrt::Windows::Devices::Printers::IppPrintDevice>;
    using IppResolution = py::winrt_wrapper<winrt::Windows::Devices::Printers::IppResolution>;
    using IppSetAttributesResult = py::winrt_wrapper<winrt::Windows::Devices::Printers::IppSetAttributesResult>;
    using IppTextWithLanguage = py::winrt_wrapper<winrt::Windows::Devices::Printers::IppTextWithLanguage>;
    using Print3DDevice = py::winrt_wrapper<winrt::Windows::Devices::Printers::Print3DDevice>;
    using PrintSchema = py::winrt_wrapper<winrt::Windows::Devices::Printers::PrintSchema>;
}

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::IppAttributeError>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::IppAttributeValue>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::IppIntegerRange>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::IppPrintDevice>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::IppResolution>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::IppSetAttributesResult>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::IppTextWithLanguage>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::Print3DDevice>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::Printers::PrintSchema>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

}
