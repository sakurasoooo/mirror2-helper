// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.Media.Import.h"

PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportFindItemsResult>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportImportItemsResult>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportItem>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportItemImportedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportManager>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportOperation>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportSelectionChangedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportSession>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportSidecar>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportSource>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportStorageMedium>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportVideoSegment>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Media::Import::PhotoImportProgress>::python_type;

PyObject* py::converter<winrt::Windows::Media::Import::PhotoImportProgress>::convert(winrt::Windows::Media::Import::PhotoImportProgress instance) noexcept
{
    return py::wrap_struct(instance, py::get_python_type<winrt::Windows::Media::Import::PhotoImportProgress>());
}
winrt::Windows::Media::Import::PhotoImportProgress py::converter<winrt::Windows::Media::Import::PhotoImportProgress>::convert_to(PyObject* obj)
{
    throw_if_pyobj_null(obj);

    if (Py_TYPE(obj) == py::get_python_type<winrt::Windows::Media::Import::PhotoImportProgress>())
    {
        return reinterpret_cast<py::winrt_struct_wrapper<winrt::Windows::Media::Import::PhotoImportProgress>*>(obj)->obj;
    }

    if (!PyDict_Check(obj))
    {
        throw winrt::hresult_invalid_argument();
    }

    winrt::Windows::Media::Import::PhotoImportProgress return_value{};

    PyObject* py_ItemsImported = PyDict_GetItemString(obj, "items_imported");
    if (!py_ItemsImported) { throw winrt::hresult_invalid_argument(); }
    return_value.ItemsImported = converter<uint32_t>::convert_to(py_ItemsImported);

    PyObject* py_TotalItemsToImport = PyDict_GetItemString(obj, "total_items_to_import");
    if (!py_TotalItemsToImport) { throw winrt::hresult_invalid_argument(); }
    return_value.TotalItemsToImport = converter<uint32_t>::convert_to(py_TotalItemsToImport);

    PyObject* py_BytesImported = PyDict_GetItemString(obj, "bytes_imported");
    if (!py_BytesImported) { throw winrt::hresult_invalid_argument(); }
    return_value.BytesImported = converter<uint64_t>::convert_to(py_BytesImported);

    PyObject* py_TotalBytesToImport = PyDict_GetItemString(obj, "total_bytes_to_import");
    if (!py_TotalBytesToImport) { throw winrt::hresult_invalid_argument(); }
    return_value.TotalBytesToImport = converter<uint64_t>::convert_to(py_TotalBytesToImport);

    PyObject* py_ImportProgress = PyDict_GetItemString(obj, "import_progress");
    if (!py_ImportProgress) { throw winrt::hresult_invalid_argument(); }
    return_value.ImportProgress = converter<double>::convert_to(py_ImportProgress);

    return return_value;
}

namespace py::cpp::Windows::Media::Import
{
    // ----- PhotoImportDeleteImportedItemsFromSourceResult class --------------------
    constexpr const char* const _type_name_PhotoImportDeleteImportedItemsFromSourceResult = "PhotoImportDeleteImportedItemsFromSourceResult";

    static PyObject* _new_PhotoImportDeleteImportedItemsFromSourceResult(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportDeleteImportedItemsFromSourceResult);
        return nullptr;
    }

    static void _dealloc_PhotoImportDeleteImportedItemsFromSourceResult(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_DeletedItems(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeletedItems());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_HasSucceeded(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.HasSucceeded());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_PhotosCount(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PhotosCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_PhotosSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PhotosSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_Session(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Session());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_SiblingsCount(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SiblingsCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_SiblingsSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SiblingsSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_SidecarsCount(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SidecarsCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_SidecarsSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SidecarsSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_TotalCount(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TotalCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_TotalSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TotalSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_VideosCount(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.VideosCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportDeleteImportedItemsFromSourceResult_get_VideosSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.VideosSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportDeleteImportedItemsFromSourceResult(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportDeleteImportedItemsFromSourceResult[] = {
        { "_from", (PyCFunction)_from_PhotoImportDeleteImportedItemsFromSourceResult, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportDeleteImportedItemsFromSourceResult[] = {
        { const_cast<char*>("deleted_items"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_DeletedItems, nullptr, nullptr, nullptr },
        { const_cast<char*>("has_succeeded"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_HasSucceeded, nullptr, nullptr, nullptr },
        { const_cast<char*>("photos_count"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_PhotosCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("photos_size_in_bytes"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_PhotosSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("session"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_Session, nullptr, nullptr, nullptr },
        { const_cast<char*>("siblings_count"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_SiblingsCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("siblings_size_in_bytes"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_SiblingsSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("sidecars_count"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_SidecarsCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("sidecars_size_in_bytes"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_SidecarsSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("total_count"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_TotalCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("total_size_in_bytes"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_TotalSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("videos_count"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_VideosCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("videos_size_in_bytes"), (getter)PhotoImportDeleteImportedItemsFromSourceResult_get_VideosSizeInBytes, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportDeleteImportedItemsFromSourceResult[] = 
    {
        { Py_tp_new, _new_PhotoImportDeleteImportedItemsFromSourceResult },
        { Py_tp_dealloc, _dealloc_PhotoImportDeleteImportedItemsFromSourceResult },
        { Py_tp_methods, _methods_PhotoImportDeleteImportedItemsFromSourceResult },
        { Py_tp_getset, _getset_PhotoImportDeleteImportedItemsFromSourceResult },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportDeleteImportedItemsFromSourceResult =
    {
        "_winrt_Windows_Media_Import.PhotoImportDeleteImportedItemsFromSourceResult",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportDeleteImportedItemsFromSourceResult
    };

    // ----- PhotoImportFindItemsResult class --------------------
    constexpr const char* const _type_name_PhotoImportFindItemsResult = "PhotoImportFindItemsResult";

    static PyObject* _new_PhotoImportFindItemsResult(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportFindItemsResult);
        return nullptr;
    }

    static void _dealloc_PhotoImportFindItemsResult(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportFindItemsResult_AddItemsInDateRangeToSelection(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Foundation::DateTime>(args, 0);
                auto param1 = py::convert_to<winrt::Windows::Foundation::TimeSpan>(args, 1);

                self->obj.AddItemsInDateRangeToSelection(param0, param1);
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_ImportItemsAsync(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ImportItemsAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_SelectAll(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.SelectAll();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_SelectNewAsync(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.SelectNewAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_SelectNone(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.SelectNone();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_SetImportMode(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Media::Import::PhotoImportImportMode>(args, 0);

                self->obj.SetImportMode(param0);
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_FoundItems(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.FoundItems());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_HasSucceeded(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.HasSucceeded());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_ImportMode(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ImportMode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_PhotosCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PhotosCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_PhotosSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PhotosSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedPhotosCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedPhotosCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedPhotosSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedPhotosSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedSiblingsCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedSiblingsCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedSiblingsSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedSiblingsSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedSidecarsCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedSidecarsCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedSidecarsSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedSidecarsSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedTotalCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedTotalCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedTotalSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedTotalSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedVideosCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedVideosCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SelectedVideosSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedVideosSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_Session(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Session());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SiblingsCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SiblingsCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SiblingsSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SiblingsSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SidecarsCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SidecarsCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_SidecarsSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SidecarsSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_TotalCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TotalCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_TotalSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TotalSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_VideosCount(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.VideosCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_get_VideosSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.VideosSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_add_ItemImported(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Media::Import::PhotoImportFindItemsResult, winrt::Windows::Media::Import::PhotoImportItemImportedEventArgs>>(arg);

            return py::convert(self->obj.ItemImported(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_remove_ItemImported(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ItemImported(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_add_SelectionChanged(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Media::Import::PhotoImportFindItemsResult, winrt::Windows::Media::Import::PhotoImportSelectionChangedEventArgs>>(arg);

            return py::convert(self->obj.SelectionChanged(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportFindItemsResult_remove_SelectionChanged(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SelectionChanged(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportFindItemsResult(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportFindItemsResult>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportFindItemsResult[] = {
        { "add_items_in_date_range_to_selection", (PyCFunction)PhotoImportFindItemsResult_AddItemsInDateRangeToSelection, METH_VARARGS, nullptr },
        { "import_items_async", (PyCFunction)PhotoImportFindItemsResult_ImportItemsAsync, METH_VARARGS, nullptr },
        { "select_all", (PyCFunction)PhotoImportFindItemsResult_SelectAll, METH_VARARGS, nullptr },
        { "select_new_async", (PyCFunction)PhotoImportFindItemsResult_SelectNewAsync, METH_VARARGS, nullptr },
        { "select_none", (PyCFunction)PhotoImportFindItemsResult_SelectNone, METH_VARARGS, nullptr },
        { "set_import_mode", (PyCFunction)PhotoImportFindItemsResult_SetImportMode, METH_VARARGS, nullptr },
        { "add_item_imported", (PyCFunction)PhotoImportFindItemsResult_add_ItemImported, METH_O, nullptr },
        { "remove_item_imported", (PyCFunction)PhotoImportFindItemsResult_remove_ItemImported, METH_O, nullptr },
        { "add_selection_changed", (PyCFunction)PhotoImportFindItemsResult_add_SelectionChanged, METH_O, nullptr },
        { "remove_selection_changed", (PyCFunction)PhotoImportFindItemsResult_remove_SelectionChanged, METH_O, nullptr },
        { "_from", (PyCFunction)_from_PhotoImportFindItemsResult, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportFindItemsResult[] = {
        { const_cast<char*>("found_items"), (getter)PhotoImportFindItemsResult_get_FoundItems, nullptr, nullptr, nullptr },
        { const_cast<char*>("has_succeeded"), (getter)PhotoImportFindItemsResult_get_HasSucceeded, nullptr, nullptr, nullptr },
        { const_cast<char*>("import_mode"), (getter)PhotoImportFindItemsResult_get_ImportMode, nullptr, nullptr, nullptr },
        { const_cast<char*>("photos_count"), (getter)PhotoImportFindItemsResult_get_PhotosCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("photos_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_PhotosSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_photos_count"), (getter)PhotoImportFindItemsResult_get_SelectedPhotosCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_photos_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_SelectedPhotosSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_siblings_count"), (getter)PhotoImportFindItemsResult_get_SelectedSiblingsCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_siblings_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_SelectedSiblingsSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_sidecars_count"), (getter)PhotoImportFindItemsResult_get_SelectedSidecarsCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_sidecars_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_SelectedSidecarsSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_total_count"), (getter)PhotoImportFindItemsResult_get_SelectedTotalCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_total_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_SelectedTotalSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_videos_count"), (getter)PhotoImportFindItemsResult_get_SelectedVideosCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_videos_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_SelectedVideosSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("session"), (getter)PhotoImportFindItemsResult_get_Session, nullptr, nullptr, nullptr },
        { const_cast<char*>("siblings_count"), (getter)PhotoImportFindItemsResult_get_SiblingsCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("siblings_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_SiblingsSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("sidecars_count"), (getter)PhotoImportFindItemsResult_get_SidecarsCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("sidecars_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_SidecarsSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("total_count"), (getter)PhotoImportFindItemsResult_get_TotalCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("total_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_TotalSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("videos_count"), (getter)PhotoImportFindItemsResult_get_VideosCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("videos_size_in_bytes"), (getter)PhotoImportFindItemsResult_get_VideosSizeInBytes, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportFindItemsResult[] = 
    {
        { Py_tp_new, _new_PhotoImportFindItemsResult },
        { Py_tp_dealloc, _dealloc_PhotoImportFindItemsResult },
        { Py_tp_methods, _methods_PhotoImportFindItemsResult },
        { Py_tp_getset, _getset_PhotoImportFindItemsResult },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportFindItemsResult =
    {
        "_winrt_Windows_Media_Import.PhotoImportFindItemsResult",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportFindItemsResult),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportFindItemsResult
    };

    // ----- PhotoImportImportItemsResult class --------------------
    constexpr const char* const _type_name_PhotoImportImportItemsResult = "PhotoImportImportItemsResult";

    static PyObject* _new_PhotoImportImportItemsResult(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportImportItemsResult);
        return nullptr;
    }

    static void _dealloc_PhotoImportImportItemsResult(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportImportItemsResult_DeleteImportedItemsFromSourceAsync(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.DeleteImportedItemsFromSourceAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_HasSucceeded(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.HasSucceeded());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_ImportedItems(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ImportedItems());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_PhotosCount(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PhotosCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_PhotosSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PhotosSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_Session(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Session());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_SiblingsCount(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SiblingsCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_SiblingsSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SiblingsSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_SidecarsCount(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SidecarsCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_SidecarsSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SidecarsSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_TotalCount(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TotalCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_TotalSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TotalSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_VideosCount(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.VideosCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportImportItemsResult_get_VideosSizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.VideosSizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportImportItemsResult(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportImportItemsResult>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportImportItemsResult[] = {
        { "delete_imported_items_from_source_async", (PyCFunction)PhotoImportImportItemsResult_DeleteImportedItemsFromSourceAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_PhotoImportImportItemsResult, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportImportItemsResult[] = {
        { const_cast<char*>("has_succeeded"), (getter)PhotoImportImportItemsResult_get_HasSucceeded, nullptr, nullptr, nullptr },
        { const_cast<char*>("imported_items"), (getter)PhotoImportImportItemsResult_get_ImportedItems, nullptr, nullptr, nullptr },
        { const_cast<char*>("photos_count"), (getter)PhotoImportImportItemsResult_get_PhotosCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("photos_size_in_bytes"), (getter)PhotoImportImportItemsResult_get_PhotosSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("session"), (getter)PhotoImportImportItemsResult_get_Session, nullptr, nullptr, nullptr },
        { const_cast<char*>("siblings_count"), (getter)PhotoImportImportItemsResult_get_SiblingsCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("siblings_size_in_bytes"), (getter)PhotoImportImportItemsResult_get_SiblingsSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("sidecars_count"), (getter)PhotoImportImportItemsResult_get_SidecarsCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("sidecars_size_in_bytes"), (getter)PhotoImportImportItemsResult_get_SidecarsSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("total_count"), (getter)PhotoImportImportItemsResult_get_TotalCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("total_size_in_bytes"), (getter)PhotoImportImportItemsResult_get_TotalSizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("videos_count"), (getter)PhotoImportImportItemsResult_get_VideosCount, nullptr, nullptr, nullptr },
        { const_cast<char*>("videos_size_in_bytes"), (getter)PhotoImportImportItemsResult_get_VideosSizeInBytes, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportImportItemsResult[] = 
    {
        { Py_tp_new, _new_PhotoImportImportItemsResult },
        { Py_tp_dealloc, _dealloc_PhotoImportImportItemsResult },
        { Py_tp_methods, _methods_PhotoImportImportItemsResult },
        { Py_tp_getset, _getset_PhotoImportImportItemsResult },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportImportItemsResult =
    {
        "_winrt_Windows_Media_Import.PhotoImportImportItemsResult",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportImportItemsResult),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportImportItemsResult
    };

    // ----- PhotoImportItem class --------------------
    constexpr const char* const _type_name_PhotoImportItem = "PhotoImportItem";

    static PyObject* _new_PhotoImportItem(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportItem);
        return nullptr;
    }

    static void _dealloc_PhotoImportItem(py::wrapper::Windows::Media::Import::PhotoImportItem* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportItem_get_IsSelected(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsSelected());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportItem_put_IsSelected(py::wrapper::Windows::Media::Import::PhotoImportItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<bool>(arg);

            self->obj.IsSelected(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportItem_get_ContentType(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContentType());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_Date(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Date());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_DeletedFileNames(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeletedFileNames());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_ImportedFileNames(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ImportedFileNames());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_ItemKey(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ItemKey());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_Name(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_Sibling(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Sibling());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_Sidecars(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Sidecars());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_SizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_Thumbnail(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Thumbnail());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_VideoSegments(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.VideoSegments());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportItem_get_Path(py::wrapper::Windows::Media::Import::PhotoImportItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Path());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportItem(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportItem>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportItem[] = {
        { "_from", (PyCFunction)_from_PhotoImportItem, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportItem[] = {
        { const_cast<char*>("is_selected"), (getter)PhotoImportItem_get_IsSelected, (setter)PhotoImportItem_put_IsSelected, nullptr, nullptr },
        { const_cast<char*>("content_type"), (getter)PhotoImportItem_get_ContentType, nullptr, nullptr, nullptr },
        { const_cast<char*>("date"), (getter)PhotoImportItem_get_Date, nullptr, nullptr, nullptr },
        { const_cast<char*>("deleted_file_names"), (getter)PhotoImportItem_get_DeletedFileNames, nullptr, nullptr, nullptr },
        { const_cast<char*>("imported_file_names"), (getter)PhotoImportItem_get_ImportedFileNames, nullptr, nullptr, nullptr },
        { const_cast<char*>("item_key"), (getter)PhotoImportItem_get_ItemKey, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PhotoImportItem_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("sibling"), (getter)PhotoImportItem_get_Sibling, nullptr, nullptr, nullptr },
        { const_cast<char*>("sidecars"), (getter)PhotoImportItem_get_Sidecars, nullptr, nullptr, nullptr },
        { const_cast<char*>("size_in_bytes"), (getter)PhotoImportItem_get_SizeInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("thumbnail"), (getter)PhotoImportItem_get_Thumbnail, nullptr, nullptr, nullptr },
        { const_cast<char*>("video_segments"), (getter)PhotoImportItem_get_VideoSegments, nullptr, nullptr, nullptr },
        { const_cast<char*>("path"), (getter)PhotoImportItem_get_Path, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportItem[] = 
    {
        { Py_tp_new, _new_PhotoImportItem },
        { Py_tp_dealloc, _dealloc_PhotoImportItem },
        { Py_tp_methods, _methods_PhotoImportItem },
        { Py_tp_getset, _getset_PhotoImportItem },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportItem =
    {
        "_winrt_Windows_Media_Import.PhotoImportItem",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportItem),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportItem
    };

    // ----- PhotoImportItemImportedEventArgs class --------------------
    constexpr const char* const _type_name_PhotoImportItemImportedEventArgs = "PhotoImportItemImportedEventArgs";

    static PyObject* _new_PhotoImportItemImportedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportItemImportedEventArgs);
        return nullptr;
    }

    static void _dealloc_PhotoImportItemImportedEventArgs(py::wrapper::Windows::Media::Import::PhotoImportItemImportedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportItemImportedEventArgs_get_ImportedItem(py::wrapper::Windows::Media::Import::PhotoImportItemImportedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ImportedItem());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportItemImportedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportItemImportedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportItemImportedEventArgs[] = {
        { "_from", (PyCFunction)_from_PhotoImportItemImportedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportItemImportedEventArgs[] = {
        { const_cast<char*>("imported_item"), (getter)PhotoImportItemImportedEventArgs_get_ImportedItem, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportItemImportedEventArgs[] = 
    {
        { Py_tp_new, _new_PhotoImportItemImportedEventArgs },
        { Py_tp_dealloc, _dealloc_PhotoImportItemImportedEventArgs },
        { Py_tp_methods, _methods_PhotoImportItemImportedEventArgs },
        { Py_tp_getset, _getset_PhotoImportItemImportedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportItemImportedEventArgs =
    {
        "_winrt_Windows_Media_Import.PhotoImportItemImportedEventArgs",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportItemImportedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportItemImportedEventArgs
    };

    // ----- PhotoImportManager class --------------------
    constexpr const char* const _type_name_PhotoImportManager = "PhotoImportManager";

    static PyObject* _new_PhotoImportManager(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportManager);
        return nullptr;
    }

    static PyObject* PhotoImportManager_FindAllSourcesAsync(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(winrt::Windows::Media::Import::PhotoImportManager::FindAllSourcesAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportManager_GetPendingOperations(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(winrt::Windows::Media::Import::PhotoImportManager::GetPendingOperations());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportManager_IsSupportedAsync(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(winrt::Windows::Media::Import::PhotoImportManager::IsSupportedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportManager[] = {
        { "find_all_sources_async", (PyCFunction)PhotoImportManager_FindAllSourcesAsync, METH_VARARGS | METH_STATIC, nullptr },
        { "get_pending_operations", (PyCFunction)PhotoImportManager_GetPendingOperations, METH_VARARGS | METH_STATIC, nullptr },
        { "is_supported_async", (PyCFunction)PhotoImportManager_IsSupportedAsync, METH_VARARGS | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportManager[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportManager[] = 
    {
        { Py_tp_new, _new_PhotoImportManager },
        { Py_tp_methods, _methods_PhotoImportManager },
        { Py_tp_getset, _getset_PhotoImportManager },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportManager =
    {
        "_winrt_Windows_Media_Import.PhotoImportManager",
        0,
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportManager
    };

    // ----- PhotoImportOperation class --------------------
    constexpr const char* const _type_name_PhotoImportOperation = "PhotoImportOperation";

    static PyObject* _new_PhotoImportOperation(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportOperation);
        return nullptr;
    }

    static void _dealloc_PhotoImportOperation(py::wrapper::Windows::Media::Import::PhotoImportOperation* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportOperation_get_ContinueDeletingImportedItemsFromSourceAsync(py::wrapper::Windows::Media::Import::PhotoImportOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinueDeletingImportedItemsFromSourceAsync());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportOperation_get_ContinueFindingItemsAsync(py::wrapper::Windows::Media::Import::PhotoImportOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinueFindingItemsAsync());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportOperation_get_ContinueImportingItemsAsync(py::wrapper::Windows::Media::Import::PhotoImportOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinueImportingItemsAsync());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportOperation_get_Session(py::wrapper::Windows::Media::Import::PhotoImportOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Session());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportOperation_get_Stage(py::wrapper::Windows::Media::Import::PhotoImportOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Stage());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportOperation(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportOperation>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportOperation[] = {
        { "_from", (PyCFunction)_from_PhotoImportOperation, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportOperation[] = {
        { const_cast<char*>("continue_deleting_imported_items_from_source_async"), (getter)PhotoImportOperation_get_ContinueDeletingImportedItemsFromSourceAsync, nullptr, nullptr, nullptr },
        { const_cast<char*>("continue_finding_items_async"), (getter)PhotoImportOperation_get_ContinueFindingItemsAsync, nullptr, nullptr, nullptr },
        { const_cast<char*>("continue_importing_items_async"), (getter)PhotoImportOperation_get_ContinueImportingItemsAsync, nullptr, nullptr, nullptr },
        { const_cast<char*>("session"), (getter)PhotoImportOperation_get_Session, nullptr, nullptr, nullptr },
        { const_cast<char*>("stage"), (getter)PhotoImportOperation_get_Stage, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportOperation[] = 
    {
        { Py_tp_new, _new_PhotoImportOperation },
        { Py_tp_dealloc, _dealloc_PhotoImportOperation },
        { Py_tp_methods, _methods_PhotoImportOperation },
        { Py_tp_getset, _getset_PhotoImportOperation },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportOperation =
    {
        "_winrt_Windows_Media_Import.PhotoImportOperation",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportOperation),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportOperation
    };

    // ----- PhotoImportSelectionChangedEventArgs class --------------------
    constexpr const char* const _type_name_PhotoImportSelectionChangedEventArgs = "PhotoImportSelectionChangedEventArgs";

    static PyObject* _new_PhotoImportSelectionChangedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportSelectionChangedEventArgs);
        return nullptr;
    }

    static void _dealloc_PhotoImportSelectionChangedEventArgs(py::wrapper::Windows::Media::Import::PhotoImportSelectionChangedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportSelectionChangedEventArgs_get_IsSelectionEmpty(py::wrapper::Windows::Media::Import::PhotoImportSelectionChangedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsSelectionEmpty());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportSelectionChangedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportSelectionChangedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportSelectionChangedEventArgs[] = {
        { "_from", (PyCFunction)_from_PhotoImportSelectionChangedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportSelectionChangedEventArgs[] = {
        { const_cast<char*>("is_selection_empty"), (getter)PhotoImportSelectionChangedEventArgs_get_IsSelectionEmpty, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportSelectionChangedEventArgs[] = 
    {
        { Py_tp_new, _new_PhotoImportSelectionChangedEventArgs },
        { Py_tp_dealloc, _dealloc_PhotoImportSelectionChangedEventArgs },
        { Py_tp_methods, _methods_PhotoImportSelectionChangedEventArgs },
        { Py_tp_getset, _getset_PhotoImportSelectionChangedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportSelectionChangedEventArgs =
    {
        "_winrt_Windows_Media_Import.PhotoImportSelectionChangedEventArgs",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportSelectionChangedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportSelectionChangedEventArgs
    };

    // ----- PhotoImportSession class --------------------
    constexpr const char* const _type_name_PhotoImportSession = "PhotoImportSession";

    static PyObject* _new_PhotoImportSession(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportSession);
        return nullptr;
    }

    static void _dealloc_PhotoImportSession(py::wrapper::Windows::Media::Import::PhotoImportSession* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportSession_Close(py::wrapper::Windows::Media::Import::PhotoImportSession* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Close();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportSession_FindItemsAsync(py::wrapper::Windows::Media::Import::PhotoImportSession* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Media::Import::PhotoImportContentTypeFilter>(args, 0);
                auto param1 = py::convert_to<winrt::Windows::Media::Import::PhotoImportItemSelectionMode>(args, 1);

                return py::convert(self->obj.FindItemsAsync(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportSession_get_SubfolderCreationMode(py::wrapper::Windows::Media::Import::PhotoImportSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SubfolderCreationMode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportSession_put_SubfolderCreationMode(py::wrapper::Windows::Media::Import::PhotoImportSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Media::Import::PhotoImportSubfolderCreationMode>(arg);

            self->obj.SubfolderCreationMode(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportSession_get_DestinationFolder(py::wrapper::Windows::Media::Import::PhotoImportSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DestinationFolder());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportSession_put_DestinationFolder(py::wrapper::Windows::Media::Import::PhotoImportSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Storage::IStorageFolder>(arg);

            self->obj.DestinationFolder(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportSession_get_DestinationFileNamePrefix(py::wrapper::Windows::Media::Import::PhotoImportSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DestinationFileNamePrefix());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportSession_put_DestinationFileNamePrefix(py::wrapper::Windows::Media::Import::PhotoImportSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::hstring>(arg);

            self->obj.DestinationFileNamePrefix(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportSession_get_AppendSessionDateToDestinationFolder(py::wrapper::Windows::Media::Import::PhotoImportSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AppendSessionDateToDestinationFolder());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportSession_put_AppendSessionDateToDestinationFolder(py::wrapper::Windows::Media::Import::PhotoImportSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<bool>(arg);

            self->obj.AppendSessionDateToDestinationFolder(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportSession_get_SessionId(py::wrapper::Windows::Media::Import::PhotoImportSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SessionId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSession_get_Source(py::wrapper::Windows::Media::Import::PhotoImportSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Source());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSession_get_SubfolderDateFormat(py::wrapper::Windows::Media::Import::PhotoImportSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SubfolderDateFormat());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportSession_put_SubfolderDateFormat(py::wrapper::Windows::Media::Import::PhotoImportSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Media::Import::PhotoImportSubfolderDateFormat>(arg);

            self->obj.SubfolderDateFormat(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportSession_get_RememberDeselectedItems(py::wrapper::Windows::Media::Import::PhotoImportSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RememberDeselectedItems());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportSession_put_RememberDeselectedItems(py::wrapper::Windows::Media::Import::PhotoImportSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<bool>(arg);

            self->obj.RememberDeselectedItems(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* _from_PhotoImportSession(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportSession>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _enter_PhotoImportSession(py::wrapper::Windows::Media::Import::PhotoImportSession* self) noexcept
    {
        Py_INCREF(self);
        return (PyObject*)self;
    }

    static PyObject* _exit_PhotoImportSession(py::wrapper::Windows::Media::Import::PhotoImportSession* self) noexcept
    {
        try
        {
            self->obj.Close();
            Py_RETURN_FALSE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportSession[] = {
        { "close", (PyCFunction)PhotoImportSession_Close, METH_VARARGS, nullptr },
        { "find_items_async", (PyCFunction)PhotoImportSession_FindItemsAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_PhotoImportSession, METH_O | METH_STATIC, nullptr },
        { "__enter__", (PyCFunction)_enter_PhotoImportSession, METH_NOARGS, nullptr },
        { "__exit__",  (PyCFunction)_exit_PhotoImportSession, METH_VARARGS, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportSession[] = {
        { const_cast<char*>("subfolder_creation_mode"), (getter)PhotoImportSession_get_SubfolderCreationMode, (setter)PhotoImportSession_put_SubfolderCreationMode, nullptr, nullptr },
        { const_cast<char*>("destination_folder"), (getter)PhotoImportSession_get_DestinationFolder, (setter)PhotoImportSession_put_DestinationFolder, nullptr, nullptr },
        { const_cast<char*>("destination_file_name_prefix"), (getter)PhotoImportSession_get_DestinationFileNamePrefix, (setter)PhotoImportSession_put_DestinationFileNamePrefix, nullptr, nullptr },
        { const_cast<char*>("append_session_date_to_destination_folder"), (getter)PhotoImportSession_get_AppendSessionDateToDestinationFolder, (setter)PhotoImportSession_put_AppendSessionDateToDestinationFolder, nullptr, nullptr },
        { const_cast<char*>("session_id"), (getter)PhotoImportSession_get_SessionId, nullptr, nullptr, nullptr },
        { const_cast<char*>("source"), (getter)PhotoImportSession_get_Source, nullptr, nullptr, nullptr },
        { const_cast<char*>("subfolder_date_format"), (getter)PhotoImportSession_get_SubfolderDateFormat, (setter)PhotoImportSession_put_SubfolderDateFormat, nullptr, nullptr },
        { const_cast<char*>("remember_deselected_items"), (getter)PhotoImportSession_get_RememberDeselectedItems, (setter)PhotoImportSession_put_RememberDeselectedItems, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportSession[] = 
    {
        { Py_tp_new, _new_PhotoImportSession },
        { Py_tp_dealloc, _dealloc_PhotoImportSession },
        { Py_tp_methods, _methods_PhotoImportSession },
        { Py_tp_getset, _getset_PhotoImportSession },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportSession =
    {
        "_winrt_Windows_Media_Import.PhotoImportSession",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportSession),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportSession
    };

    // ----- PhotoImportSidecar class --------------------
    constexpr const char* const _type_name_PhotoImportSidecar = "PhotoImportSidecar";

    static PyObject* _new_PhotoImportSidecar(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportSidecar);
        return nullptr;
    }

    static void _dealloc_PhotoImportSidecar(py::wrapper::Windows::Media::Import::PhotoImportSidecar* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportSidecar_get_Date(py::wrapper::Windows::Media::Import::PhotoImportSidecar* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Date());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSidecar_get_Name(py::wrapper::Windows::Media::Import::PhotoImportSidecar* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSidecar_get_SizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportSidecar* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportSidecar(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportSidecar>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportSidecar[] = {
        { "_from", (PyCFunction)_from_PhotoImportSidecar, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportSidecar[] = {
        { const_cast<char*>("date"), (getter)PhotoImportSidecar_get_Date, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PhotoImportSidecar_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("size_in_bytes"), (getter)PhotoImportSidecar_get_SizeInBytes, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportSidecar[] = 
    {
        { Py_tp_new, _new_PhotoImportSidecar },
        { Py_tp_dealloc, _dealloc_PhotoImportSidecar },
        { Py_tp_methods, _methods_PhotoImportSidecar },
        { Py_tp_getset, _getset_PhotoImportSidecar },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportSidecar =
    {
        "_winrt_Windows_Media_Import.PhotoImportSidecar",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportSidecar),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportSidecar
    };

    // ----- PhotoImportSource class --------------------
    constexpr const char* const _type_name_PhotoImportSource = "PhotoImportSource";

    static PyObject* _new_PhotoImportSource(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportSource);
        return nullptr;
    }

    static void _dealloc_PhotoImportSource(py::wrapper::Windows::Media::Import::PhotoImportSource* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportSource_CreateImportSession(py::wrapper::Windows::Media::Import::PhotoImportSource* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.CreateImportSession());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_FromFolderAsync(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Storage::IStorageFolder>(args, 0);

                return py::convert(winrt::Windows::Media::Import::PhotoImportSource::FromFolderAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_FromIdAsync(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                return py::convert(winrt::Windows::Media::Import::PhotoImportSource::FromIdAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_BatteryLevelPercent(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.BatteryLevelPercent());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_ConnectionProtocol(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ConnectionProtocol());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_ConnectionTransport(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ConnectionTransport());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_DateTime(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DateTime());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_Description(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Description());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_DisplayName(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DisplayName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_Id(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Id());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_IsLocked(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsLocked());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_IsMassStorage(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsMassStorage());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_Manufacturer(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Manufacturer());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_Model(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Model());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_PowerSource(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PowerSource());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_SerialNumber(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SerialNumber());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_StorageMedia(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.StorageMedia());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_Thumbnail(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Thumbnail());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportSource_get_Type(py::wrapper::Windows::Media::Import::PhotoImportSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Type());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportSource(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportSource>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportSource[] = {
        { "create_import_session", (PyCFunction)PhotoImportSource_CreateImportSession, METH_VARARGS, nullptr },
        { "from_folder_async", (PyCFunction)PhotoImportSource_FromFolderAsync, METH_VARARGS | METH_STATIC, nullptr },
        { "from_id_async", (PyCFunction)PhotoImportSource_FromIdAsync, METH_VARARGS | METH_STATIC, nullptr },
        { "_from", (PyCFunction)_from_PhotoImportSource, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportSource[] = {
        { const_cast<char*>("battery_level_percent"), (getter)PhotoImportSource_get_BatteryLevelPercent, nullptr, nullptr, nullptr },
        { const_cast<char*>("connection_protocol"), (getter)PhotoImportSource_get_ConnectionProtocol, nullptr, nullptr, nullptr },
        { const_cast<char*>("connection_transport"), (getter)PhotoImportSource_get_ConnectionTransport, nullptr, nullptr, nullptr },
        { const_cast<char*>("date_time"), (getter)PhotoImportSource_get_DateTime, nullptr, nullptr, nullptr },
        { const_cast<char*>("description"), (getter)PhotoImportSource_get_Description, nullptr, nullptr, nullptr },
        { const_cast<char*>("display_name"), (getter)PhotoImportSource_get_DisplayName, nullptr, nullptr, nullptr },
        { const_cast<char*>("id"), (getter)PhotoImportSource_get_Id, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_locked"), (getter)PhotoImportSource_get_IsLocked, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_mass_storage"), (getter)PhotoImportSource_get_IsMassStorage, nullptr, nullptr, nullptr },
        { const_cast<char*>("manufacturer"), (getter)PhotoImportSource_get_Manufacturer, nullptr, nullptr, nullptr },
        { const_cast<char*>("model"), (getter)PhotoImportSource_get_Model, nullptr, nullptr, nullptr },
        { const_cast<char*>("power_source"), (getter)PhotoImportSource_get_PowerSource, nullptr, nullptr, nullptr },
        { const_cast<char*>("serial_number"), (getter)PhotoImportSource_get_SerialNumber, nullptr, nullptr, nullptr },
        { const_cast<char*>("storage_media"), (getter)PhotoImportSource_get_StorageMedia, nullptr, nullptr, nullptr },
        { const_cast<char*>("thumbnail"), (getter)PhotoImportSource_get_Thumbnail, nullptr, nullptr, nullptr },
        { const_cast<char*>("type"), (getter)PhotoImportSource_get_Type, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportSource[] = 
    {
        { Py_tp_new, _new_PhotoImportSource },
        { Py_tp_dealloc, _dealloc_PhotoImportSource },
        { Py_tp_methods, _methods_PhotoImportSource },
        { Py_tp_getset, _getset_PhotoImportSource },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportSource =
    {
        "_winrt_Windows_Media_Import.PhotoImportSource",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportSource),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportSource
    };

    // ----- PhotoImportStorageMedium class --------------------
    constexpr const char* const _type_name_PhotoImportStorageMedium = "PhotoImportStorageMedium";

    static PyObject* _new_PhotoImportStorageMedium(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportStorageMedium);
        return nullptr;
    }

    static void _dealloc_PhotoImportStorageMedium(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportStorageMedium_Refresh(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Refresh();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PhotoImportStorageMedium_get_AvailableSpaceInBytes(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AvailableSpaceInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportStorageMedium_get_CapacityInBytes(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CapacityInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportStorageMedium_get_Description(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Description());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportStorageMedium_get_Name(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportStorageMedium_get_SerialNumber(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SerialNumber());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportStorageMedium_get_StorageMediumType(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.StorageMediumType());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportStorageMedium_get_SupportedAccessMode(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SupportedAccessMode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportStorageMedium(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportStorageMedium>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportStorageMedium[] = {
        { "refresh", (PyCFunction)PhotoImportStorageMedium_Refresh, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_PhotoImportStorageMedium, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportStorageMedium[] = {
        { const_cast<char*>("available_space_in_bytes"), (getter)PhotoImportStorageMedium_get_AvailableSpaceInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("capacity_in_bytes"), (getter)PhotoImportStorageMedium_get_CapacityInBytes, nullptr, nullptr, nullptr },
        { const_cast<char*>("description"), (getter)PhotoImportStorageMedium_get_Description, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PhotoImportStorageMedium_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("serial_number"), (getter)PhotoImportStorageMedium_get_SerialNumber, nullptr, nullptr, nullptr },
        { const_cast<char*>("storage_medium_type"), (getter)PhotoImportStorageMedium_get_StorageMediumType, nullptr, nullptr, nullptr },
        { const_cast<char*>("supported_access_mode"), (getter)PhotoImportStorageMedium_get_SupportedAccessMode, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportStorageMedium[] = 
    {
        { Py_tp_new, _new_PhotoImportStorageMedium },
        { Py_tp_dealloc, _dealloc_PhotoImportStorageMedium },
        { Py_tp_methods, _methods_PhotoImportStorageMedium },
        { Py_tp_getset, _getset_PhotoImportStorageMedium },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportStorageMedium =
    {
        "_winrt_Windows_Media_Import.PhotoImportStorageMedium",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportStorageMedium),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportStorageMedium
    };

    // ----- PhotoImportVideoSegment class --------------------
    constexpr const char* const _type_name_PhotoImportVideoSegment = "PhotoImportVideoSegment";

    static PyObject* _new_PhotoImportVideoSegment(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhotoImportVideoSegment);
        return nullptr;
    }

    static void _dealloc_PhotoImportVideoSegment(py::wrapper::Windows::Media::Import::PhotoImportVideoSegment* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhotoImportVideoSegment_get_Date(py::wrapper::Windows::Media::Import::PhotoImportVideoSegment* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Date());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportVideoSegment_get_Name(py::wrapper::Windows::Media::Import::PhotoImportVideoSegment* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportVideoSegment_get_Sibling(py::wrapper::Windows::Media::Import::PhotoImportVideoSegment* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Sibling());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportVideoSegment_get_Sidecars(py::wrapper::Windows::Media::Import::PhotoImportVideoSegment* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Sidecars());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhotoImportVideoSegment_get_SizeInBytes(py::wrapper::Windows::Media::Import::PhotoImportVideoSegment* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SizeInBytes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhotoImportVideoSegment(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Media::Import::PhotoImportVideoSegment>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhotoImportVideoSegment[] = {
        { "_from", (PyCFunction)_from_PhotoImportVideoSegment, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhotoImportVideoSegment[] = {
        { const_cast<char*>("date"), (getter)PhotoImportVideoSegment_get_Date, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PhotoImportVideoSegment_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("sibling"), (getter)PhotoImportVideoSegment_get_Sibling, nullptr, nullptr, nullptr },
        { const_cast<char*>("sidecars"), (getter)PhotoImportVideoSegment_get_Sidecars, nullptr, nullptr, nullptr },
        { const_cast<char*>("size_in_bytes"), (getter)PhotoImportVideoSegment_get_SizeInBytes, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportVideoSegment[] = 
    {
        { Py_tp_new, _new_PhotoImportVideoSegment },
        { Py_tp_dealloc, _dealloc_PhotoImportVideoSegment },
        { Py_tp_methods, _methods_PhotoImportVideoSegment },
        { Py_tp_getset, _getset_PhotoImportVideoSegment },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportVideoSegment =
    {
        "_winrt_Windows_Media_Import.PhotoImportVideoSegment",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportVideoSegment),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportVideoSegment
    };

    // ----- PhotoImportProgress struct --------------------
    constexpr const char* const _type_name_PhotoImportProgress = "PhotoImportProgress";

    PyObject* _new_PhotoImportProgress(PyTypeObject* type, PyObject* args, PyObject* kwds)
    {
        auto tuple_size = PyTuple_Size(args);

        if ((tuple_size == 0) && (kwds == nullptr))
        {
            try
            {
                winrt::Windows::Media::Import::PhotoImportProgress return_value{};
                return py::convert(return_value);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }

        if ((tuple_size == 1) && (kwds == nullptr))
        {
            auto arg = PyTuple_GetItem(args, 0);
            if (PyDict_Check(arg))
            {
                try
                {
                    auto return_value = py::convert_to<winrt::Windows::Media::Import::PhotoImportProgress>(arg);
                    return py::convert(return_value);
                }
                catch (...)
                {
                    py::to_PyErr();
                    return nullptr;
                }
            }
        }

        uint32_t _ItemsImported{};
        uint32_t _TotalItemsToImport{};
        uint64_t _BytesImported{};
        uint64_t _TotalBytesToImport{};
        double _ImportProgress{};

        static const char* kwlist[] = {"items_imported", "total_items_to_import", "bytes_imported", "total_bytes_to_import", "import_progress", nullptr};
        if (!PyArg_ParseTupleAndKeywords(args, kwds, "IIKKd", const_cast<char**>(kwlist), &_ItemsImported, &_TotalItemsToImport, &_BytesImported, &_TotalBytesToImport, &_ImportProgress))
        {
            return nullptr;
        }

        try
        {
            winrt::Windows::Media::Import::PhotoImportProgress return_value{ _ItemsImported, _TotalItemsToImport, _BytesImported, _TotalBytesToImport, _ImportProgress };
            return py::convert(return_value);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static void _dealloc_PhotoImportProgress(py::wrapper::Windows::Media::Import::PhotoImportProgress* self)
    {
    }

    static PyObject* PhotoImportProgress_get_ItemsImported(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ItemsImported);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportProgress_set_ItemsImported(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.ItemsImported = py::converter<uint32_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportProgress_get_TotalItemsToImport(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TotalItemsToImport);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportProgress_set_TotalItemsToImport(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.TotalItemsToImport = py::converter<uint32_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportProgress_get_BytesImported(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.BytesImported);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportProgress_set_BytesImported(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.BytesImported = py::converter<uint64_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportProgress_get_TotalBytesToImport(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TotalBytesToImport);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportProgress_set_TotalBytesToImport(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.TotalBytesToImport = py::converter<uint64_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PhotoImportProgress_get_ImportProgress(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ImportProgress);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PhotoImportProgress_set_ImportProgress(py::wrapper::Windows::Media::Import::PhotoImportProgress* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.ImportProgress = py::converter<double>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyGetSetDef _getset_PhotoImportProgress[] = {
        { const_cast<char*>("items_imported"), (getter)PhotoImportProgress_get_ItemsImported, (setter)PhotoImportProgress_set_ItemsImported, nullptr, nullptr },
        { const_cast<char*>("total_items_to_import"), (getter)PhotoImportProgress_get_TotalItemsToImport, (setter)PhotoImportProgress_set_TotalItemsToImport, nullptr, nullptr },
        { const_cast<char*>("bytes_imported"), (getter)PhotoImportProgress_get_BytesImported, (setter)PhotoImportProgress_set_BytesImported, nullptr, nullptr },
        { const_cast<char*>("total_bytes_to_import"), (getter)PhotoImportProgress_get_TotalBytesToImport, (setter)PhotoImportProgress_set_TotalBytesToImport, nullptr, nullptr },
        { const_cast<char*>("import_progress"), (getter)PhotoImportProgress_get_ImportProgress, (setter)PhotoImportProgress_set_ImportProgress, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhotoImportProgress[] = 
    {
        { Py_tp_new, _new_PhotoImportProgress },
        { Py_tp_dealloc, _dealloc_PhotoImportProgress },
        { Py_tp_getset, _getset_PhotoImportProgress },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhotoImportProgress =
    {
        "_winrt_Windows_Media_Import.PhotoImportProgress",
        sizeof(py::wrapper::Windows::Media::Import::PhotoImportProgress),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhotoImportProgress
    };

    // ----- Windows.Media.Import Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::Media::Import::PhotoImportDeleteImportedItemsFromSourceResult>::python_type = py::register_python_type(module, _type_name_PhotoImportDeleteImportedItemsFromSourceResult, &_type_spec_PhotoImportDeleteImportedItemsFromSourceResult, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportFindItemsResult>::python_type = py::register_python_type(module, _type_name_PhotoImportFindItemsResult, &_type_spec_PhotoImportFindItemsResult, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportImportItemsResult>::python_type = py::register_python_type(module, _type_name_PhotoImportImportItemsResult, &_type_spec_PhotoImportImportItemsResult, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportItem>::python_type = py::register_python_type(module, _type_name_PhotoImportItem, &_type_spec_PhotoImportItem, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportItemImportedEventArgs>::python_type = py::register_python_type(module, _type_name_PhotoImportItemImportedEventArgs, &_type_spec_PhotoImportItemImportedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportManager>::python_type = py::register_python_type(module, _type_name_PhotoImportManager, &_type_spec_PhotoImportManager, nullptr);
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportOperation>::python_type = py::register_python_type(module, _type_name_PhotoImportOperation, &_type_spec_PhotoImportOperation, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportSelectionChangedEventArgs>::python_type = py::register_python_type(module, _type_name_PhotoImportSelectionChangedEventArgs, &_type_spec_PhotoImportSelectionChangedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportSession>::python_type = py::register_python_type(module, _type_name_PhotoImportSession, &_type_spec_PhotoImportSession, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportSidecar>::python_type = py::register_python_type(module, _type_name_PhotoImportSidecar, &_type_spec_PhotoImportSidecar, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportSource>::python_type = py::register_python_type(module, _type_name_PhotoImportSource, &_type_spec_PhotoImportSource, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportStorageMedium>::python_type = py::register_python_type(module, _type_name_PhotoImportStorageMedium, &_type_spec_PhotoImportStorageMedium, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportVideoSegment>::python_type = py::register_python_type(module, _type_name_PhotoImportVideoSegment, &_type_spec_PhotoImportVideoSegment, bases.get());
            py::winrt_type<winrt::Windows::Media::Import::PhotoImportProgress>::python_type = py::register_python_type(module, _type_name_PhotoImportProgress, &_type_spec_PhotoImportProgress, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.Media.Import");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_Media_Import",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::Media::Import

PyMODINIT_FUNC
PyInit__winrt_Windows_Media_Import (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::Media::Import::module_def);
}
