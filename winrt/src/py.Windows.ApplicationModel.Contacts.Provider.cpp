// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.ApplicationModel.Contacts.Provider.h"

PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::Provider::ContactRemovedEventArgs>::python_type;

namespace py::cpp::Windows::ApplicationModel::Contacts::Provider
{
    // ----- ContactPickerUI class --------------------
    constexpr const char* const _type_name_ContactPickerUI = "ContactPickerUI";

    static PyObject* _new_ContactPickerUI(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactPickerUI);
        return nullptr;
    }

    static void _dealloc_ContactPickerUI(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactPickerUI_AddContact(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Contacts::Contact>(args, 0);

                return py::convert(self->obj.AddContact(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::Windows::ApplicationModel::Contacts::Contact>(args, 1);

                return py::convert(self->obj.AddContact(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactPickerUI_ContainsContact(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                return py::convert(self->obj.ContainsContact(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactPickerUI_RemoveContact(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                self->obj.RemoveContact(param0);
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactPickerUI_get_DesiredFields(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DesiredFields());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPickerUI_get_SelectionMode(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectionMode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPickerUI_get_DesiredFieldsWithContactFieldType(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DesiredFieldsWithContactFieldType());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPickerUI_add_ContactRemoved(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI, winrt::Windows::ApplicationModel::Contacts::Provider::ContactRemovedEventArgs>>(arg);

            return py::convert(self->obj.ContactRemoved(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPickerUI_remove_ContactRemoved(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ContactRemoved(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactPickerUI(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactPickerUI[] = {
        { "add_contact", (PyCFunction)ContactPickerUI_AddContact, METH_VARARGS, nullptr },
        { "contains_contact", (PyCFunction)ContactPickerUI_ContainsContact, METH_VARARGS, nullptr },
        { "remove_contact", (PyCFunction)ContactPickerUI_RemoveContact, METH_VARARGS, nullptr },
        { "add_contact_removed", (PyCFunction)ContactPickerUI_add_ContactRemoved, METH_O, nullptr },
        { "remove_contact_removed", (PyCFunction)ContactPickerUI_remove_ContactRemoved, METH_O, nullptr },
        { "_from", (PyCFunction)_from_ContactPickerUI, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactPickerUI[] = {
        { const_cast<char*>("desired_fields"), (getter)ContactPickerUI_get_DesiredFields, nullptr, nullptr, nullptr },
        { const_cast<char*>("selection_mode"), (getter)ContactPickerUI_get_SelectionMode, nullptr, nullptr, nullptr },
        { const_cast<char*>("desired_fields_with_contact_field_type"), (getter)ContactPickerUI_get_DesiredFieldsWithContactFieldType, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactPickerUI[] = 
    {
        { Py_tp_new, _new_ContactPickerUI },
        { Py_tp_dealloc, _dealloc_ContactPickerUI },
        { Py_tp_methods, _methods_ContactPickerUI },
        { Py_tp_getset, _getset_ContactPickerUI },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactPickerUI =
    {
        "_winrt_Windows_ApplicationModel_Contacts_Provider.ContactPickerUI",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactPickerUI
    };

    // ----- ContactRemovedEventArgs class --------------------
    constexpr const char* const _type_name_ContactRemovedEventArgs = "ContactRemovedEventArgs";

    static PyObject* _new_ContactRemovedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactRemovedEventArgs);
        return nullptr;
    }

    static void _dealloc_ContactRemovedEventArgs(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactRemovedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactRemovedEventArgs_get_Id(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactRemovedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Id());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactRemovedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::Provider::ContactRemovedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactRemovedEventArgs[] = {
        { "_from", (PyCFunction)_from_ContactRemovedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactRemovedEventArgs[] = {
        { const_cast<char*>("id"), (getter)ContactRemovedEventArgs_get_Id, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactRemovedEventArgs[] = 
    {
        { Py_tp_new, _new_ContactRemovedEventArgs },
        { Py_tp_dealloc, _dealloc_ContactRemovedEventArgs },
        { Py_tp_methods, _methods_ContactRemovedEventArgs },
        { Py_tp_getset, _getset_ContactRemovedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactRemovedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Contacts_Provider.ContactRemovedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::Provider::ContactRemovedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactRemovedEventArgs
    };

    // ----- Windows.ApplicationModel.Contacts.Provider Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::Provider::ContactPickerUI>::python_type = py::register_python_type(module, _type_name_ContactPickerUI, &_type_spec_ContactPickerUI, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::Provider::ContactRemovedEventArgs>::python_type = py::register_python_type(module, _type_name_ContactRemovedEventArgs, &_type_spec_ContactRemovedEventArgs, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.ApplicationModel.Contacts.Provider");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_ApplicationModel_Contacts_Provider",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::ApplicationModel::Contacts::Provider

PyMODINIT_FUNC
PyInit__winrt_Windows_ApplicationModel_Contacts_Provider (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::ApplicationModel::Contacts::Provider::module_def);
}
