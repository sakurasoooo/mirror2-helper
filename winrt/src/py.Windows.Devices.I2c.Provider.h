// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#include <winrt/Windows.Devices.I2c.Provider.h>

namespace py::proj::Windows::Devices::I2c::Provider
{}

namespace py::impl::Windows::Devices::I2c::Provider
{}

namespace py::wrapper::Windows::Devices::I2c::Provider
{
    using ProviderI2cConnectionSettings = py::winrt_wrapper<winrt::Windows::Devices::I2c::Provider::ProviderI2cConnectionSettings>;
    using II2cControllerProvider = py::winrt_wrapper<winrt::Windows::Devices::I2c::Provider::II2cControllerProvider>;
    using II2cDeviceProvider = py::winrt_wrapper<winrt::Windows::Devices::I2c::Provider::II2cDeviceProvider>;
    using II2cProvider = py::winrt_wrapper<winrt::Windows::Devices::I2c::Provider::II2cProvider>;
    using ProviderI2cTransferResult = py::winrt_struct_wrapper<winrt::Windows::Devices::I2c::Provider::ProviderI2cTransferResult>;
}

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::Devices::I2c::Provider::ProviderI2cConnectionSettings>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::I2c::Provider::II2cControllerProvider>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::I2c::Provider::II2cDeviceProvider>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::I2c::Provider::II2cProvider>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Devices::I2c::Provider::ProviderI2cTransferResult>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct converter<winrt::Windows::Devices::I2c::Provider::ProviderI2cTransferResult>
    {
        static PyObject* convert(winrt::Windows::Devices::I2c::Provider::ProviderI2cTransferResult instance) noexcept;
        static winrt::Windows::Devices::I2c::Provider::ProviderI2cTransferResult convert_to(PyObject* obj);
    };

}
