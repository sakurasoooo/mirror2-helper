// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Devices.Enumeration.h")
#include "py.Windows.Devices.Enumeration.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Media.Capture.h")
#include "py.Windows.Media.Capture.h"
#endif

#if __has_include("py.Windows.Media.Devices.Core.h")
#include "py.Windows.Media.Devices.Core.h"
#endif

#if __has_include("py.Windows.Media.MediaProperties.h")
#include "py.Windows.Media.MediaProperties.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#include <winrt/Windows.Media.Devices.h>

namespace py::proj::Windows::Media::Devices
{}

namespace py::impl::Windows::Media::Devices
{}

namespace py::wrapper::Windows::Media::Devices
{
    using AdvancedPhotoCaptureSettings = py::winrt_wrapper<winrt::Windows::Media::Devices::AdvancedPhotoCaptureSettings>;
    using AdvancedPhotoControl = py::winrt_wrapper<winrt::Windows::Media::Devices::AdvancedPhotoControl>;
    using AudioDeviceController = py::winrt_wrapper<winrt::Windows::Media::Devices::AudioDeviceController>;
    using AudioDeviceModule = py::winrt_wrapper<winrt::Windows::Media::Devices::AudioDeviceModule>;
    using AudioDeviceModuleNotificationEventArgs = py::winrt_wrapper<winrt::Windows::Media::Devices::AudioDeviceModuleNotificationEventArgs>;
    using AudioDeviceModulesManager = py::winrt_wrapper<winrt::Windows::Media::Devices::AudioDeviceModulesManager>;
    using CameraOcclusionInfo = py::winrt_wrapper<winrt::Windows::Media::Devices::CameraOcclusionInfo>;
    using CameraOcclusionState = py::winrt_wrapper<winrt::Windows::Media::Devices::CameraOcclusionState>;
    using CameraOcclusionStateChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Devices::CameraOcclusionStateChangedEventArgs>;
    using DefaultAudioCaptureDeviceChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Devices::DefaultAudioCaptureDeviceChangedEventArgs>;
    using DefaultAudioRenderDeviceChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Devices::DefaultAudioRenderDeviceChangedEventArgs>;
    using DigitalWindowBounds = py::winrt_wrapper<winrt::Windows::Media::Devices::DigitalWindowBounds>;
    using DigitalWindowCapability = py::winrt_wrapper<winrt::Windows::Media::Devices::DigitalWindowCapability>;
    using DigitalWindowControl = py::winrt_wrapper<winrt::Windows::Media::Devices::DigitalWindowControl>;
    using ExposureCompensationControl = py::winrt_wrapper<winrt::Windows::Media::Devices::ExposureCompensationControl>;
    using ExposureControl = py::winrt_wrapper<winrt::Windows::Media::Devices::ExposureControl>;
    using ExposurePriorityVideoControl = py::winrt_wrapper<winrt::Windows::Media::Devices::ExposurePriorityVideoControl>;
    using FlashControl = py::winrt_wrapper<winrt::Windows::Media::Devices::FlashControl>;
    using FocusControl = py::winrt_wrapper<winrt::Windows::Media::Devices::FocusControl>;
    using FocusSettings = py::winrt_wrapper<winrt::Windows::Media::Devices::FocusSettings>;
    using HdrVideoControl = py::winrt_wrapper<winrt::Windows::Media::Devices::HdrVideoControl>;
    using InfraredTorchControl = py::winrt_wrapper<winrt::Windows::Media::Devices::InfraredTorchControl>;
    using IsoSpeedControl = py::winrt_wrapper<winrt::Windows::Media::Devices::IsoSpeedControl>;
    using LowLagPhotoControl = py::winrt_wrapper<winrt::Windows::Media::Devices::LowLagPhotoControl>;
    using LowLagPhotoSequenceControl = py::winrt_wrapper<winrt::Windows::Media::Devices::LowLagPhotoSequenceControl>;
    using MediaDevice = py::winrt_wrapper<winrt::Windows::Media::Devices::MediaDevice>;
    using MediaDeviceControl = py::winrt_wrapper<winrt::Windows::Media::Devices::MediaDeviceControl>;
    using MediaDeviceControlCapabilities = py::winrt_wrapper<winrt::Windows::Media::Devices::MediaDeviceControlCapabilities>;
    using ModuleCommandResult = py::winrt_wrapper<winrt::Windows::Media::Devices::ModuleCommandResult>;
    using OpticalImageStabilizationControl = py::winrt_wrapper<winrt::Windows::Media::Devices::OpticalImageStabilizationControl>;
    using PanelBasedOptimizationControl = py::winrt_wrapper<winrt::Windows::Media::Devices::PanelBasedOptimizationControl>;
    using PhotoConfirmationControl = py::winrt_wrapper<winrt::Windows::Media::Devices::PhotoConfirmationControl>;
    using RegionOfInterest = py::winrt_wrapper<winrt::Windows::Media::Devices::RegionOfInterest>;
    using RegionsOfInterestControl = py::winrt_wrapper<winrt::Windows::Media::Devices::RegionsOfInterestControl>;
    using SceneModeControl = py::winrt_wrapper<winrt::Windows::Media::Devices::SceneModeControl>;
    using TorchControl = py::winrt_wrapper<winrt::Windows::Media::Devices::TorchControl>;
    using VideoDeviceController = py::winrt_wrapper<winrt::Windows::Media::Devices::VideoDeviceController>;
    using VideoDeviceControllerGetDevicePropertyResult = py::winrt_wrapper<winrt::Windows::Media::Devices::VideoDeviceControllerGetDevicePropertyResult>;
    using VideoTemporalDenoisingControl = py::winrt_wrapper<winrt::Windows::Media::Devices::VideoTemporalDenoisingControl>;
    using WhiteBalanceControl = py::winrt_wrapper<winrt::Windows::Media::Devices::WhiteBalanceControl>;
    using ZoomControl = py::winrt_wrapper<winrt::Windows::Media::Devices::ZoomControl>;
    using ZoomSettings = py::winrt_wrapper<winrt::Windows::Media::Devices::ZoomSettings>;
    using IDefaultAudioDeviceChangedEventArgs = py::winrt_wrapper<winrt::Windows::Media::Devices::IDefaultAudioDeviceChangedEventArgs>;
    using IMediaDeviceController = py::winrt_wrapper<winrt::Windows::Media::Devices::IMediaDeviceController>;
}

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::Media::Devices::AdvancedPhotoCaptureSettings>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::AdvancedPhotoControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::AudioDeviceController>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::AudioDeviceModule>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::AudioDeviceModuleNotificationEventArgs>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::AudioDeviceModulesManager>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::CameraOcclusionInfo>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::CameraOcclusionState>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::CameraOcclusionStateChangedEventArgs>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::DefaultAudioCaptureDeviceChangedEventArgs>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::DefaultAudioRenderDeviceChangedEventArgs>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::DigitalWindowBounds>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::DigitalWindowCapability>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::DigitalWindowControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::ExposureCompensationControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::ExposureControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::ExposurePriorityVideoControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::FlashControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::FocusControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::FocusSettings>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::HdrVideoControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::InfraredTorchControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::IsoSpeedControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::LowLagPhotoControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::LowLagPhotoSequenceControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::MediaDevice>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::MediaDeviceControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::MediaDeviceControlCapabilities>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::ModuleCommandResult>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::OpticalImageStabilizationControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::PanelBasedOptimizationControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::PhotoConfirmationControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::RegionOfInterest>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::RegionsOfInterestControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::SceneModeControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::TorchControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::VideoDeviceController>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::VideoDeviceControllerGetDevicePropertyResult>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::VideoTemporalDenoisingControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::WhiteBalanceControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::ZoomControl>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::ZoomSettings>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::IDefaultAudioDeviceChangedEventArgs>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Media::Devices::IMediaDeviceController>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

}
