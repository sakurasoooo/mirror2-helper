// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.ApplicationModel.Contacts.DataProvider.h"

PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderTriggerDetails>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs>::python_type;

namespace py::cpp::Windows::ApplicationModel::Contacts::DataProvider
{
    // ----- ContactDataProviderConnection class --------------------
    constexpr const char* const _type_name_ContactDataProviderConnection = "ContactDataProviderConnection";

    static PyObject* _new_ContactDataProviderConnection(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactDataProviderConnection);
        return nullptr;
    }

    static void _dealloc_ContactDataProviderConnection(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactDataProviderConnection_Start(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Start();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactDataProviderConnection_add_ServerSearchReadBatchRequested(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection, winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs>>(arg);

            return py::convert(self->obj.ServerSearchReadBatchRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactDataProviderConnection_remove_ServerSearchReadBatchRequested(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ServerSearchReadBatchRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactDataProviderConnection_add_SyncRequested(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection, winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs>>(arg);

            return py::convert(self->obj.SyncRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactDataProviderConnection_remove_SyncRequested(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SyncRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactDataProviderConnection_add_CreateOrUpdateContactRequested(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection, winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs>>(arg);

            return py::convert(self->obj.CreateOrUpdateContactRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactDataProviderConnection_remove_CreateOrUpdateContactRequested(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.CreateOrUpdateContactRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactDataProviderConnection_add_DeleteContactRequested(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection, winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs>>(arg);

            return py::convert(self->obj.DeleteContactRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactDataProviderConnection_remove_DeleteContactRequested(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.DeleteContactRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactDataProviderConnection(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactDataProviderConnection[] = {
        { "start", (PyCFunction)ContactDataProviderConnection_Start, METH_VARARGS, nullptr },
        { "add_server_search_read_batch_requested", (PyCFunction)ContactDataProviderConnection_add_ServerSearchReadBatchRequested, METH_O, nullptr },
        { "remove_server_search_read_batch_requested", (PyCFunction)ContactDataProviderConnection_remove_ServerSearchReadBatchRequested, METH_O, nullptr },
        { "add_sync_requested", (PyCFunction)ContactDataProviderConnection_add_SyncRequested, METH_O, nullptr },
        { "remove_sync_requested", (PyCFunction)ContactDataProviderConnection_remove_SyncRequested, METH_O, nullptr },
        { "add_create_or_update_contact_requested", (PyCFunction)ContactDataProviderConnection_add_CreateOrUpdateContactRequested, METH_O, nullptr },
        { "remove_create_or_update_contact_requested", (PyCFunction)ContactDataProviderConnection_remove_CreateOrUpdateContactRequested, METH_O, nullptr },
        { "add_delete_contact_requested", (PyCFunction)ContactDataProviderConnection_add_DeleteContactRequested, METH_O, nullptr },
        { "remove_delete_contact_requested", (PyCFunction)ContactDataProviderConnection_remove_DeleteContactRequested, METH_O, nullptr },
        { "_from", (PyCFunction)_from_ContactDataProviderConnection, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactDataProviderConnection[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactDataProviderConnection[] = 
    {
        { Py_tp_new, _new_ContactDataProviderConnection },
        { Py_tp_dealloc, _dealloc_ContactDataProviderConnection },
        { Py_tp_methods, _methods_ContactDataProviderConnection },
        { Py_tp_getset, _getset_ContactDataProviderConnection },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactDataProviderConnection =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactDataProviderConnection",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactDataProviderConnection
    };

    // ----- ContactDataProviderTriggerDetails class --------------------
    constexpr const char* const _type_name_ContactDataProviderTriggerDetails = "ContactDataProviderTriggerDetails";

    static PyObject* _new_ContactDataProviderTriggerDetails(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactDataProviderTriggerDetails);
        return nullptr;
    }

    static void _dealloc_ContactDataProviderTriggerDetails(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderTriggerDetails* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactDataProviderTriggerDetails_get_Connection(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderTriggerDetails* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Connection());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactDataProviderTriggerDetails(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderTriggerDetails>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactDataProviderTriggerDetails[] = {
        { "_from", (PyCFunction)_from_ContactDataProviderTriggerDetails, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactDataProviderTriggerDetails[] = {
        { const_cast<char*>("connection"), (getter)ContactDataProviderTriggerDetails_get_Connection, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactDataProviderTriggerDetails[] = 
    {
        { Py_tp_new, _new_ContactDataProviderTriggerDetails },
        { Py_tp_dealloc, _dealloc_ContactDataProviderTriggerDetails },
        { Py_tp_methods, _methods_ContactDataProviderTriggerDetails },
        { Py_tp_getset, _getset_ContactDataProviderTriggerDetails },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactDataProviderTriggerDetails =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactDataProviderTriggerDetails",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderTriggerDetails),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactDataProviderTriggerDetails
    };

    // ----- ContactListCreateOrUpdateContactRequest class --------------------
    constexpr const char* const _type_name_ContactListCreateOrUpdateContactRequest = "ContactListCreateOrUpdateContactRequest";

    static PyObject* _new_ContactListCreateOrUpdateContactRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactListCreateOrUpdateContactRequest);
        return nullptr;
    }

    static void _dealloc_ContactListCreateOrUpdateContactRequest(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactListCreateOrUpdateContactRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Contacts::Contact>(args, 0);

                return py::convert(self->obj.ReportCompletedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListCreateOrUpdateContactRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListCreateOrUpdateContactRequest_get_Contact(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Contact());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactListCreateOrUpdateContactRequest_get_ContactListId(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContactListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactListCreateOrUpdateContactRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactListCreateOrUpdateContactRequest[] = {
        { "report_completed_async", (PyCFunction)ContactListCreateOrUpdateContactRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)ContactListCreateOrUpdateContactRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_ContactListCreateOrUpdateContactRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactListCreateOrUpdateContactRequest[] = {
        { const_cast<char*>("contact"), (getter)ContactListCreateOrUpdateContactRequest_get_Contact, nullptr, nullptr, nullptr },
        { const_cast<char*>("contact_list_id"), (getter)ContactListCreateOrUpdateContactRequest_get_ContactListId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactListCreateOrUpdateContactRequest[] = 
    {
        { Py_tp_new, _new_ContactListCreateOrUpdateContactRequest },
        { Py_tp_dealloc, _dealloc_ContactListCreateOrUpdateContactRequest },
        { Py_tp_methods, _methods_ContactListCreateOrUpdateContactRequest },
        { Py_tp_getset, _getset_ContactListCreateOrUpdateContactRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactListCreateOrUpdateContactRequest =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactListCreateOrUpdateContactRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactListCreateOrUpdateContactRequest
    };

    // ----- ContactListCreateOrUpdateContactRequestEventArgs class --------------------
    constexpr const char* const _type_name_ContactListCreateOrUpdateContactRequestEventArgs = "ContactListCreateOrUpdateContactRequestEventArgs";

    static PyObject* _new_ContactListCreateOrUpdateContactRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactListCreateOrUpdateContactRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_ContactListCreateOrUpdateContactRequestEventArgs(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactListCreateOrUpdateContactRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListCreateOrUpdateContactRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactListCreateOrUpdateContactRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactListCreateOrUpdateContactRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)ContactListCreateOrUpdateContactRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_ContactListCreateOrUpdateContactRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactListCreateOrUpdateContactRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)ContactListCreateOrUpdateContactRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactListCreateOrUpdateContactRequestEventArgs[] = 
    {
        { Py_tp_new, _new_ContactListCreateOrUpdateContactRequestEventArgs },
        { Py_tp_dealloc, _dealloc_ContactListCreateOrUpdateContactRequestEventArgs },
        { Py_tp_methods, _methods_ContactListCreateOrUpdateContactRequestEventArgs },
        { Py_tp_getset, _getset_ContactListCreateOrUpdateContactRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactListCreateOrUpdateContactRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactListCreateOrUpdateContactRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactListCreateOrUpdateContactRequestEventArgs
    };

    // ----- ContactListDeleteContactRequest class --------------------
    constexpr const char* const _type_name_ContactListDeleteContactRequest = "ContactListDeleteContactRequest";

    static PyObject* _new_ContactListDeleteContactRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactListDeleteContactRequest);
        return nullptr;
    }

    static void _dealloc_ContactListDeleteContactRequest(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactListDeleteContactRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListDeleteContactRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListDeleteContactRequest_get_ContactId(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContactId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactListDeleteContactRequest_get_ContactListId(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContactListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactListDeleteContactRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactListDeleteContactRequest[] = {
        { "report_completed_async", (PyCFunction)ContactListDeleteContactRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)ContactListDeleteContactRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_ContactListDeleteContactRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactListDeleteContactRequest[] = {
        { const_cast<char*>("contact_id"), (getter)ContactListDeleteContactRequest_get_ContactId, nullptr, nullptr, nullptr },
        { const_cast<char*>("contact_list_id"), (getter)ContactListDeleteContactRequest_get_ContactListId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactListDeleteContactRequest[] = 
    {
        { Py_tp_new, _new_ContactListDeleteContactRequest },
        { Py_tp_dealloc, _dealloc_ContactListDeleteContactRequest },
        { Py_tp_methods, _methods_ContactListDeleteContactRequest },
        { Py_tp_getset, _getset_ContactListDeleteContactRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactListDeleteContactRequest =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactListDeleteContactRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactListDeleteContactRequest
    };

    // ----- ContactListDeleteContactRequestEventArgs class --------------------
    constexpr const char* const _type_name_ContactListDeleteContactRequestEventArgs = "ContactListDeleteContactRequestEventArgs";

    static PyObject* _new_ContactListDeleteContactRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactListDeleteContactRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_ContactListDeleteContactRequestEventArgs(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactListDeleteContactRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListDeleteContactRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactListDeleteContactRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactListDeleteContactRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)ContactListDeleteContactRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_ContactListDeleteContactRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactListDeleteContactRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)ContactListDeleteContactRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactListDeleteContactRequestEventArgs[] = 
    {
        { Py_tp_new, _new_ContactListDeleteContactRequestEventArgs },
        { Py_tp_dealloc, _dealloc_ContactListDeleteContactRequestEventArgs },
        { Py_tp_methods, _methods_ContactListDeleteContactRequestEventArgs },
        { Py_tp_getset, _getset_ContactListDeleteContactRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactListDeleteContactRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactListDeleteContactRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactListDeleteContactRequestEventArgs
    };

    // ----- ContactListServerSearchReadBatchRequest class --------------------
    constexpr const char* const _type_name_ContactListServerSearchReadBatchRequest = "ContactListServerSearchReadBatchRequest";

    static PyObject* _new_ContactListServerSearchReadBatchRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactListServerSearchReadBatchRequest);
        return nullptr;
    }

    static void _dealloc_ContactListServerSearchReadBatchRequest(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactListServerSearchReadBatchRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListServerSearchReadBatchRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Contacts::ContactBatchStatus>(args, 0);

                return py::convert(self->obj.ReportFailedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListServerSearchReadBatchRequest_SaveContactAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Contacts::Contact>(args, 0);

                return py::convert(self->obj.SaveContactAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListServerSearchReadBatchRequest_get_ContactListId(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContactListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactListServerSearchReadBatchRequest_get_Options(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Options());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactListServerSearchReadBatchRequest_get_SessionId(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SessionId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactListServerSearchReadBatchRequest_get_SuggestedBatchSize(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SuggestedBatchSize());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactListServerSearchReadBatchRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactListServerSearchReadBatchRequest[] = {
        { "report_completed_async", (PyCFunction)ContactListServerSearchReadBatchRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)ContactListServerSearchReadBatchRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "save_contact_async", (PyCFunction)ContactListServerSearchReadBatchRequest_SaveContactAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_ContactListServerSearchReadBatchRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactListServerSearchReadBatchRequest[] = {
        { const_cast<char*>("contact_list_id"), (getter)ContactListServerSearchReadBatchRequest_get_ContactListId, nullptr, nullptr, nullptr },
        { const_cast<char*>("options"), (getter)ContactListServerSearchReadBatchRequest_get_Options, nullptr, nullptr, nullptr },
        { const_cast<char*>("session_id"), (getter)ContactListServerSearchReadBatchRequest_get_SessionId, nullptr, nullptr, nullptr },
        { const_cast<char*>("suggested_batch_size"), (getter)ContactListServerSearchReadBatchRequest_get_SuggestedBatchSize, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactListServerSearchReadBatchRequest[] = 
    {
        { Py_tp_new, _new_ContactListServerSearchReadBatchRequest },
        { Py_tp_dealloc, _dealloc_ContactListServerSearchReadBatchRequest },
        { Py_tp_methods, _methods_ContactListServerSearchReadBatchRequest },
        { Py_tp_getset, _getset_ContactListServerSearchReadBatchRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactListServerSearchReadBatchRequest =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactListServerSearchReadBatchRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactListServerSearchReadBatchRequest
    };

    // ----- ContactListServerSearchReadBatchRequestEventArgs class --------------------
    constexpr const char* const _type_name_ContactListServerSearchReadBatchRequestEventArgs = "ContactListServerSearchReadBatchRequestEventArgs";

    static PyObject* _new_ContactListServerSearchReadBatchRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactListServerSearchReadBatchRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_ContactListServerSearchReadBatchRequestEventArgs(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactListServerSearchReadBatchRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListServerSearchReadBatchRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactListServerSearchReadBatchRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactListServerSearchReadBatchRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)ContactListServerSearchReadBatchRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_ContactListServerSearchReadBatchRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactListServerSearchReadBatchRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)ContactListServerSearchReadBatchRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactListServerSearchReadBatchRequestEventArgs[] = 
    {
        { Py_tp_new, _new_ContactListServerSearchReadBatchRequestEventArgs },
        { Py_tp_dealloc, _dealloc_ContactListServerSearchReadBatchRequestEventArgs },
        { Py_tp_methods, _methods_ContactListServerSearchReadBatchRequestEventArgs },
        { Py_tp_getset, _getset_ContactListServerSearchReadBatchRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactListServerSearchReadBatchRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactListServerSearchReadBatchRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactListServerSearchReadBatchRequestEventArgs
    };

    // ----- ContactListSyncManagerSyncRequest class --------------------
    constexpr const char* const _type_name_ContactListSyncManagerSyncRequest = "ContactListSyncManagerSyncRequest";

    static PyObject* _new_ContactListSyncManagerSyncRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactListSyncManagerSyncRequest);
        return nullptr;
    }

    static void _dealloc_ContactListSyncManagerSyncRequest(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactListSyncManagerSyncRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListSyncManagerSyncRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListSyncManagerSyncRequest_get_ContactListId(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContactListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactListSyncManagerSyncRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactListSyncManagerSyncRequest[] = {
        { "report_completed_async", (PyCFunction)ContactListSyncManagerSyncRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)ContactListSyncManagerSyncRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_ContactListSyncManagerSyncRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactListSyncManagerSyncRequest[] = {
        { const_cast<char*>("contact_list_id"), (getter)ContactListSyncManagerSyncRequest_get_ContactListId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactListSyncManagerSyncRequest[] = 
    {
        { Py_tp_new, _new_ContactListSyncManagerSyncRequest },
        { Py_tp_dealloc, _dealloc_ContactListSyncManagerSyncRequest },
        { Py_tp_methods, _methods_ContactListSyncManagerSyncRequest },
        { Py_tp_getset, _getset_ContactListSyncManagerSyncRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactListSyncManagerSyncRequest =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactListSyncManagerSyncRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactListSyncManagerSyncRequest
    };

    // ----- ContactListSyncManagerSyncRequestEventArgs class --------------------
    constexpr const char* const _type_name_ContactListSyncManagerSyncRequestEventArgs = "ContactListSyncManagerSyncRequestEventArgs";

    static PyObject* _new_ContactListSyncManagerSyncRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactListSyncManagerSyncRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_ContactListSyncManagerSyncRequestEventArgs(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactListSyncManagerSyncRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ContactListSyncManagerSyncRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactListSyncManagerSyncRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactListSyncManagerSyncRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)ContactListSyncManagerSyncRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_ContactListSyncManagerSyncRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactListSyncManagerSyncRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)ContactListSyncManagerSyncRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactListSyncManagerSyncRequestEventArgs[] = 
    {
        { Py_tp_new, _new_ContactListSyncManagerSyncRequestEventArgs },
        { Py_tp_dealloc, _dealloc_ContactListSyncManagerSyncRequestEventArgs },
        { Py_tp_methods, _methods_ContactListSyncManagerSyncRequestEventArgs },
        { Py_tp_getset, _getset_ContactListSyncManagerSyncRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactListSyncManagerSyncRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider.ContactListSyncManagerSyncRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactListSyncManagerSyncRequestEventArgs
    };

    // ----- Windows.ApplicationModel.Contacts.DataProvider Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection>::python_type = py::register_python_type(module, _type_name_ContactDataProviderConnection, &_type_spec_ContactDataProviderConnection, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderTriggerDetails>::python_type = py::register_python_type(module, _type_name_ContactDataProviderTriggerDetails, &_type_spec_ContactDataProviderTriggerDetails, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest>::python_type = py::register_python_type(module, _type_name_ContactListCreateOrUpdateContactRequest, &_type_spec_ContactListCreateOrUpdateContactRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs>::python_type = py::register_python_type(module, _type_name_ContactListCreateOrUpdateContactRequestEventArgs, &_type_spec_ContactListCreateOrUpdateContactRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest>::python_type = py::register_python_type(module, _type_name_ContactListDeleteContactRequest, &_type_spec_ContactListDeleteContactRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs>::python_type = py::register_python_type(module, _type_name_ContactListDeleteContactRequestEventArgs, &_type_spec_ContactListDeleteContactRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest>::python_type = py::register_python_type(module, _type_name_ContactListServerSearchReadBatchRequest, &_type_spec_ContactListServerSearchReadBatchRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs>::python_type = py::register_python_type(module, _type_name_ContactListServerSearchReadBatchRequestEventArgs, &_type_spec_ContactListServerSearchReadBatchRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest>::python_type = py::register_python_type(module, _type_name_ContactListSyncManagerSyncRequest, &_type_spec_ContactListSyncManagerSyncRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs>::python_type = py::register_python_type(module, _type_name_ContactListSyncManagerSyncRequestEventArgs, &_type_spec_ContactListSyncManagerSyncRequestEventArgs, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.ApplicationModel.Contacts.DataProvider");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_ApplicationModel_Contacts_DataProvider",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::ApplicationModel::Contacts::DataProvider

PyMODINIT_FUNC
PyInit__winrt_Windows_ApplicationModel_Contacts_DataProvider (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::ApplicationModel::Contacts::DataProvider::module_def);
}
