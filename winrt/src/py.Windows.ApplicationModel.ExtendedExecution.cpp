// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.ApplicationModel.ExtendedExecution.h"

PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession>::python_type;

namespace py::cpp::Windows::ApplicationModel::ExtendedExecution
{
    // ----- ExtendedExecutionRevokedEventArgs class --------------------
    constexpr const char* const _type_name_ExtendedExecutionRevokedEventArgs = "ExtendedExecutionRevokedEventArgs";

    static PyObject* _new_ExtendedExecutionRevokedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ExtendedExecutionRevokedEventArgs);
        return nullptr;
    }

    static void _dealloc_ExtendedExecutionRevokedEventArgs(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ExtendedExecutionRevokedEventArgs_get_Reason(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Reason());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ExtendedExecutionRevokedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ExtendedExecutionRevokedEventArgs[] = {
        { "_from", (PyCFunction)_from_ExtendedExecutionRevokedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ExtendedExecutionRevokedEventArgs[] = {
        { const_cast<char*>("reason"), (getter)ExtendedExecutionRevokedEventArgs_get_Reason, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ExtendedExecutionRevokedEventArgs[] = 
    {
        { Py_tp_new, _new_ExtendedExecutionRevokedEventArgs },
        { Py_tp_dealloc, _dealloc_ExtendedExecutionRevokedEventArgs },
        { Py_tp_methods, _methods_ExtendedExecutionRevokedEventArgs },
        { Py_tp_getset, _getset_ExtendedExecutionRevokedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ExtendedExecutionRevokedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_ExtendedExecution.ExtendedExecutionRevokedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ExtendedExecutionRevokedEventArgs
    };

    // ----- ExtendedExecutionSession class --------------------
    constexpr const char* const _type_name_ExtendedExecutionSession = "ExtendedExecutionSession";

    static PyObject* _new_ExtendedExecutionSession(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 0)
        {
            try
            {
                winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession instance{  };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_ExtendedExecutionSession(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ExtendedExecutionSession_Close(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Close();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ExtendedExecutionSession_RequestExtensionAsync(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.RequestExtensionAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ExtendedExecutionSession_get_Reason(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Reason());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int ExtendedExecutionSession_put_Reason(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionReason>(arg);

            self->obj.Reason(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* ExtendedExecutionSession_get_PercentProgress(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PercentProgress());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int ExtendedExecutionSession_put_PercentProgress(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<uint32_t>(arg);

            self->obj.PercentProgress(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* ExtendedExecutionSession_get_Description(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Description());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int ExtendedExecutionSession_put_Description(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::hstring>(arg);

            self->obj.Description(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* ExtendedExecutionSession_add_Revoked(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Foundation::IInspectable, winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedEventArgs>>(arg);

            return py::convert(self->obj.Revoked(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ExtendedExecutionSession_remove_Revoked(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.Revoked(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ExtendedExecutionSession(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _enter_ExtendedExecutionSession(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self) noexcept
    {
        Py_INCREF(self);
        return (PyObject*)self;
    }

    static PyObject* _exit_ExtendedExecutionSession(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession* self) noexcept
    {
        try
        {
            self->obj.Close();
            Py_RETURN_FALSE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ExtendedExecutionSession[] = {
        { "close", (PyCFunction)ExtendedExecutionSession_Close, METH_VARARGS, nullptr },
        { "request_extension_async", (PyCFunction)ExtendedExecutionSession_RequestExtensionAsync, METH_VARARGS, nullptr },
        { "add_revoked", (PyCFunction)ExtendedExecutionSession_add_Revoked, METH_O, nullptr },
        { "remove_revoked", (PyCFunction)ExtendedExecutionSession_remove_Revoked, METH_O, nullptr },
        { "_from", (PyCFunction)_from_ExtendedExecutionSession, METH_O | METH_STATIC, nullptr },
        { "__enter__", (PyCFunction)_enter_ExtendedExecutionSession, METH_NOARGS, nullptr },
        { "__exit__",  (PyCFunction)_exit_ExtendedExecutionSession, METH_VARARGS, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ExtendedExecutionSession[] = {
        { const_cast<char*>("reason"), (getter)ExtendedExecutionSession_get_Reason, (setter)ExtendedExecutionSession_put_Reason, nullptr, nullptr },
        { const_cast<char*>("percent_progress"), (getter)ExtendedExecutionSession_get_PercentProgress, (setter)ExtendedExecutionSession_put_PercentProgress, nullptr, nullptr },
        { const_cast<char*>("description"), (getter)ExtendedExecutionSession_get_Description, (setter)ExtendedExecutionSession_put_Description, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ExtendedExecutionSession[] = 
    {
        { Py_tp_new, _new_ExtendedExecutionSession },
        { Py_tp_dealloc, _dealloc_ExtendedExecutionSession },
        { Py_tp_methods, _methods_ExtendedExecutionSession },
        { Py_tp_getset, _getset_ExtendedExecutionSession },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ExtendedExecutionSession =
    {
        "_winrt_Windows_ApplicationModel_ExtendedExecution.ExtendedExecutionSession",
        sizeof(py::wrapper::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ExtendedExecutionSession
    };

    // ----- Windows.ApplicationModel.ExtendedExecution Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedEventArgs>::python_type = py::register_python_type(module, _type_name_ExtendedExecutionRevokedEventArgs, &_type_spec_ExtendedExecutionRevokedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession>::python_type = py::register_python_type(module, _type_name_ExtendedExecutionSession, &_type_spec_ExtendedExecutionSession, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.ApplicationModel.ExtendedExecution");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_ApplicationModel_ExtendedExecution",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::ApplicationModel::ExtendedExecution

PyMODINIT_FUNC
PyInit__winrt_Windows_ApplicationModel_ExtendedExecution (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::ApplicationModel::ExtendedExecution::module_def);
}
