// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Devices.Haptics.h")
#include "py.Windows.Devices.Haptics.h"
#endif

#if __has_include("py.Windows.Devices.Power.h")
#include "py.Windows.Devices.Power.h"
#endif

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Gaming.Input.ForceFeedback.h")
#include "py.Windows.Gaming.Input.ForceFeedback.h"
#endif

#if __has_include("py.Windows.System.h")
#include "py.Windows.System.h"
#endif

#include <winrt/Windows.Gaming.Input.h>

namespace py::proj::Windows::Gaming::Input
{}

namespace py::impl::Windows::Gaming::Input
{}

namespace py::wrapper::Windows::Gaming::Input
{
    using ArcadeStick = py::winrt_wrapper<winrt::Windows::Gaming::Input::ArcadeStick>;
    using FlightStick = py::winrt_wrapper<winrt::Windows::Gaming::Input::FlightStick>;
    using Gamepad = py::winrt_wrapper<winrt::Windows::Gaming::Input::Gamepad>;
    using Headset = py::winrt_wrapper<winrt::Windows::Gaming::Input::Headset>;
    using RacingWheel = py::winrt_wrapper<winrt::Windows::Gaming::Input::RacingWheel>;
    using RawGameController = py::winrt_wrapper<winrt::Windows::Gaming::Input::RawGameController>;
    using UINavigationController = py::winrt_wrapper<winrt::Windows::Gaming::Input::UINavigationController>;
    using IGameController = py::winrt_wrapper<winrt::Windows::Gaming::Input::IGameController>;
    using IGameControllerBatteryInfo = py::winrt_wrapper<winrt::Windows::Gaming::Input::IGameControllerBatteryInfo>;
    using ArcadeStickReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::ArcadeStickReading>;
    using FlightStickReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::FlightStickReading>;
    using GamepadReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::GamepadReading>;
    using GamepadVibration = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::GamepadVibration>;
    using RacingWheelReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::RacingWheelReading>;
    using UINavigationReading = py::winrt_struct_wrapper<winrt::Windows::Gaming::Input::UINavigationReading>;
}

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::ArcadeStick>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::FlightStick>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::Gamepad>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::Headset>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::RacingWheel>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::RawGameController>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::UINavigationController>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::IGameController>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::IGameControllerBatteryInfo>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::ArcadeStickReading>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::FlightStickReading>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::GamepadReading>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::GamepadVibration>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::RacingWheelReading>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Gaming::Input::UINavigationReading>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::ArcadeStickReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::ArcadeStickReading instance) noexcept;
        static winrt::Windows::Gaming::Input::ArcadeStickReading convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::FlightStickReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::FlightStickReading instance) noexcept;
        static winrt::Windows::Gaming::Input::FlightStickReading convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::GamepadReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::GamepadReading instance) noexcept;
        static winrt::Windows::Gaming::Input::GamepadReading convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::GamepadVibration>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::GamepadVibration instance) noexcept;
        static winrt::Windows::Gaming::Input::GamepadVibration convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::RacingWheelReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::RacingWheelReading instance) noexcept;
        static winrt::Windows::Gaming::Input::RacingWheelReading convert_to(PyObject* obj);
    };

    template<>
    struct converter<winrt::Windows::Gaming::Input::UINavigationReading>
    {
        static PyObject* convert(winrt::Windows::Gaming::Input::UINavigationReading instance) noexcept;
        static winrt::Windows::Gaming::Input::UINavigationReading convert_to(PyObject* obj);
    };

}
