// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.ApplicationModel.Email.DataProvider.h"

PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderTriggerDetails>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs>::python_type;

namespace py::cpp::Windows::ApplicationModel::Email::DataProvider
{
    // ----- EmailDataProviderConnection class --------------------
    constexpr const char* const _type_name_EmailDataProviderConnection = "EmailDataProviderConnection";

    static PyObject* _new_EmailDataProviderConnection(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailDataProviderConnection);
        return nullptr;
    }

    static void _dealloc_EmailDataProviderConnection(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailDataProviderConnection_Start(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Start();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_CreateFolderRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs>>(arg);

            return py::convert(self->obj.CreateFolderRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_CreateFolderRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.CreateFolderRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_DeleteFolderRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs>>(arg);

            return py::convert(self->obj.DeleteFolderRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_DeleteFolderRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.DeleteFolderRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_DownloadAttachmentRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs>>(arg);

            return py::convert(self->obj.DownloadAttachmentRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_DownloadAttachmentRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.DownloadAttachmentRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_DownloadMessageRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs>>(arg);

            return py::convert(self->obj.DownloadMessageRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_DownloadMessageRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.DownloadMessageRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_EmptyFolderRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs>>(arg);

            return py::convert(self->obj.EmptyFolderRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_EmptyFolderRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.EmptyFolderRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_ForwardMeetingRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs>>(arg);

            return py::convert(self->obj.ForwardMeetingRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_ForwardMeetingRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ForwardMeetingRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_GetAutoReplySettingsRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs>>(arg);

            return py::convert(self->obj.GetAutoReplySettingsRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_GetAutoReplySettingsRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.GetAutoReplySettingsRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_MailboxSyncRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs>>(arg);

            return py::convert(self->obj.MailboxSyncRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_MailboxSyncRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.MailboxSyncRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_MoveFolderRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs>>(arg);

            return py::convert(self->obj.MoveFolderRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_MoveFolderRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.MoveFolderRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_ProposeNewTimeForMeetingRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs>>(arg);

            return py::convert(self->obj.ProposeNewTimeForMeetingRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_ProposeNewTimeForMeetingRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ProposeNewTimeForMeetingRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_ResolveRecipientsRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs>>(arg);

            return py::convert(self->obj.ResolveRecipientsRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_ResolveRecipientsRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ResolveRecipientsRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_ServerSearchReadBatchRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs>>(arg);

            return py::convert(self->obj.ServerSearchReadBatchRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_ServerSearchReadBatchRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ServerSearchReadBatchRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_SetAutoReplySettingsRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs>>(arg);

            return py::convert(self->obj.SetAutoReplySettingsRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_SetAutoReplySettingsRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SetAutoReplySettingsRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_UpdateMeetingResponseRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs>>(arg);

            return py::convert(self->obj.UpdateMeetingResponseRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_UpdateMeetingResponseRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.UpdateMeetingResponseRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_add_ValidateCertificatesRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection, winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs>>(arg);

            return py::convert(self->obj.ValidateCertificatesRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailDataProviderConnection_remove_ValidateCertificatesRequested(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ValidateCertificatesRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailDataProviderConnection(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailDataProviderConnection[] = {
        { "start", (PyCFunction)EmailDataProviderConnection_Start, METH_VARARGS, nullptr },
        { "add_create_folder_requested", (PyCFunction)EmailDataProviderConnection_add_CreateFolderRequested, METH_O, nullptr },
        { "remove_create_folder_requested", (PyCFunction)EmailDataProviderConnection_remove_CreateFolderRequested, METH_O, nullptr },
        { "add_delete_folder_requested", (PyCFunction)EmailDataProviderConnection_add_DeleteFolderRequested, METH_O, nullptr },
        { "remove_delete_folder_requested", (PyCFunction)EmailDataProviderConnection_remove_DeleteFolderRequested, METH_O, nullptr },
        { "add_download_attachment_requested", (PyCFunction)EmailDataProviderConnection_add_DownloadAttachmentRequested, METH_O, nullptr },
        { "remove_download_attachment_requested", (PyCFunction)EmailDataProviderConnection_remove_DownloadAttachmentRequested, METH_O, nullptr },
        { "add_download_message_requested", (PyCFunction)EmailDataProviderConnection_add_DownloadMessageRequested, METH_O, nullptr },
        { "remove_download_message_requested", (PyCFunction)EmailDataProviderConnection_remove_DownloadMessageRequested, METH_O, nullptr },
        { "add_empty_folder_requested", (PyCFunction)EmailDataProviderConnection_add_EmptyFolderRequested, METH_O, nullptr },
        { "remove_empty_folder_requested", (PyCFunction)EmailDataProviderConnection_remove_EmptyFolderRequested, METH_O, nullptr },
        { "add_forward_meeting_requested", (PyCFunction)EmailDataProviderConnection_add_ForwardMeetingRequested, METH_O, nullptr },
        { "remove_forward_meeting_requested", (PyCFunction)EmailDataProviderConnection_remove_ForwardMeetingRequested, METH_O, nullptr },
        { "add_get_auto_reply_settings_requested", (PyCFunction)EmailDataProviderConnection_add_GetAutoReplySettingsRequested, METH_O, nullptr },
        { "remove_get_auto_reply_settings_requested", (PyCFunction)EmailDataProviderConnection_remove_GetAutoReplySettingsRequested, METH_O, nullptr },
        { "add_mailbox_sync_requested", (PyCFunction)EmailDataProviderConnection_add_MailboxSyncRequested, METH_O, nullptr },
        { "remove_mailbox_sync_requested", (PyCFunction)EmailDataProviderConnection_remove_MailboxSyncRequested, METH_O, nullptr },
        { "add_move_folder_requested", (PyCFunction)EmailDataProviderConnection_add_MoveFolderRequested, METH_O, nullptr },
        { "remove_move_folder_requested", (PyCFunction)EmailDataProviderConnection_remove_MoveFolderRequested, METH_O, nullptr },
        { "add_propose_new_time_for_meeting_requested", (PyCFunction)EmailDataProviderConnection_add_ProposeNewTimeForMeetingRequested, METH_O, nullptr },
        { "remove_propose_new_time_for_meeting_requested", (PyCFunction)EmailDataProviderConnection_remove_ProposeNewTimeForMeetingRequested, METH_O, nullptr },
        { "add_resolve_recipients_requested", (PyCFunction)EmailDataProviderConnection_add_ResolveRecipientsRequested, METH_O, nullptr },
        { "remove_resolve_recipients_requested", (PyCFunction)EmailDataProviderConnection_remove_ResolveRecipientsRequested, METH_O, nullptr },
        { "add_server_search_read_batch_requested", (PyCFunction)EmailDataProviderConnection_add_ServerSearchReadBatchRequested, METH_O, nullptr },
        { "remove_server_search_read_batch_requested", (PyCFunction)EmailDataProviderConnection_remove_ServerSearchReadBatchRequested, METH_O, nullptr },
        { "add_set_auto_reply_settings_requested", (PyCFunction)EmailDataProviderConnection_add_SetAutoReplySettingsRequested, METH_O, nullptr },
        { "remove_set_auto_reply_settings_requested", (PyCFunction)EmailDataProviderConnection_remove_SetAutoReplySettingsRequested, METH_O, nullptr },
        { "add_update_meeting_response_requested", (PyCFunction)EmailDataProviderConnection_add_UpdateMeetingResponseRequested, METH_O, nullptr },
        { "remove_update_meeting_response_requested", (PyCFunction)EmailDataProviderConnection_remove_UpdateMeetingResponseRequested, METH_O, nullptr },
        { "add_validate_certificates_requested", (PyCFunction)EmailDataProviderConnection_add_ValidateCertificatesRequested, METH_O, nullptr },
        { "remove_validate_certificates_requested", (PyCFunction)EmailDataProviderConnection_remove_ValidateCertificatesRequested, METH_O, nullptr },
        { "_from", (PyCFunction)_from_EmailDataProviderConnection, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailDataProviderConnection[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailDataProviderConnection[] = 
    {
        { Py_tp_new, _new_EmailDataProviderConnection },
        { Py_tp_dealloc, _dealloc_EmailDataProviderConnection },
        { Py_tp_methods, _methods_EmailDataProviderConnection },
        { Py_tp_getset, _getset_EmailDataProviderConnection },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailDataProviderConnection =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailDataProviderConnection",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailDataProviderConnection
    };

    // ----- EmailDataProviderTriggerDetails class --------------------
    constexpr const char* const _type_name_EmailDataProviderTriggerDetails = "EmailDataProviderTriggerDetails";

    static PyObject* _new_EmailDataProviderTriggerDetails(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailDataProviderTriggerDetails);
        return nullptr;
    }

    static void _dealloc_EmailDataProviderTriggerDetails(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderTriggerDetails* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailDataProviderTriggerDetails_get_Connection(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderTriggerDetails* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Connection());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailDataProviderTriggerDetails(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderTriggerDetails>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailDataProviderTriggerDetails[] = {
        { "_from", (PyCFunction)_from_EmailDataProviderTriggerDetails, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailDataProviderTriggerDetails[] = {
        { const_cast<char*>("connection"), (getter)EmailDataProviderTriggerDetails_get_Connection, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailDataProviderTriggerDetails[] = 
    {
        { Py_tp_new, _new_EmailDataProviderTriggerDetails },
        { Py_tp_dealloc, _dealloc_EmailDataProviderTriggerDetails },
        { Py_tp_methods, _methods_EmailDataProviderTriggerDetails },
        { Py_tp_getset, _getset_EmailDataProviderTriggerDetails },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailDataProviderTriggerDetails =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailDataProviderTriggerDetails",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderTriggerDetails),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailDataProviderTriggerDetails
    };

    // ----- EmailMailboxCreateFolderRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxCreateFolderRequest = "EmailMailboxCreateFolderRequest";

    static PyObject* _new_EmailMailboxCreateFolderRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxCreateFolderRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxCreateFolderRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxCreateFolderRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Email::EmailFolder>(args, 0);

                return py::convert(self->obj.ReportCompletedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxCreateFolderRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Email::EmailMailboxCreateFolderStatus>(args, 0);

                return py::convert(self->obj.ReportFailedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxCreateFolderRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxCreateFolderRequest_get_Name(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxCreateFolderRequest_get_ParentFolderId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ParentFolderId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxCreateFolderRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxCreateFolderRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxCreateFolderRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxCreateFolderRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxCreateFolderRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxCreateFolderRequest[] = {
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxCreateFolderRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)EmailMailboxCreateFolderRequest_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("parent_folder_id"), (getter)EmailMailboxCreateFolderRequest_get_ParentFolderId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxCreateFolderRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxCreateFolderRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxCreateFolderRequest },
        { Py_tp_methods, _methods_EmailMailboxCreateFolderRequest },
        { Py_tp_getset, _getset_EmailMailboxCreateFolderRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxCreateFolderRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxCreateFolderRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxCreateFolderRequest
    };

    // ----- EmailMailboxCreateFolderRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxCreateFolderRequestEventArgs = "EmailMailboxCreateFolderRequestEventArgs";

    static PyObject* _new_EmailMailboxCreateFolderRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxCreateFolderRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxCreateFolderRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxCreateFolderRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxCreateFolderRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxCreateFolderRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxCreateFolderRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxCreateFolderRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxCreateFolderRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxCreateFolderRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxCreateFolderRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxCreateFolderRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxCreateFolderRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxCreateFolderRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxCreateFolderRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxCreateFolderRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxCreateFolderRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxCreateFolderRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxCreateFolderRequestEventArgs
    };

    // ----- EmailMailboxDeleteFolderRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxDeleteFolderRequest = "EmailMailboxDeleteFolderRequest";

    static PyObject* _new_EmailMailboxDeleteFolderRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxDeleteFolderRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxDeleteFolderRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxDeleteFolderRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDeleteFolderRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Email::EmailMailboxDeleteFolderStatus>(args, 0);

                return py::convert(self->obj.ReportFailedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDeleteFolderRequest_get_EmailFolderId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailFolderId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDeleteFolderRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxDeleteFolderRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxDeleteFolderRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxDeleteFolderRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxDeleteFolderRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxDeleteFolderRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxDeleteFolderRequest[] = {
        { const_cast<char*>("email_folder_id"), (getter)EmailMailboxDeleteFolderRequest_get_EmailFolderId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxDeleteFolderRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxDeleteFolderRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxDeleteFolderRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxDeleteFolderRequest },
        { Py_tp_methods, _methods_EmailMailboxDeleteFolderRequest },
        { Py_tp_getset, _getset_EmailMailboxDeleteFolderRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxDeleteFolderRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxDeleteFolderRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxDeleteFolderRequest
    };

    // ----- EmailMailboxDeleteFolderRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxDeleteFolderRequestEventArgs = "EmailMailboxDeleteFolderRequestEventArgs";

    static PyObject* _new_EmailMailboxDeleteFolderRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxDeleteFolderRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxDeleteFolderRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxDeleteFolderRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDeleteFolderRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxDeleteFolderRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxDeleteFolderRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxDeleteFolderRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxDeleteFolderRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxDeleteFolderRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxDeleteFolderRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxDeleteFolderRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxDeleteFolderRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxDeleteFolderRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxDeleteFolderRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxDeleteFolderRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxDeleteFolderRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxDeleteFolderRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxDeleteFolderRequestEventArgs
    };

    // ----- EmailMailboxDownloadAttachmentRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxDownloadAttachmentRequest = "EmailMailboxDownloadAttachmentRequest";

    static PyObject* _new_EmailMailboxDownloadAttachmentRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxDownloadAttachmentRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxDownloadAttachmentRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxDownloadAttachmentRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadAttachmentRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadAttachmentRequest_get_EmailAttachmentId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailAttachmentId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadAttachmentRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadAttachmentRequest_get_EmailMessageId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMessageId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxDownloadAttachmentRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxDownloadAttachmentRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxDownloadAttachmentRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxDownloadAttachmentRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxDownloadAttachmentRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxDownloadAttachmentRequest[] = {
        { const_cast<char*>("email_attachment_id"), (getter)EmailMailboxDownloadAttachmentRequest_get_EmailAttachmentId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxDownloadAttachmentRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_message_id"), (getter)EmailMailboxDownloadAttachmentRequest_get_EmailMessageId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxDownloadAttachmentRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxDownloadAttachmentRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxDownloadAttachmentRequest },
        { Py_tp_methods, _methods_EmailMailboxDownloadAttachmentRequest },
        { Py_tp_getset, _getset_EmailMailboxDownloadAttachmentRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxDownloadAttachmentRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxDownloadAttachmentRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxDownloadAttachmentRequest
    };

    // ----- EmailMailboxDownloadAttachmentRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxDownloadAttachmentRequestEventArgs = "EmailMailboxDownloadAttachmentRequestEventArgs";

    static PyObject* _new_EmailMailboxDownloadAttachmentRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxDownloadAttachmentRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxDownloadAttachmentRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxDownloadAttachmentRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadAttachmentRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxDownloadAttachmentRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxDownloadAttachmentRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxDownloadAttachmentRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxDownloadAttachmentRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxDownloadAttachmentRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxDownloadAttachmentRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxDownloadAttachmentRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxDownloadAttachmentRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxDownloadAttachmentRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxDownloadAttachmentRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxDownloadAttachmentRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxDownloadAttachmentRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxDownloadAttachmentRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxDownloadAttachmentRequestEventArgs
    };

    // ----- EmailMailboxDownloadMessageRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxDownloadMessageRequest = "EmailMailboxDownloadMessageRequest";

    static PyObject* _new_EmailMailboxDownloadMessageRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxDownloadMessageRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxDownloadMessageRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxDownloadMessageRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadMessageRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadMessageRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadMessageRequest_get_EmailMessageId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMessageId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxDownloadMessageRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxDownloadMessageRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxDownloadMessageRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxDownloadMessageRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxDownloadMessageRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxDownloadMessageRequest[] = {
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxDownloadMessageRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_message_id"), (getter)EmailMailboxDownloadMessageRequest_get_EmailMessageId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxDownloadMessageRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxDownloadMessageRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxDownloadMessageRequest },
        { Py_tp_methods, _methods_EmailMailboxDownloadMessageRequest },
        { Py_tp_getset, _getset_EmailMailboxDownloadMessageRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxDownloadMessageRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxDownloadMessageRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxDownloadMessageRequest
    };

    // ----- EmailMailboxDownloadMessageRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxDownloadMessageRequestEventArgs = "EmailMailboxDownloadMessageRequestEventArgs";

    static PyObject* _new_EmailMailboxDownloadMessageRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxDownloadMessageRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxDownloadMessageRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxDownloadMessageRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxDownloadMessageRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxDownloadMessageRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxDownloadMessageRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxDownloadMessageRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxDownloadMessageRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxDownloadMessageRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxDownloadMessageRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxDownloadMessageRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxDownloadMessageRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxDownloadMessageRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxDownloadMessageRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxDownloadMessageRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxDownloadMessageRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxDownloadMessageRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxDownloadMessageRequestEventArgs
    };

    // ----- EmailMailboxEmptyFolderRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxEmptyFolderRequest = "EmailMailboxEmptyFolderRequest";

    static PyObject* _new_EmailMailboxEmptyFolderRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxEmptyFolderRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxEmptyFolderRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxEmptyFolderRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxEmptyFolderRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Email::EmailMailboxEmptyFolderStatus>(args, 0);

                return py::convert(self->obj.ReportFailedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxEmptyFolderRequest_get_EmailFolderId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailFolderId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxEmptyFolderRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxEmptyFolderRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxEmptyFolderRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxEmptyFolderRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxEmptyFolderRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxEmptyFolderRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxEmptyFolderRequest[] = {
        { const_cast<char*>("email_folder_id"), (getter)EmailMailboxEmptyFolderRequest_get_EmailFolderId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxEmptyFolderRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxEmptyFolderRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxEmptyFolderRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxEmptyFolderRequest },
        { Py_tp_methods, _methods_EmailMailboxEmptyFolderRequest },
        { Py_tp_getset, _getset_EmailMailboxEmptyFolderRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxEmptyFolderRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxEmptyFolderRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxEmptyFolderRequest
    };

    // ----- EmailMailboxEmptyFolderRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxEmptyFolderRequestEventArgs = "EmailMailboxEmptyFolderRequestEventArgs";

    static PyObject* _new_EmailMailboxEmptyFolderRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxEmptyFolderRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxEmptyFolderRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxEmptyFolderRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxEmptyFolderRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxEmptyFolderRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxEmptyFolderRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxEmptyFolderRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxEmptyFolderRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxEmptyFolderRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxEmptyFolderRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxEmptyFolderRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxEmptyFolderRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxEmptyFolderRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxEmptyFolderRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxEmptyFolderRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxEmptyFolderRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxEmptyFolderRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxEmptyFolderRequestEventArgs
    };

    // ----- EmailMailboxForwardMeetingRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxForwardMeetingRequest = "EmailMailboxForwardMeetingRequest";

    static PyObject* _new_EmailMailboxForwardMeetingRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxForwardMeetingRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxForwardMeetingRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxForwardMeetingRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequest_get_Comment(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Comment());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequest_get_EmailMessageId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMessageId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequest_get_ForwardHeader(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ForwardHeader());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequest_get_ForwardHeaderType(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ForwardHeaderType());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequest_get_Recipients(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Recipients());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequest_get_Subject(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Subject());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxForwardMeetingRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxForwardMeetingRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxForwardMeetingRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxForwardMeetingRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxForwardMeetingRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxForwardMeetingRequest[] = {
        { const_cast<char*>("comment"), (getter)EmailMailboxForwardMeetingRequest_get_Comment, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxForwardMeetingRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_message_id"), (getter)EmailMailboxForwardMeetingRequest_get_EmailMessageId, nullptr, nullptr, nullptr },
        { const_cast<char*>("forward_header"), (getter)EmailMailboxForwardMeetingRequest_get_ForwardHeader, nullptr, nullptr, nullptr },
        { const_cast<char*>("forward_header_type"), (getter)EmailMailboxForwardMeetingRequest_get_ForwardHeaderType, nullptr, nullptr, nullptr },
        { const_cast<char*>("recipients"), (getter)EmailMailboxForwardMeetingRequest_get_Recipients, nullptr, nullptr, nullptr },
        { const_cast<char*>("subject"), (getter)EmailMailboxForwardMeetingRequest_get_Subject, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxForwardMeetingRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxForwardMeetingRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxForwardMeetingRequest },
        { Py_tp_methods, _methods_EmailMailboxForwardMeetingRequest },
        { Py_tp_getset, _getset_EmailMailboxForwardMeetingRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxForwardMeetingRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxForwardMeetingRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxForwardMeetingRequest
    };

    // ----- EmailMailboxForwardMeetingRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxForwardMeetingRequestEventArgs = "EmailMailboxForwardMeetingRequestEventArgs";

    static PyObject* _new_EmailMailboxForwardMeetingRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxForwardMeetingRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxForwardMeetingRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxForwardMeetingRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxForwardMeetingRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxForwardMeetingRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxForwardMeetingRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxForwardMeetingRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxForwardMeetingRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxForwardMeetingRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxForwardMeetingRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxForwardMeetingRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxForwardMeetingRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxForwardMeetingRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxForwardMeetingRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxForwardMeetingRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxForwardMeetingRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxForwardMeetingRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxForwardMeetingRequestEventArgs
    };

    // ----- EmailMailboxGetAutoReplySettingsRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxGetAutoReplySettingsRequest = "EmailMailboxGetAutoReplySettingsRequest";

    static PyObject* _new_EmailMailboxGetAutoReplySettingsRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxGetAutoReplySettingsRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxGetAutoReplySettingsRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxGetAutoReplySettingsRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Email::EmailMailboxAutoReplySettings>(args, 0);

                return py::convert(self->obj.ReportCompletedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxGetAutoReplySettingsRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxGetAutoReplySettingsRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxGetAutoReplySettingsRequest_get_RequestedFormat(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RequestedFormat());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxGetAutoReplySettingsRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxGetAutoReplySettingsRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxGetAutoReplySettingsRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxGetAutoReplySettingsRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxGetAutoReplySettingsRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxGetAutoReplySettingsRequest[] = {
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxGetAutoReplySettingsRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("requested_format"), (getter)EmailMailboxGetAutoReplySettingsRequest_get_RequestedFormat, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxGetAutoReplySettingsRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxGetAutoReplySettingsRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxGetAutoReplySettingsRequest },
        { Py_tp_methods, _methods_EmailMailboxGetAutoReplySettingsRequest },
        { Py_tp_getset, _getset_EmailMailboxGetAutoReplySettingsRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxGetAutoReplySettingsRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxGetAutoReplySettingsRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxGetAutoReplySettingsRequest
    };

    // ----- EmailMailboxGetAutoReplySettingsRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxGetAutoReplySettingsRequestEventArgs = "EmailMailboxGetAutoReplySettingsRequestEventArgs";

    static PyObject* _new_EmailMailboxGetAutoReplySettingsRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxGetAutoReplySettingsRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxGetAutoReplySettingsRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxGetAutoReplySettingsRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxGetAutoReplySettingsRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxGetAutoReplySettingsRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxGetAutoReplySettingsRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxGetAutoReplySettingsRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxGetAutoReplySettingsRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxGetAutoReplySettingsRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxGetAutoReplySettingsRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxGetAutoReplySettingsRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxGetAutoReplySettingsRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxGetAutoReplySettingsRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxGetAutoReplySettingsRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxGetAutoReplySettingsRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxGetAutoReplySettingsRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxGetAutoReplySettingsRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxGetAutoReplySettingsRequestEventArgs
    };

    // ----- EmailMailboxMoveFolderRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxMoveFolderRequest = "EmailMailboxMoveFolderRequest";

    static PyObject* _new_EmailMailboxMoveFolderRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxMoveFolderRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxMoveFolderRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxMoveFolderRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxMoveFolderRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxMoveFolderRequest_get_EmailFolderId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailFolderId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxMoveFolderRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxMoveFolderRequest_get_NewFolderName(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.NewFolderName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxMoveFolderRequest_get_NewParentFolderId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.NewParentFolderId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxMoveFolderRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxMoveFolderRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxMoveFolderRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxMoveFolderRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxMoveFolderRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxMoveFolderRequest[] = {
        { const_cast<char*>("email_folder_id"), (getter)EmailMailboxMoveFolderRequest_get_EmailFolderId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxMoveFolderRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("new_folder_name"), (getter)EmailMailboxMoveFolderRequest_get_NewFolderName, nullptr, nullptr, nullptr },
        { const_cast<char*>("new_parent_folder_id"), (getter)EmailMailboxMoveFolderRequest_get_NewParentFolderId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxMoveFolderRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxMoveFolderRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxMoveFolderRequest },
        { Py_tp_methods, _methods_EmailMailboxMoveFolderRequest },
        { Py_tp_getset, _getset_EmailMailboxMoveFolderRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxMoveFolderRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxMoveFolderRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxMoveFolderRequest
    };

    // ----- EmailMailboxMoveFolderRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxMoveFolderRequestEventArgs = "EmailMailboxMoveFolderRequestEventArgs";

    static PyObject* _new_EmailMailboxMoveFolderRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxMoveFolderRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxMoveFolderRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxMoveFolderRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxMoveFolderRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxMoveFolderRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxMoveFolderRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxMoveFolderRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxMoveFolderRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxMoveFolderRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxMoveFolderRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxMoveFolderRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxMoveFolderRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxMoveFolderRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxMoveFolderRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxMoveFolderRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxMoveFolderRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxMoveFolderRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxMoveFolderRequestEventArgs
    };

    // ----- EmailMailboxProposeNewTimeForMeetingRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxProposeNewTimeForMeetingRequest = "EmailMailboxProposeNewTimeForMeetingRequest";

    static PyObject* _new_EmailMailboxProposeNewTimeForMeetingRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxProposeNewTimeForMeetingRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxProposeNewTimeForMeetingRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequest_get_Comment(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Comment());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequest_get_EmailMessageId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMessageId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequest_get_NewDuration(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.NewDuration());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequest_get_NewStartTime(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.NewStartTime());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequest_get_Subject(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Subject());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxProposeNewTimeForMeetingRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxProposeNewTimeForMeetingRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxProposeNewTimeForMeetingRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxProposeNewTimeForMeetingRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxProposeNewTimeForMeetingRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxProposeNewTimeForMeetingRequest[] = {
        { const_cast<char*>("comment"), (getter)EmailMailboxProposeNewTimeForMeetingRequest_get_Comment, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxProposeNewTimeForMeetingRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_message_id"), (getter)EmailMailboxProposeNewTimeForMeetingRequest_get_EmailMessageId, nullptr, nullptr, nullptr },
        { const_cast<char*>("new_duration"), (getter)EmailMailboxProposeNewTimeForMeetingRequest_get_NewDuration, nullptr, nullptr, nullptr },
        { const_cast<char*>("new_start_time"), (getter)EmailMailboxProposeNewTimeForMeetingRequest_get_NewStartTime, nullptr, nullptr, nullptr },
        { const_cast<char*>("subject"), (getter)EmailMailboxProposeNewTimeForMeetingRequest_get_Subject, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxProposeNewTimeForMeetingRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxProposeNewTimeForMeetingRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxProposeNewTimeForMeetingRequest },
        { Py_tp_methods, _methods_EmailMailboxProposeNewTimeForMeetingRequest },
        { Py_tp_getset, _getset_EmailMailboxProposeNewTimeForMeetingRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxProposeNewTimeForMeetingRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxProposeNewTimeForMeetingRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxProposeNewTimeForMeetingRequest
    };

    // ----- EmailMailboxProposeNewTimeForMeetingRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxProposeNewTimeForMeetingRequestEventArgs = "EmailMailboxProposeNewTimeForMeetingRequestEventArgs";

    static PyObject* _new_EmailMailboxProposeNewTimeForMeetingRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxProposeNewTimeForMeetingRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxProposeNewTimeForMeetingRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxProposeNewTimeForMeetingRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxProposeNewTimeForMeetingRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxProposeNewTimeForMeetingRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxProposeNewTimeForMeetingRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxProposeNewTimeForMeetingRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxProposeNewTimeForMeetingRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxProposeNewTimeForMeetingRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxProposeNewTimeForMeetingRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxProposeNewTimeForMeetingRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxProposeNewTimeForMeetingRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxProposeNewTimeForMeetingRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxProposeNewTimeForMeetingRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxProposeNewTimeForMeetingRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxProposeNewTimeForMeetingRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxProposeNewTimeForMeetingRequestEventArgs
    };

    // ----- EmailMailboxResolveRecipientsRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxResolveRecipientsRequest = "EmailMailboxResolveRecipientsRequest";

    static PyObject* _new_EmailMailboxResolveRecipientsRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxResolveRecipientsRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxResolveRecipientsRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxResolveRecipientsRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::ApplicationModel::Email::EmailRecipientResolutionResult>>(args, 0);

                return py::convert(self->obj.ReportCompletedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxResolveRecipientsRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxResolveRecipientsRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxResolveRecipientsRequest_get_Recipients(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Recipients());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxResolveRecipientsRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxResolveRecipientsRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxResolveRecipientsRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxResolveRecipientsRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxResolveRecipientsRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxResolveRecipientsRequest[] = {
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxResolveRecipientsRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("recipients"), (getter)EmailMailboxResolveRecipientsRequest_get_Recipients, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxResolveRecipientsRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxResolveRecipientsRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxResolveRecipientsRequest },
        { Py_tp_methods, _methods_EmailMailboxResolveRecipientsRequest },
        { Py_tp_getset, _getset_EmailMailboxResolveRecipientsRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxResolveRecipientsRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxResolveRecipientsRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxResolveRecipientsRequest
    };

    // ----- EmailMailboxResolveRecipientsRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxResolveRecipientsRequestEventArgs = "EmailMailboxResolveRecipientsRequestEventArgs";

    static PyObject* _new_EmailMailboxResolveRecipientsRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxResolveRecipientsRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxResolveRecipientsRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxResolveRecipientsRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxResolveRecipientsRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxResolveRecipientsRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxResolveRecipientsRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxResolveRecipientsRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxResolveRecipientsRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxResolveRecipientsRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxResolveRecipientsRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxResolveRecipientsRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxResolveRecipientsRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxResolveRecipientsRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxResolveRecipientsRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxResolveRecipientsRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxResolveRecipientsRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxResolveRecipientsRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxResolveRecipientsRequestEventArgs
    };

    // ----- EmailMailboxServerSearchReadBatchRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxServerSearchReadBatchRequest = "EmailMailboxServerSearchReadBatchRequest";

    static PyObject* _new_EmailMailboxServerSearchReadBatchRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxServerSearchReadBatchRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxServerSearchReadBatchRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Email::EmailBatchStatus>(args, 0);

                return py::convert(self->obj.ReportFailedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequest_SaveMessageAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::Email::EmailMessage>(args, 0);

                return py::convert(self->obj.SaveMessageAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequest_get_EmailFolderId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailFolderId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequest_get_Options(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Options());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequest_get_SessionId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SessionId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequest_get_SuggestedBatchSize(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SuggestedBatchSize());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxServerSearchReadBatchRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxServerSearchReadBatchRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxServerSearchReadBatchRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxServerSearchReadBatchRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "save_message_async", (PyCFunction)EmailMailboxServerSearchReadBatchRequest_SaveMessageAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxServerSearchReadBatchRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxServerSearchReadBatchRequest[] = {
        { const_cast<char*>("email_folder_id"), (getter)EmailMailboxServerSearchReadBatchRequest_get_EmailFolderId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxServerSearchReadBatchRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("options"), (getter)EmailMailboxServerSearchReadBatchRequest_get_Options, nullptr, nullptr, nullptr },
        { const_cast<char*>("session_id"), (getter)EmailMailboxServerSearchReadBatchRequest_get_SessionId, nullptr, nullptr, nullptr },
        { const_cast<char*>("suggested_batch_size"), (getter)EmailMailboxServerSearchReadBatchRequest_get_SuggestedBatchSize, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxServerSearchReadBatchRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxServerSearchReadBatchRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxServerSearchReadBatchRequest },
        { Py_tp_methods, _methods_EmailMailboxServerSearchReadBatchRequest },
        { Py_tp_getset, _getset_EmailMailboxServerSearchReadBatchRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxServerSearchReadBatchRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxServerSearchReadBatchRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxServerSearchReadBatchRequest
    };

    // ----- EmailMailboxServerSearchReadBatchRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxServerSearchReadBatchRequestEventArgs = "EmailMailboxServerSearchReadBatchRequestEventArgs";

    static PyObject* _new_EmailMailboxServerSearchReadBatchRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxServerSearchReadBatchRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxServerSearchReadBatchRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxServerSearchReadBatchRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxServerSearchReadBatchRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxServerSearchReadBatchRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxServerSearchReadBatchRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxServerSearchReadBatchRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxServerSearchReadBatchRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxServerSearchReadBatchRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxServerSearchReadBatchRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxServerSearchReadBatchRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxServerSearchReadBatchRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxServerSearchReadBatchRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxServerSearchReadBatchRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxServerSearchReadBatchRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxServerSearchReadBatchRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxServerSearchReadBatchRequestEventArgs
    };

    // ----- EmailMailboxSetAutoReplySettingsRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxSetAutoReplySettingsRequest = "EmailMailboxSetAutoReplySettingsRequest";

    static PyObject* _new_EmailMailboxSetAutoReplySettingsRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxSetAutoReplySettingsRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxSetAutoReplySettingsRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxSetAutoReplySettingsRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxSetAutoReplySettingsRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxSetAutoReplySettingsRequest_get_AutoReplySettings(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AutoReplySettings());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxSetAutoReplySettingsRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxSetAutoReplySettingsRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxSetAutoReplySettingsRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxSetAutoReplySettingsRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxSetAutoReplySettingsRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxSetAutoReplySettingsRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxSetAutoReplySettingsRequest[] = {
        { const_cast<char*>("auto_reply_settings"), (getter)EmailMailboxSetAutoReplySettingsRequest_get_AutoReplySettings, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxSetAutoReplySettingsRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxSetAutoReplySettingsRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxSetAutoReplySettingsRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxSetAutoReplySettingsRequest },
        { Py_tp_methods, _methods_EmailMailboxSetAutoReplySettingsRequest },
        { Py_tp_getset, _getset_EmailMailboxSetAutoReplySettingsRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxSetAutoReplySettingsRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxSetAutoReplySettingsRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxSetAutoReplySettingsRequest
    };

    // ----- EmailMailboxSetAutoReplySettingsRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxSetAutoReplySettingsRequestEventArgs = "EmailMailboxSetAutoReplySettingsRequestEventArgs";

    static PyObject* _new_EmailMailboxSetAutoReplySettingsRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxSetAutoReplySettingsRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxSetAutoReplySettingsRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxSetAutoReplySettingsRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxSetAutoReplySettingsRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxSetAutoReplySettingsRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxSetAutoReplySettingsRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxSetAutoReplySettingsRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxSetAutoReplySettingsRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxSetAutoReplySettingsRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxSetAutoReplySettingsRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxSetAutoReplySettingsRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxSetAutoReplySettingsRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxSetAutoReplySettingsRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxSetAutoReplySettingsRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxSetAutoReplySettingsRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxSetAutoReplySettingsRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxSetAutoReplySettingsRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxSetAutoReplySettingsRequestEventArgs
    };

    // ----- EmailMailboxSyncManagerSyncRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxSyncManagerSyncRequest = "EmailMailboxSyncManagerSyncRequest";

    static PyObject* _new_EmailMailboxSyncManagerSyncRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxSyncManagerSyncRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxSyncManagerSyncRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxSyncManagerSyncRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxSyncManagerSyncRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxSyncManagerSyncRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxSyncManagerSyncRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxSyncManagerSyncRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxSyncManagerSyncRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxSyncManagerSyncRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxSyncManagerSyncRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxSyncManagerSyncRequest[] = {
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxSyncManagerSyncRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxSyncManagerSyncRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxSyncManagerSyncRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxSyncManagerSyncRequest },
        { Py_tp_methods, _methods_EmailMailboxSyncManagerSyncRequest },
        { Py_tp_getset, _getset_EmailMailboxSyncManagerSyncRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxSyncManagerSyncRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxSyncManagerSyncRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxSyncManagerSyncRequest
    };

    // ----- EmailMailboxSyncManagerSyncRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxSyncManagerSyncRequestEventArgs = "EmailMailboxSyncManagerSyncRequestEventArgs";

    static PyObject* _new_EmailMailboxSyncManagerSyncRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxSyncManagerSyncRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxSyncManagerSyncRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxSyncManagerSyncRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxSyncManagerSyncRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxSyncManagerSyncRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxSyncManagerSyncRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxSyncManagerSyncRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxSyncManagerSyncRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxSyncManagerSyncRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxSyncManagerSyncRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxSyncManagerSyncRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxSyncManagerSyncRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxSyncManagerSyncRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxSyncManagerSyncRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxSyncManagerSyncRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxSyncManagerSyncRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxSyncManagerSyncRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxSyncManagerSyncRequestEventArgs
    };

    // ----- EmailMailboxUpdateMeetingResponseRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxUpdateMeetingResponseRequest = "EmailMailboxUpdateMeetingResponseRequest";

    static PyObject* _new_EmailMailboxUpdateMeetingResponseRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxUpdateMeetingResponseRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxUpdateMeetingResponseRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequest_get_Comment(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Comment());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequest_get_EmailMessageId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMessageId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequest_get_Response(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Response());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequest_get_SendUpdate(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SendUpdate());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequest_get_Subject(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Subject());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxUpdateMeetingResponseRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxUpdateMeetingResponseRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxUpdateMeetingResponseRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxUpdateMeetingResponseRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxUpdateMeetingResponseRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxUpdateMeetingResponseRequest[] = {
        { const_cast<char*>("comment"), (getter)EmailMailboxUpdateMeetingResponseRequest_get_Comment, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxUpdateMeetingResponseRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_message_id"), (getter)EmailMailboxUpdateMeetingResponseRequest_get_EmailMessageId, nullptr, nullptr, nullptr },
        { const_cast<char*>("response"), (getter)EmailMailboxUpdateMeetingResponseRequest_get_Response, nullptr, nullptr, nullptr },
        { const_cast<char*>("send_update"), (getter)EmailMailboxUpdateMeetingResponseRequest_get_SendUpdate, nullptr, nullptr, nullptr },
        { const_cast<char*>("subject"), (getter)EmailMailboxUpdateMeetingResponseRequest_get_Subject, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxUpdateMeetingResponseRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxUpdateMeetingResponseRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxUpdateMeetingResponseRequest },
        { Py_tp_methods, _methods_EmailMailboxUpdateMeetingResponseRequest },
        { Py_tp_getset, _getset_EmailMailboxUpdateMeetingResponseRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxUpdateMeetingResponseRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxUpdateMeetingResponseRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxUpdateMeetingResponseRequest
    };

    // ----- EmailMailboxUpdateMeetingResponseRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxUpdateMeetingResponseRequestEventArgs = "EmailMailboxUpdateMeetingResponseRequestEventArgs";

    static PyObject* _new_EmailMailboxUpdateMeetingResponseRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxUpdateMeetingResponseRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxUpdateMeetingResponseRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxUpdateMeetingResponseRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxUpdateMeetingResponseRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxUpdateMeetingResponseRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxUpdateMeetingResponseRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxUpdateMeetingResponseRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxUpdateMeetingResponseRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxUpdateMeetingResponseRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxUpdateMeetingResponseRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxUpdateMeetingResponseRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxUpdateMeetingResponseRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxUpdateMeetingResponseRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxUpdateMeetingResponseRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxUpdateMeetingResponseRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxUpdateMeetingResponseRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxUpdateMeetingResponseRequestEventArgs
    };

    // ----- EmailMailboxValidateCertificatesRequest class --------------------
    constexpr const char* const _type_name_EmailMailboxValidateCertificatesRequest = "EmailMailboxValidateCertificatesRequest";

    static PyObject* _new_EmailMailboxValidateCertificatesRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxValidateCertificatesRequest);
        return nullptr;
    }

    static void _dealloc_EmailMailboxValidateCertificatesRequest(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxValidateCertificatesRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::ApplicationModel::Email::EmailCertificateValidationStatus>>(args, 0);

                return py::convert(self->obj.ReportCompletedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxValidateCertificatesRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxValidateCertificatesRequest_get_Certificates(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Certificates());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* EmailMailboxValidateCertificatesRequest_get_EmailMailboxId(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EmailMailboxId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxValidateCertificatesRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxValidateCertificatesRequest[] = {
        { "report_completed_async", (PyCFunction)EmailMailboxValidateCertificatesRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)EmailMailboxValidateCertificatesRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxValidateCertificatesRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxValidateCertificatesRequest[] = {
        { const_cast<char*>("certificates"), (getter)EmailMailboxValidateCertificatesRequest_get_Certificates, nullptr, nullptr, nullptr },
        { const_cast<char*>("email_mailbox_id"), (getter)EmailMailboxValidateCertificatesRequest_get_EmailMailboxId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxValidateCertificatesRequest[] = 
    {
        { Py_tp_new, _new_EmailMailboxValidateCertificatesRequest },
        { Py_tp_dealloc, _dealloc_EmailMailboxValidateCertificatesRequest },
        { Py_tp_methods, _methods_EmailMailboxValidateCertificatesRequest },
        { Py_tp_getset, _getset_EmailMailboxValidateCertificatesRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxValidateCertificatesRequest =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxValidateCertificatesRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxValidateCertificatesRequest
    };

    // ----- EmailMailboxValidateCertificatesRequestEventArgs class --------------------
    constexpr const char* const _type_name_EmailMailboxValidateCertificatesRequestEventArgs = "EmailMailboxValidateCertificatesRequestEventArgs";

    static PyObject* _new_EmailMailboxValidateCertificatesRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_EmailMailboxValidateCertificatesRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_EmailMailboxValidateCertificatesRequestEventArgs(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* EmailMailboxValidateCertificatesRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* EmailMailboxValidateCertificatesRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_EmailMailboxValidateCertificatesRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_EmailMailboxValidateCertificatesRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)EmailMailboxValidateCertificatesRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_EmailMailboxValidateCertificatesRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_EmailMailboxValidateCertificatesRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)EmailMailboxValidateCertificatesRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_EmailMailboxValidateCertificatesRequestEventArgs[] = 
    {
        { Py_tp_new, _new_EmailMailboxValidateCertificatesRequestEventArgs },
        { Py_tp_dealloc, _dealloc_EmailMailboxValidateCertificatesRequestEventArgs },
        { Py_tp_methods, _methods_EmailMailboxValidateCertificatesRequestEventArgs },
        { Py_tp_getset, _getset_EmailMailboxValidateCertificatesRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_EmailMailboxValidateCertificatesRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Email_DataProvider.EmailMailboxValidateCertificatesRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_EmailMailboxValidateCertificatesRequestEventArgs
    };

    // ----- Windows.ApplicationModel.Email.DataProvider Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection>::python_type = py::register_python_type(module, _type_name_EmailDataProviderConnection, &_type_spec_EmailDataProviderConnection, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailDataProviderTriggerDetails>::python_type = py::register_python_type(module, _type_name_EmailDataProviderTriggerDetails, &_type_spec_EmailDataProviderTriggerDetails, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxCreateFolderRequest, &_type_spec_EmailMailboxCreateFolderRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxCreateFolderRequestEventArgs, &_type_spec_EmailMailboxCreateFolderRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxDeleteFolderRequest, &_type_spec_EmailMailboxDeleteFolderRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxDeleteFolderRequestEventArgs, &_type_spec_EmailMailboxDeleteFolderRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxDownloadAttachmentRequest, &_type_spec_EmailMailboxDownloadAttachmentRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxDownloadAttachmentRequestEventArgs, &_type_spec_EmailMailboxDownloadAttachmentRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxDownloadMessageRequest, &_type_spec_EmailMailboxDownloadMessageRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxDownloadMessageRequestEventArgs, &_type_spec_EmailMailboxDownloadMessageRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxEmptyFolderRequest, &_type_spec_EmailMailboxEmptyFolderRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxEmptyFolderRequestEventArgs, &_type_spec_EmailMailboxEmptyFolderRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxForwardMeetingRequest, &_type_spec_EmailMailboxForwardMeetingRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxForwardMeetingRequestEventArgs, &_type_spec_EmailMailboxForwardMeetingRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxGetAutoReplySettingsRequest, &_type_spec_EmailMailboxGetAutoReplySettingsRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxGetAutoReplySettingsRequestEventArgs, &_type_spec_EmailMailboxGetAutoReplySettingsRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxMoveFolderRequest, &_type_spec_EmailMailboxMoveFolderRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxMoveFolderRequestEventArgs, &_type_spec_EmailMailboxMoveFolderRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxProposeNewTimeForMeetingRequest, &_type_spec_EmailMailboxProposeNewTimeForMeetingRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxProposeNewTimeForMeetingRequestEventArgs, &_type_spec_EmailMailboxProposeNewTimeForMeetingRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxResolveRecipientsRequest, &_type_spec_EmailMailboxResolveRecipientsRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxResolveRecipientsRequestEventArgs, &_type_spec_EmailMailboxResolveRecipientsRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxServerSearchReadBatchRequest, &_type_spec_EmailMailboxServerSearchReadBatchRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxServerSearchReadBatchRequestEventArgs, &_type_spec_EmailMailboxServerSearchReadBatchRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxSetAutoReplySettingsRequest, &_type_spec_EmailMailboxSetAutoReplySettingsRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxSetAutoReplySettingsRequestEventArgs, &_type_spec_EmailMailboxSetAutoReplySettingsRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxSyncManagerSyncRequest, &_type_spec_EmailMailboxSyncManagerSyncRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxSyncManagerSyncRequestEventArgs, &_type_spec_EmailMailboxSyncManagerSyncRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxUpdateMeetingResponseRequest, &_type_spec_EmailMailboxUpdateMeetingResponseRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxUpdateMeetingResponseRequestEventArgs, &_type_spec_EmailMailboxUpdateMeetingResponseRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest>::python_type = py::register_python_type(module, _type_name_EmailMailboxValidateCertificatesRequest, &_type_spec_EmailMailboxValidateCertificatesRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs>::python_type = py::register_python_type(module, _type_name_EmailMailboxValidateCertificatesRequestEventArgs, &_type_spec_EmailMailboxValidateCertificatesRequestEventArgs, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.ApplicationModel.Email.DataProvider");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_ApplicationModel_Email_DataProvider",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::ApplicationModel::Email::DataProvider

PyMODINIT_FUNC
PyInit__winrt_Windows_ApplicationModel_Email_DataProvider (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::ApplicationModel::Email::DataProvider::module_def);
}
