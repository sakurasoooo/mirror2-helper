// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Storage.FileProperties.h")
#include "py.Windows.Storage.FileProperties.h"
#endif

#if __has_include("py.Windows.Storage.Provider.h")
#include "py.Windows.Storage.Provider.h"
#endif

#if __has_include("py.Windows.Storage.Search.h")
#include "py.Windows.Storage.Search.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#if __has_include("py.Windows.System.h")
#include "py.Windows.System.h"
#endif

#include <winrt/Windows.Storage.h>

namespace py::proj::Windows::Storage
{}

namespace py::impl::Windows::Storage
{
    struct ApplicationDataSetVersionHandler
    {
        static winrt::Windows::Storage::ApplicationDataSetVersionHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0)
            {
                winrt::handle_type<py::gil_state_traits> gil_state{ PyGILState_Ensure() };

                py::pyobj_handle py_param0{ py::convert(param0) };

                py::pyobj_handle args{ PyTuple_Pack(1, py_param0.get()) };
                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_invalid_argument();
                }
            };
        };
    };

    struct StreamedFileDataRequestedHandler
    {
        static winrt::Windows::Storage::StreamedFileDataRequestedHandler get(PyObject* callable)
        {
            py::delegate_callable _delegate{ callable };

            return [delegate = std::move(_delegate)](auto param0)
            {
                winrt::handle_type<py::gil_state_traits> gil_state{ PyGILState_Ensure() };

                py::pyobj_handle py_param0{ py::convert(param0) };

                py::pyobj_handle args{ PyTuple_Pack(1, py_param0.get()) };
                py::pyobj_handle return_value{ PyObject_CallObject(delegate.callable(), args.get()) };

                if (!return_value)
                {
                    PyErr_WriteUnraisable(delegate.callable());
                    throw winrt::hresult_invalid_argument();
                }
            };
        };
    };
}

namespace py::wrapper::Windows::Storage
{
    using AppDataPaths = py::winrt_wrapper<winrt::Windows::Storage::AppDataPaths>;
    using ApplicationData = py::winrt_wrapper<winrt::Windows::Storage::ApplicationData>;
    using ApplicationDataCompositeValue = py::winrt_wrapper<winrt::Windows::Storage::ApplicationDataCompositeValue>;
    using ApplicationDataContainer = py::winrt_wrapper<winrt::Windows::Storage::ApplicationDataContainer>;
    using ApplicationDataContainerSettings = py::winrt_wrapper<winrt::Windows::Storage::ApplicationDataContainerSettings>;
    using CachedFileManager = py::winrt_wrapper<winrt::Windows::Storage::CachedFileManager>;
    using DownloadsFolder = py::winrt_wrapper<winrt::Windows::Storage::DownloadsFolder>;
    using FileIO = py::winrt_wrapper<winrt::Windows::Storage::FileIO>;
    using KnownFolders = py::winrt_wrapper<winrt::Windows::Storage::KnownFolders>;
    using PathIO = py::winrt_wrapper<winrt::Windows::Storage::PathIO>;
    using SetVersionDeferral = py::winrt_wrapper<winrt::Windows::Storage::SetVersionDeferral>;
    using SetVersionRequest = py::winrt_wrapper<winrt::Windows::Storage::SetVersionRequest>;
    using StorageFile = py::winrt_wrapper<winrt::Windows::Storage::StorageFile>;
    using StorageFolder = py::winrt_wrapper<winrt::Windows::Storage::StorageFolder>;
    using StorageLibrary = py::winrt_wrapper<winrt::Windows::Storage::StorageLibrary>;
    using StorageLibraryChange = py::winrt_wrapper<winrt::Windows::Storage::StorageLibraryChange>;
    using StorageLibraryChangeReader = py::winrt_wrapper<winrt::Windows::Storage::StorageLibraryChangeReader>;
    using StorageLibraryChangeTracker = py::winrt_wrapper<winrt::Windows::Storage::StorageLibraryChangeTracker>;
    using StorageLibraryChangeTrackerOptions = py::winrt_wrapper<winrt::Windows::Storage::StorageLibraryChangeTrackerOptions>;
    using StorageLibraryLastChangeId = py::winrt_wrapper<winrt::Windows::Storage::StorageLibraryLastChangeId>;
    using StorageProvider = py::winrt_wrapper<winrt::Windows::Storage::StorageProvider>;
    using StorageStreamTransaction = py::winrt_wrapper<winrt::Windows::Storage::StorageStreamTransaction>;
    using StreamedFileDataRequest = py::winrt_wrapper<winrt::Windows::Storage::StreamedFileDataRequest>;
    using SystemAudioProperties = py::winrt_wrapper<winrt::Windows::Storage::SystemAudioProperties>;
    using SystemDataPaths = py::winrt_wrapper<winrt::Windows::Storage::SystemDataPaths>;
    using SystemGPSProperties = py::winrt_wrapper<winrt::Windows::Storage::SystemGPSProperties>;
    using SystemImageProperties = py::winrt_wrapper<winrt::Windows::Storage::SystemImageProperties>;
    using SystemMediaProperties = py::winrt_wrapper<winrt::Windows::Storage::SystemMediaProperties>;
    using SystemMusicProperties = py::winrt_wrapper<winrt::Windows::Storage::SystemMusicProperties>;
    using SystemPhotoProperties = py::winrt_wrapper<winrt::Windows::Storage::SystemPhotoProperties>;
    using SystemProperties = py::winrt_wrapper<winrt::Windows::Storage::SystemProperties>;
    using SystemVideoProperties = py::winrt_wrapper<winrt::Windows::Storage::SystemVideoProperties>;
    using UserDataPaths = py::winrt_wrapper<winrt::Windows::Storage::UserDataPaths>;
    using IStorageFile = py::winrt_wrapper<winrt::Windows::Storage::IStorageFile>;
    using IStorageFile2 = py::winrt_wrapper<winrt::Windows::Storage::IStorageFile2>;
    using IStorageFilePropertiesWithAvailability = py::winrt_wrapper<winrt::Windows::Storage::IStorageFilePropertiesWithAvailability>;
    using IStorageFolder = py::winrt_wrapper<winrt::Windows::Storage::IStorageFolder>;
    using IStorageFolder2 = py::winrt_wrapper<winrt::Windows::Storage::IStorageFolder2>;
    using IStorageItem = py::winrt_wrapper<winrt::Windows::Storage::IStorageItem>;
    using IStorageItem2 = py::winrt_wrapper<winrt::Windows::Storage::IStorageItem2>;
    using IStorageItemProperties = py::winrt_wrapper<winrt::Windows::Storage::IStorageItemProperties>;
    using IStorageItemProperties2 = py::winrt_wrapper<winrt::Windows::Storage::IStorageItemProperties2>;
    using IStorageItemPropertiesWithProvider = py::winrt_wrapper<winrt::Windows::Storage::IStorageItemPropertiesWithProvider>;
    using IStreamedFileDataRequest = py::winrt_wrapper<winrt::Windows::Storage::IStreamedFileDataRequest>;
}

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::Storage::AppDataPaths>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::ApplicationData>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::ApplicationDataCompositeValue>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::ApplicationDataContainer>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::ApplicationDataContainerSettings>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::CachedFileManager>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::DownloadsFolder>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::FileIO>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::KnownFolders>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::PathIO>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SetVersionDeferral>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SetVersionRequest>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageFile>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageFolder>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageLibrary>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageLibraryChange>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageLibraryChangeReader>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageLibraryChangeTracker>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageLibraryChangeTrackerOptions>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageLibraryLastChangeId>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageProvider>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StorageStreamTransaction>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::StreamedFileDataRequest>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemAudioProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemDataPaths>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemGPSProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemImageProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemMediaProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemMusicProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemPhotoProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::SystemVideoProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::UserDataPaths>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageFile>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageFile2>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageFilePropertiesWithAvailability>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageFolder>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageFolder2>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageItem>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageItem2>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageItemProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageItemProperties2>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStorageItemPropertiesWithProvider>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Storage::IStreamedFileDataRequest>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template <>
    struct delegate_python_type<winrt::Windows::Storage::ApplicationDataSetVersionHandler>
    {
        using type = py::impl::Windows::Storage::ApplicationDataSetVersionHandler;
    };

    template <>
    struct delegate_python_type<winrt::Windows::Storage::StreamedFileDataRequestedHandler>
    {
        using type = py::impl::Windows::Storage::StreamedFileDataRequestedHandler;
    };

}
