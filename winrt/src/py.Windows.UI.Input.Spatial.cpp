// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.UI.Input.Spatial.h"

PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialHoldCanceledEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialHoldCompletedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialHoldStartedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteraction>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionController>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSource>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceProperties>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceState>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationCanceledEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationCompletedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationDelta>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationStartedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationUpdatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialNavigationCanceledEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialNavigationCompletedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialNavigationUpdatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialPointerPose>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialRecognitionEndedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialTappedEventArgs>::python_type;

namespace py::cpp::Windows::UI::Input::Spatial
{
    // ----- SpatialGestureRecognizer class --------------------
    constexpr const char* const _type_name_SpatialGestureRecognizer = "SpatialGestureRecognizer";

    static PyObject* _new_SpatialGestureRecognizer(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::UI::Input::Spatial::SpatialGestureSettings>(args, 0);

                winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer instance{ param0 };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_SpatialGestureRecognizer(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialGestureRecognizer_CancelPendingGestures(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.CancelPendingGestures();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_CaptureInteraction(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::UI::Input::Spatial::SpatialInteraction>(args, 0);

                self->obj.CaptureInteraction(param0);
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_TrySetGestureSettings(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::UI::Input::Spatial::SpatialGestureSettings>(args, 0);

                return py::convert(self->obj.TrySetGestureSettings(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_get_GestureSettings(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.GestureSettings());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_HoldCanceled(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialHoldCanceledEventArgs>>(arg);

            return py::convert(self->obj.HoldCanceled(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_HoldCanceled(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.HoldCanceled(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_HoldCompleted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialHoldCompletedEventArgs>>(arg);

            return py::convert(self->obj.HoldCompleted(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_HoldCompleted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.HoldCompleted(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_HoldStarted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialHoldStartedEventArgs>>(arg);

            return py::convert(self->obj.HoldStarted(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_HoldStarted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.HoldStarted(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_ManipulationCanceled(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialManipulationCanceledEventArgs>>(arg);

            return py::convert(self->obj.ManipulationCanceled(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_ManipulationCanceled(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ManipulationCanceled(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_ManipulationCompleted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialManipulationCompletedEventArgs>>(arg);

            return py::convert(self->obj.ManipulationCompleted(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_ManipulationCompleted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ManipulationCompleted(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_ManipulationStarted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialManipulationStartedEventArgs>>(arg);

            return py::convert(self->obj.ManipulationStarted(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_ManipulationStarted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ManipulationStarted(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_ManipulationUpdated(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialManipulationUpdatedEventArgs>>(arg);

            return py::convert(self->obj.ManipulationUpdated(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_ManipulationUpdated(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.ManipulationUpdated(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_NavigationCanceled(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialNavigationCanceledEventArgs>>(arg);

            return py::convert(self->obj.NavigationCanceled(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_NavigationCanceled(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.NavigationCanceled(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_NavigationCompleted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialNavigationCompletedEventArgs>>(arg);

            return py::convert(self->obj.NavigationCompleted(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_NavigationCompleted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.NavigationCompleted(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_NavigationStarted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs>>(arg);

            return py::convert(self->obj.NavigationStarted(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_NavigationStarted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.NavigationStarted(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_NavigationUpdated(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialNavigationUpdatedEventArgs>>(arg);

            return py::convert(self->obj.NavigationUpdated(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_NavigationUpdated(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.NavigationUpdated(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_RecognitionEnded(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialRecognitionEndedEventArgs>>(arg);

            return py::convert(self->obj.RecognitionEnded(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_RecognitionEnded(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.RecognitionEnded(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_RecognitionStarted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs>>(arg);

            return py::convert(self->obj.RecognitionStarted(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_RecognitionStarted(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.RecognitionStarted(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_add_Tapped(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer, winrt::Windows::UI::Input::Spatial::SpatialTappedEventArgs>>(arg);

            return py::convert(self->obj.Tapped(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialGestureRecognizer_remove_Tapped(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.Tapped(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialGestureRecognizer(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialGestureRecognizer[] = {
        { "cancel_pending_gestures", (PyCFunction)SpatialGestureRecognizer_CancelPendingGestures, METH_VARARGS, nullptr },
        { "capture_interaction", (PyCFunction)SpatialGestureRecognizer_CaptureInteraction, METH_VARARGS, nullptr },
        { "try_set_gesture_settings", (PyCFunction)SpatialGestureRecognizer_TrySetGestureSettings, METH_VARARGS, nullptr },
        { "add_hold_canceled", (PyCFunction)SpatialGestureRecognizer_add_HoldCanceled, METH_O, nullptr },
        { "remove_hold_canceled", (PyCFunction)SpatialGestureRecognizer_remove_HoldCanceled, METH_O, nullptr },
        { "add_hold_completed", (PyCFunction)SpatialGestureRecognizer_add_HoldCompleted, METH_O, nullptr },
        { "remove_hold_completed", (PyCFunction)SpatialGestureRecognizer_remove_HoldCompleted, METH_O, nullptr },
        { "add_hold_started", (PyCFunction)SpatialGestureRecognizer_add_HoldStarted, METH_O, nullptr },
        { "remove_hold_started", (PyCFunction)SpatialGestureRecognizer_remove_HoldStarted, METH_O, nullptr },
        { "add_manipulation_canceled", (PyCFunction)SpatialGestureRecognizer_add_ManipulationCanceled, METH_O, nullptr },
        { "remove_manipulation_canceled", (PyCFunction)SpatialGestureRecognizer_remove_ManipulationCanceled, METH_O, nullptr },
        { "add_manipulation_completed", (PyCFunction)SpatialGestureRecognizer_add_ManipulationCompleted, METH_O, nullptr },
        { "remove_manipulation_completed", (PyCFunction)SpatialGestureRecognizer_remove_ManipulationCompleted, METH_O, nullptr },
        { "add_manipulation_started", (PyCFunction)SpatialGestureRecognizer_add_ManipulationStarted, METH_O, nullptr },
        { "remove_manipulation_started", (PyCFunction)SpatialGestureRecognizer_remove_ManipulationStarted, METH_O, nullptr },
        { "add_manipulation_updated", (PyCFunction)SpatialGestureRecognizer_add_ManipulationUpdated, METH_O, nullptr },
        { "remove_manipulation_updated", (PyCFunction)SpatialGestureRecognizer_remove_ManipulationUpdated, METH_O, nullptr },
        { "add_navigation_canceled", (PyCFunction)SpatialGestureRecognizer_add_NavigationCanceled, METH_O, nullptr },
        { "remove_navigation_canceled", (PyCFunction)SpatialGestureRecognizer_remove_NavigationCanceled, METH_O, nullptr },
        { "add_navigation_completed", (PyCFunction)SpatialGestureRecognizer_add_NavigationCompleted, METH_O, nullptr },
        { "remove_navigation_completed", (PyCFunction)SpatialGestureRecognizer_remove_NavigationCompleted, METH_O, nullptr },
        { "add_navigation_started", (PyCFunction)SpatialGestureRecognizer_add_NavigationStarted, METH_O, nullptr },
        { "remove_navigation_started", (PyCFunction)SpatialGestureRecognizer_remove_NavigationStarted, METH_O, nullptr },
        { "add_navigation_updated", (PyCFunction)SpatialGestureRecognizer_add_NavigationUpdated, METH_O, nullptr },
        { "remove_navigation_updated", (PyCFunction)SpatialGestureRecognizer_remove_NavigationUpdated, METH_O, nullptr },
        { "add_recognition_ended", (PyCFunction)SpatialGestureRecognizer_add_RecognitionEnded, METH_O, nullptr },
        { "remove_recognition_ended", (PyCFunction)SpatialGestureRecognizer_remove_RecognitionEnded, METH_O, nullptr },
        { "add_recognition_started", (PyCFunction)SpatialGestureRecognizer_add_RecognitionStarted, METH_O, nullptr },
        { "remove_recognition_started", (PyCFunction)SpatialGestureRecognizer_remove_RecognitionStarted, METH_O, nullptr },
        { "add_tapped", (PyCFunction)SpatialGestureRecognizer_add_Tapped, METH_O, nullptr },
        { "remove_tapped", (PyCFunction)SpatialGestureRecognizer_remove_Tapped, METH_O, nullptr },
        { "_from", (PyCFunction)_from_SpatialGestureRecognizer, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialGestureRecognizer[] = {
        { const_cast<char*>("gesture_settings"), (getter)SpatialGestureRecognizer_get_GestureSettings, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialGestureRecognizer[] = 
    {
        { Py_tp_new, _new_SpatialGestureRecognizer },
        { Py_tp_dealloc, _dealloc_SpatialGestureRecognizer },
        { Py_tp_methods, _methods_SpatialGestureRecognizer },
        { Py_tp_getset, _getset_SpatialGestureRecognizer },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialGestureRecognizer =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialGestureRecognizer",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialGestureRecognizer),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialGestureRecognizer
    };

    // ----- SpatialHoldCanceledEventArgs class --------------------
    constexpr const char* const _type_name_SpatialHoldCanceledEventArgs = "SpatialHoldCanceledEventArgs";

    static PyObject* _new_SpatialHoldCanceledEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialHoldCanceledEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialHoldCanceledEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldCanceledEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialHoldCanceledEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldCanceledEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialHoldCanceledEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialHoldCanceledEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialHoldCanceledEventArgs[] = {
        { "_from", (PyCFunction)_from_SpatialHoldCanceledEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialHoldCanceledEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialHoldCanceledEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialHoldCanceledEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialHoldCanceledEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialHoldCanceledEventArgs },
        { Py_tp_methods, _methods_SpatialHoldCanceledEventArgs },
        { Py_tp_getset, _getset_SpatialHoldCanceledEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialHoldCanceledEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialHoldCanceledEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldCanceledEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialHoldCanceledEventArgs
    };

    // ----- SpatialHoldCompletedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialHoldCompletedEventArgs = "SpatialHoldCompletedEventArgs";

    static PyObject* _new_SpatialHoldCompletedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialHoldCompletedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialHoldCompletedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldCompletedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialHoldCompletedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldCompletedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialHoldCompletedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialHoldCompletedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialHoldCompletedEventArgs[] = {
        { "_from", (PyCFunction)_from_SpatialHoldCompletedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialHoldCompletedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialHoldCompletedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialHoldCompletedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialHoldCompletedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialHoldCompletedEventArgs },
        { Py_tp_methods, _methods_SpatialHoldCompletedEventArgs },
        { Py_tp_getset, _getset_SpatialHoldCompletedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialHoldCompletedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialHoldCompletedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldCompletedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialHoldCompletedEventArgs
    };

    // ----- SpatialHoldStartedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialHoldStartedEventArgs = "SpatialHoldStartedEventArgs";

    static PyObject* _new_SpatialHoldStartedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialHoldStartedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialHoldStartedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldStartedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialHoldStartedEventArgs_TryGetPointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldStartedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetPointerPose(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialHoldStartedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldStartedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialHoldStartedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialHoldStartedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialHoldStartedEventArgs[] = {
        { "try_get_pointer_pose", (PyCFunction)SpatialHoldStartedEventArgs_TryGetPointerPose, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialHoldStartedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialHoldStartedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialHoldStartedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialHoldStartedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialHoldStartedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialHoldStartedEventArgs },
        { Py_tp_methods, _methods_SpatialHoldStartedEventArgs },
        { Py_tp_getset, _getset_SpatialHoldStartedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialHoldStartedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialHoldStartedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialHoldStartedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialHoldStartedEventArgs
    };

    // ----- SpatialInteraction class --------------------
    constexpr const char* const _type_name_SpatialInteraction = "SpatialInteraction";

    static PyObject* _new_SpatialInteraction(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteraction);
        return nullptr;
    }

    static void _dealloc_SpatialInteraction(py::wrapper::Windows::UI::Input::Spatial::SpatialInteraction* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteraction_get_SourceState(py::wrapper::Windows::UI::Input::Spatial::SpatialInteraction* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SourceState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteraction(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteraction>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteraction[] = {
        { "_from", (PyCFunction)_from_SpatialInteraction, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteraction[] = {
        { const_cast<char*>("source_state"), (getter)SpatialInteraction_get_SourceState, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteraction[] = 
    {
        { Py_tp_new, _new_SpatialInteraction },
        { Py_tp_dealloc, _dealloc_SpatialInteraction },
        { Py_tp_methods, _methods_SpatialInteraction },
        { Py_tp_getset, _getset_SpatialInteraction },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteraction =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteraction",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteraction),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteraction
    };

    // ----- SpatialInteractionController class --------------------
    constexpr const char* const _type_name_SpatialInteractionController = "SpatialInteractionController";

    static PyObject* _new_SpatialInteractionController(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionController);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionController(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionController_TryGetBatteryReport(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.TryGetBatteryReport());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionController_TryGetRenderableModelAsync(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.TryGetRenderableModelAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionController_get_HasThumbstick(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.HasThumbstick());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionController_get_HasTouchpad(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.HasTouchpad());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionController_get_ProductId(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ProductId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionController_get_SimpleHapticsController(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SimpleHapticsController());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionController_get_VendorId(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.VendorId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionController_get_Version(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Version());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionController(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionController>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionController[] = {
        { "try_get_battery_report", (PyCFunction)SpatialInteractionController_TryGetBatteryReport, METH_VARARGS, nullptr },
        { "try_get_renderable_model_async", (PyCFunction)SpatialInteractionController_TryGetRenderableModelAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialInteractionController, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionController[] = {
        { const_cast<char*>("has_thumbstick"), (getter)SpatialInteractionController_get_HasThumbstick, nullptr, nullptr, nullptr },
        { const_cast<char*>("has_touchpad"), (getter)SpatialInteractionController_get_HasTouchpad, nullptr, nullptr, nullptr },
        { const_cast<char*>("product_id"), (getter)SpatialInteractionController_get_ProductId, nullptr, nullptr, nullptr },
        { const_cast<char*>("simple_haptics_controller"), (getter)SpatialInteractionController_get_SimpleHapticsController, nullptr, nullptr, nullptr },
        { const_cast<char*>("vendor_id"), (getter)SpatialInteractionController_get_VendorId, nullptr, nullptr, nullptr },
        { const_cast<char*>("version"), (getter)SpatialInteractionController_get_Version, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionController[] = 
    {
        { Py_tp_new, _new_SpatialInteractionController },
        { Py_tp_dealloc, _dealloc_SpatialInteractionController },
        { Py_tp_methods, _methods_SpatialInteractionController },
        { Py_tp_getset, _getset_SpatialInteractionController },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionController =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionController",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionController),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionController
    };

    // ----- SpatialInteractionControllerProperties class --------------------
    constexpr const char* const _type_name_SpatialInteractionControllerProperties = "SpatialInteractionControllerProperties";

    static PyObject* _new_SpatialInteractionControllerProperties(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionControllerProperties);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionControllerProperties(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionControllerProperties_get_IsThumbstickPressed(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsThumbstickPressed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionControllerProperties_get_IsTouchpadPressed(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsTouchpadPressed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionControllerProperties_get_IsTouchpadTouched(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsTouchpadTouched());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionControllerProperties_get_ThumbstickX(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ThumbstickX());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionControllerProperties_get_ThumbstickY(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ThumbstickY());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionControllerProperties_get_TouchpadX(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TouchpadX());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionControllerProperties_get_TouchpadY(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TouchpadY());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionControllerProperties(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionControllerProperties[] = {
        { "_from", (PyCFunction)_from_SpatialInteractionControllerProperties, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionControllerProperties[] = {
        { const_cast<char*>("is_thumbstick_pressed"), (getter)SpatialInteractionControllerProperties_get_IsThumbstickPressed, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_touchpad_pressed"), (getter)SpatialInteractionControllerProperties_get_IsTouchpadPressed, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_touchpad_touched"), (getter)SpatialInteractionControllerProperties_get_IsTouchpadTouched, nullptr, nullptr, nullptr },
        { const_cast<char*>("thumbstick_x"), (getter)SpatialInteractionControllerProperties_get_ThumbstickX, nullptr, nullptr, nullptr },
        { const_cast<char*>("thumbstick_y"), (getter)SpatialInteractionControllerProperties_get_ThumbstickY, nullptr, nullptr, nullptr },
        { const_cast<char*>("touchpad_x"), (getter)SpatialInteractionControllerProperties_get_TouchpadX, nullptr, nullptr, nullptr },
        { const_cast<char*>("touchpad_y"), (getter)SpatialInteractionControllerProperties_get_TouchpadY, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionControllerProperties[] = 
    {
        { Py_tp_new, _new_SpatialInteractionControllerProperties },
        { Py_tp_dealloc, _dealloc_SpatialInteractionControllerProperties },
        { Py_tp_methods, _methods_SpatialInteractionControllerProperties },
        { Py_tp_getset, _getset_SpatialInteractionControllerProperties },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionControllerProperties =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionControllerProperties",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionControllerProperties
    };

    // ----- SpatialInteractionDetectedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialInteractionDetectedEventArgs = "SpatialInteractionDetectedEventArgs";

    static PyObject* _new_SpatialInteractionDetectedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionDetectedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionDetectedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionDetectedEventArgs_TryGetPointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetPointerPose(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionDetectedEventArgs_get_Interaction(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Interaction());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionDetectedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionDetectedEventArgs_get_InteractionSource(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSource());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionDetectedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionDetectedEventArgs[] = {
        { "try_get_pointer_pose", (PyCFunction)SpatialInteractionDetectedEventArgs_TryGetPointerPose, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialInteractionDetectedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionDetectedEventArgs[] = {
        { const_cast<char*>("interaction"), (getter)SpatialInteractionDetectedEventArgs_get_Interaction, nullptr, nullptr, nullptr },
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialInteractionDetectedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { const_cast<char*>("interaction_source"), (getter)SpatialInteractionDetectedEventArgs_get_InteractionSource, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionDetectedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialInteractionDetectedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialInteractionDetectedEventArgs },
        { Py_tp_methods, _methods_SpatialInteractionDetectedEventArgs },
        { Py_tp_getset, _getset_SpatialInteractionDetectedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionDetectedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionDetectedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionDetectedEventArgs
    };

    // ----- SpatialInteractionManager class --------------------
    constexpr const char* const _type_name_SpatialInteractionManager = "SpatialInteractionManager";

    static PyObject* _new_SpatialInteractionManager(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionManager);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionManager(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionManager_GetDetectedSourcesAtTimestamp(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::PerceptionTimestamp>(args, 0);

                return py::convert(self->obj.GetDetectedSourcesAtTimestamp(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_GetForCurrentView(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(winrt::Windows::UI::Input::Spatial::SpatialInteractionManager::GetForCurrentView());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_IsSourceKindSupported(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceKind>(args, 0);

                return py::convert(winrt::Windows::UI::Input::Spatial::SpatialInteractionManager::IsSourceKindSupported(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_add_InteractionDetected(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager, winrt::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs>>(arg);

            return py::convert(self->obj.InteractionDetected(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_remove_InteractionDetected(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.InteractionDetected(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_add_SourceDetected(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager, winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs>>(arg);

            return py::convert(self->obj.SourceDetected(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_remove_SourceDetected(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SourceDetected(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_add_SourceLost(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager, winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs>>(arg);

            return py::convert(self->obj.SourceLost(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_remove_SourceLost(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SourceLost(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_add_SourcePressed(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager, winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs>>(arg);

            return py::convert(self->obj.SourcePressed(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_remove_SourcePressed(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SourcePressed(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_add_SourceReleased(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager, winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs>>(arg);

            return py::convert(self->obj.SourceReleased(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_remove_SourceReleased(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SourceReleased(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_add_SourceUpdated(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager, winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs>>(arg);

            return py::convert(self->obj.SourceUpdated(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionManager_remove_SourceUpdated(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SourceUpdated(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionManager(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionManager[] = {
        { "get_detected_sources_at_timestamp", (PyCFunction)SpatialInteractionManager_GetDetectedSourcesAtTimestamp, METH_VARARGS, nullptr },
        { "get_for_current_view", (PyCFunction)SpatialInteractionManager_GetForCurrentView, METH_VARARGS | METH_STATIC, nullptr },
        { "is_source_kind_supported", (PyCFunction)SpatialInteractionManager_IsSourceKindSupported, METH_VARARGS | METH_STATIC, nullptr },
        { "add_interaction_detected", (PyCFunction)SpatialInteractionManager_add_InteractionDetected, METH_O, nullptr },
        { "remove_interaction_detected", (PyCFunction)SpatialInteractionManager_remove_InteractionDetected, METH_O, nullptr },
        { "add_source_detected", (PyCFunction)SpatialInteractionManager_add_SourceDetected, METH_O, nullptr },
        { "remove_source_detected", (PyCFunction)SpatialInteractionManager_remove_SourceDetected, METH_O, nullptr },
        { "add_source_lost", (PyCFunction)SpatialInteractionManager_add_SourceLost, METH_O, nullptr },
        { "remove_source_lost", (PyCFunction)SpatialInteractionManager_remove_SourceLost, METH_O, nullptr },
        { "add_source_pressed", (PyCFunction)SpatialInteractionManager_add_SourcePressed, METH_O, nullptr },
        { "remove_source_pressed", (PyCFunction)SpatialInteractionManager_remove_SourcePressed, METH_O, nullptr },
        { "add_source_released", (PyCFunction)SpatialInteractionManager_add_SourceReleased, METH_O, nullptr },
        { "remove_source_released", (PyCFunction)SpatialInteractionManager_remove_SourceReleased, METH_O, nullptr },
        { "add_source_updated", (PyCFunction)SpatialInteractionManager_add_SourceUpdated, METH_O, nullptr },
        { "remove_source_updated", (PyCFunction)SpatialInteractionManager_remove_SourceUpdated, METH_O, nullptr },
        { "_from", (PyCFunction)_from_SpatialInteractionManager, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionManager[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionManager[] = 
    {
        { Py_tp_new, _new_SpatialInteractionManager },
        { Py_tp_dealloc, _dealloc_SpatialInteractionManager },
        { Py_tp_methods, _methods_SpatialInteractionManager },
        { Py_tp_getset, _getset_SpatialInteractionManager },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionManager =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionManager",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionManager),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionManager
    };

    // ----- SpatialInteractionSource class --------------------
    constexpr const char* const _type_name_SpatialInteractionSource = "SpatialInteractionSource";

    static PyObject* _new_SpatialInteractionSource(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionSource);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionSource(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionSource_TryCreateHandMeshObserver(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.TryCreateHandMeshObserver());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_TryCreateHandMeshObserverAsync(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.TryCreateHandMeshObserverAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_TryGetStateAtTimestamp(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::PerceptionTimestamp>(args, 0);

                return py::convert(self->obj.TryGetStateAtTimestamp(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_get_Id(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Id());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_get_Kind(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_get_Controller(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Controller());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_get_IsGraspSupported(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsGraspSupported());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_get_IsMenuSupported(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsMenuSupported());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_get_IsPointingSupported(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsPointingSupported());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSource_get_Handedness(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Handedness());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionSource(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionSource>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionSource[] = {
        { "try_create_hand_mesh_observer", (PyCFunction)SpatialInteractionSource_TryCreateHandMeshObserver, METH_VARARGS, nullptr },
        { "try_create_hand_mesh_observer_async", (PyCFunction)SpatialInteractionSource_TryCreateHandMeshObserverAsync, METH_VARARGS, nullptr },
        { "try_get_state_at_timestamp", (PyCFunction)SpatialInteractionSource_TryGetStateAtTimestamp, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialInteractionSource, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionSource[] = {
        { const_cast<char*>("id"), (getter)SpatialInteractionSource_get_Id, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)SpatialInteractionSource_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("controller"), (getter)SpatialInteractionSource_get_Controller, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_grasp_supported"), (getter)SpatialInteractionSource_get_IsGraspSupported, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_menu_supported"), (getter)SpatialInteractionSource_get_IsMenuSupported, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_pointing_supported"), (getter)SpatialInteractionSource_get_IsPointingSupported, nullptr, nullptr, nullptr },
        { const_cast<char*>("handedness"), (getter)SpatialInteractionSource_get_Handedness, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionSource[] = 
    {
        { Py_tp_new, _new_SpatialInteractionSource },
        { Py_tp_dealloc, _dealloc_SpatialInteractionSource },
        { Py_tp_methods, _methods_SpatialInteractionSource },
        { Py_tp_getset, _getset_SpatialInteractionSource },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionSource =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionSource",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSource),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionSource
    };

    // ----- SpatialInteractionSourceEventArgs class --------------------
    constexpr const char* const _type_name_SpatialInteractionSourceEventArgs = "SpatialInteractionSourceEventArgs";

    static PyObject* _new_SpatialInteractionSourceEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionSourceEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionSourceEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionSourceEventArgs_get_State(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.State());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceEventArgs_get_PressKind(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PressKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionSourceEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionSourceEventArgs[] = {
        { "_from", (PyCFunction)_from_SpatialInteractionSourceEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionSourceEventArgs[] = {
        { const_cast<char*>("state"), (getter)SpatialInteractionSourceEventArgs_get_State, nullptr, nullptr, nullptr },
        { const_cast<char*>("press_kind"), (getter)SpatialInteractionSourceEventArgs_get_PressKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionSourceEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialInteractionSourceEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialInteractionSourceEventArgs },
        { Py_tp_methods, _methods_SpatialInteractionSourceEventArgs },
        { Py_tp_getset, _getset_SpatialInteractionSourceEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionSourceEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionSourceEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionSourceEventArgs
    };

    // ----- SpatialInteractionSourceLocation class --------------------
    constexpr const char* const _type_name_SpatialInteractionSourceLocation = "SpatialInteractionSourceLocation";

    static PyObject* _new_SpatialInteractionSourceLocation(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionSourceLocation);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionSourceLocation(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionSourceLocation_get_Position(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Position());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceLocation_get_Velocity(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Velocity());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceLocation_get_Orientation(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Orientation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceLocation_get_AngularVelocity(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AngularVelocity());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceLocation_get_PositionAccuracy(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PositionAccuracy());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceLocation_get_SourcePointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SourcePointerPose());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionSourceLocation(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionSourceLocation[] = {
        { "_from", (PyCFunction)_from_SpatialInteractionSourceLocation, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionSourceLocation[] = {
        { const_cast<char*>("position"), (getter)SpatialInteractionSourceLocation_get_Position, nullptr, nullptr, nullptr },
        { const_cast<char*>("velocity"), (getter)SpatialInteractionSourceLocation_get_Velocity, nullptr, nullptr, nullptr },
        { const_cast<char*>("orientation"), (getter)SpatialInteractionSourceLocation_get_Orientation, nullptr, nullptr, nullptr },
        { const_cast<char*>("angular_velocity"), (getter)SpatialInteractionSourceLocation_get_AngularVelocity, nullptr, nullptr, nullptr },
        { const_cast<char*>("position_accuracy"), (getter)SpatialInteractionSourceLocation_get_PositionAccuracy, nullptr, nullptr, nullptr },
        { const_cast<char*>("source_pointer_pose"), (getter)SpatialInteractionSourceLocation_get_SourcePointerPose, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionSourceLocation[] = 
    {
        { Py_tp_new, _new_SpatialInteractionSourceLocation },
        { Py_tp_dealloc, _dealloc_SpatialInteractionSourceLocation },
        { Py_tp_methods, _methods_SpatialInteractionSourceLocation },
        { Py_tp_getset, _getset_SpatialInteractionSourceLocation },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionSourceLocation =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionSourceLocation",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionSourceLocation
    };

    // ----- SpatialInteractionSourceProperties class --------------------
    constexpr const char* const _type_name_SpatialInteractionSourceProperties = "SpatialInteractionSourceProperties";

    static PyObject* _new_SpatialInteractionSourceProperties(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionSourceProperties);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionSourceProperties(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceProperties* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionSourceProperties_TryGetLocation(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceProperties* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetLocation(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceProperties_TryGetSourceLossMitigationDirection(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceProperties* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetSourceLossMitigationDirection(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceProperties_get_SourceLossRisk(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceProperties* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SourceLossRisk());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionSourceProperties(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceProperties>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionSourceProperties[] = {
        { "try_get_location", (PyCFunction)SpatialInteractionSourceProperties_TryGetLocation, METH_VARARGS, nullptr },
        { "try_get_source_loss_mitigation_direction", (PyCFunction)SpatialInteractionSourceProperties_TryGetSourceLossMitigationDirection, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialInteractionSourceProperties, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionSourceProperties[] = {
        { const_cast<char*>("source_loss_risk"), (getter)SpatialInteractionSourceProperties_get_SourceLossRisk, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionSourceProperties[] = 
    {
        { Py_tp_new, _new_SpatialInteractionSourceProperties },
        { Py_tp_dealloc, _dealloc_SpatialInteractionSourceProperties },
        { Py_tp_methods, _methods_SpatialInteractionSourceProperties },
        { Py_tp_getset, _getset_SpatialInteractionSourceProperties },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionSourceProperties =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionSourceProperties",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceProperties),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionSourceProperties
    };

    // ----- SpatialInteractionSourceState class --------------------
    constexpr const char* const _type_name_SpatialInteractionSourceState = "SpatialInteractionSourceState";

    static PyObject* _new_SpatialInteractionSourceState(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialInteractionSourceState);
        return nullptr;
    }

    static void _dealloc_SpatialInteractionSourceState(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialInteractionSourceState_TryGetHandPose(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.TryGetHandPose());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_TryGetPointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetPointerPose(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_IsPressed(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsPressed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_Properties(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Properties());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_Source(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Source());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_Timestamp(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Timestamp());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_ControllerProperties(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ControllerProperties());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_IsGrasped(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsGrasped());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_IsMenuPressed(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsMenuPressed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_IsSelectPressed(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsSelectPressed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialInteractionSourceState_get_SelectPressedValue(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectPressedValue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialInteractionSourceState(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceState>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialInteractionSourceState[] = {
        { "try_get_hand_pose", (PyCFunction)SpatialInteractionSourceState_TryGetHandPose, METH_VARARGS, nullptr },
        { "try_get_pointer_pose", (PyCFunction)SpatialInteractionSourceState_TryGetPointerPose, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialInteractionSourceState, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialInteractionSourceState[] = {
        { const_cast<char*>("is_pressed"), (getter)SpatialInteractionSourceState_get_IsPressed, nullptr, nullptr, nullptr },
        { const_cast<char*>("properties"), (getter)SpatialInteractionSourceState_get_Properties, nullptr, nullptr, nullptr },
        { const_cast<char*>("source"), (getter)SpatialInteractionSourceState_get_Source, nullptr, nullptr, nullptr },
        { const_cast<char*>("timestamp"), (getter)SpatialInteractionSourceState_get_Timestamp, nullptr, nullptr, nullptr },
        { const_cast<char*>("controller_properties"), (getter)SpatialInteractionSourceState_get_ControllerProperties, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_grasped"), (getter)SpatialInteractionSourceState_get_IsGrasped, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_menu_pressed"), (getter)SpatialInteractionSourceState_get_IsMenuPressed, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_select_pressed"), (getter)SpatialInteractionSourceState_get_IsSelectPressed, nullptr, nullptr, nullptr },
        { const_cast<char*>("select_pressed_value"), (getter)SpatialInteractionSourceState_get_SelectPressedValue, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialInteractionSourceState[] = 
    {
        { Py_tp_new, _new_SpatialInteractionSourceState },
        { Py_tp_dealloc, _dealloc_SpatialInteractionSourceState },
        { Py_tp_methods, _methods_SpatialInteractionSourceState },
        { Py_tp_getset, _getset_SpatialInteractionSourceState },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialInteractionSourceState =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialInteractionSourceState",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialInteractionSourceState),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialInteractionSourceState
    };

    // ----- SpatialManipulationCanceledEventArgs class --------------------
    constexpr const char* const _type_name_SpatialManipulationCanceledEventArgs = "SpatialManipulationCanceledEventArgs";

    static PyObject* _new_SpatialManipulationCanceledEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialManipulationCanceledEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialManipulationCanceledEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationCanceledEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialManipulationCanceledEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationCanceledEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialManipulationCanceledEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialManipulationCanceledEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialManipulationCanceledEventArgs[] = {
        { "_from", (PyCFunction)_from_SpatialManipulationCanceledEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialManipulationCanceledEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialManipulationCanceledEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialManipulationCanceledEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialManipulationCanceledEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialManipulationCanceledEventArgs },
        { Py_tp_methods, _methods_SpatialManipulationCanceledEventArgs },
        { Py_tp_getset, _getset_SpatialManipulationCanceledEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialManipulationCanceledEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialManipulationCanceledEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationCanceledEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialManipulationCanceledEventArgs
    };

    // ----- SpatialManipulationCompletedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialManipulationCompletedEventArgs = "SpatialManipulationCompletedEventArgs";

    static PyObject* _new_SpatialManipulationCompletedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialManipulationCompletedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialManipulationCompletedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationCompletedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialManipulationCompletedEventArgs_TryGetCumulativeDelta(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationCompletedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetCumulativeDelta(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialManipulationCompletedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationCompletedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialManipulationCompletedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialManipulationCompletedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialManipulationCompletedEventArgs[] = {
        { "try_get_cumulative_delta", (PyCFunction)SpatialManipulationCompletedEventArgs_TryGetCumulativeDelta, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialManipulationCompletedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialManipulationCompletedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialManipulationCompletedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialManipulationCompletedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialManipulationCompletedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialManipulationCompletedEventArgs },
        { Py_tp_methods, _methods_SpatialManipulationCompletedEventArgs },
        { Py_tp_getset, _getset_SpatialManipulationCompletedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialManipulationCompletedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialManipulationCompletedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationCompletedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialManipulationCompletedEventArgs
    };

    // ----- SpatialManipulationDelta class --------------------
    constexpr const char* const _type_name_SpatialManipulationDelta = "SpatialManipulationDelta";

    static PyObject* _new_SpatialManipulationDelta(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialManipulationDelta);
        return nullptr;
    }

    static void _dealloc_SpatialManipulationDelta(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationDelta* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialManipulationDelta_get_Translation(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationDelta* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Translation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialManipulationDelta(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialManipulationDelta>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialManipulationDelta[] = {
        { "_from", (PyCFunction)_from_SpatialManipulationDelta, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialManipulationDelta[] = {
        { const_cast<char*>("translation"), (getter)SpatialManipulationDelta_get_Translation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialManipulationDelta[] = 
    {
        { Py_tp_new, _new_SpatialManipulationDelta },
        { Py_tp_dealloc, _dealloc_SpatialManipulationDelta },
        { Py_tp_methods, _methods_SpatialManipulationDelta },
        { Py_tp_getset, _getset_SpatialManipulationDelta },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialManipulationDelta =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialManipulationDelta",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationDelta),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialManipulationDelta
    };

    // ----- SpatialManipulationStartedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialManipulationStartedEventArgs = "SpatialManipulationStartedEventArgs";

    static PyObject* _new_SpatialManipulationStartedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialManipulationStartedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialManipulationStartedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationStartedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialManipulationStartedEventArgs_TryGetPointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationStartedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetPointerPose(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialManipulationStartedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationStartedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialManipulationStartedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialManipulationStartedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialManipulationStartedEventArgs[] = {
        { "try_get_pointer_pose", (PyCFunction)SpatialManipulationStartedEventArgs_TryGetPointerPose, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialManipulationStartedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialManipulationStartedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialManipulationStartedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialManipulationStartedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialManipulationStartedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialManipulationStartedEventArgs },
        { Py_tp_methods, _methods_SpatialManipulationStartedEventArgs },
        { Py_tp_getset, _getset_SpatialManipulationStartedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialManipulationStartedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialManipulationStartedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationStartedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialManipulationStartedEventArgs
    };

    // ----- SpatialManipulationUpdatedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialManipulationUpdatedEventArgs = "SpatialManipulationUpdatedEventArgs";

    static PyObject* _new_SpatialManipulationUpdatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialManipulationUpdatedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialManipulationUpdatedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationUpdatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialManipulationUpdatedEventArgs_TryGetCumulativeDelta(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationUpdatedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetCumulativeDelta(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialManipulationUpdatedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationUpdatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialManipulationUpdatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialManipulationUpdatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialManipulationUpdatedEventArgs[] = {
        { "try_get_cumulative_delta", (PyCFunction)SpatialManipulationUpdatedEventArgs_TryGetCumulativeDelta, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialManipulationUpdatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialManipulationUpdatedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialManipulationUpdatedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialManipulationUpdatedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialManipulationUpdatedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialManipulationUpdatedEventArgs },
        { Py_tp_methods, _methods_SpatialManipulationUpdatedEventArgs },
        { Py_tp_getset, _getset_SpatialManipulationUpdatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialManipulationUpdatedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialManipulationUpdatedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialManipulationUpdatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialManipulationUpdatedEventArgs
    };

    // ----- SpatialNavigationCanceledEventArgs class --------------------
    constexpr const char* const _type_name_SpatialNavigationCanceledEventArgs = "SpatialNavigationCanceledEventArgs";

    static PyObject* _new_SpatialNavigationCanceledEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialNavigationCanceledEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialNavigationCanceledEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationCanceledEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialNavigationCanceledEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationCanceledEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialNavigationCanceledEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialNavigationCanceledEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialNavigationCanceledEventArgs[] = {
        { "_from", (PyCFunction)_from_SpatialNavigationCanceledEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialNavigationCanceledEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialNavigationCanceledEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialNavigationCanceledEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialNavigationCanceledEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialNavigationCanceledEventArgs },
        { Py_tp_methods, _methods_SpatialNavigationCanceledEventArgs },
        { Py_tp_getset, _getset_SpatialNavigationCanceledEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialNavigationCanceledEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialNavigationCanceledEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationCanceledEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialNavigationCanceledEventArgs
    };

    // ----- SpatialNavigationCompletedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialNavigationCompletedEventArgs = "SpatialNavigationCompletedEventArgs";

    static PyObject* _new_SpatialNavigationCompletedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialNavigationCompletedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialNavigationCompletedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationCompletedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialNavigationCompletedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationCompletedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialNavigationCompletedEventArgs_get_NormalizedOffset(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationCompletedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.NormalizedOffset());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialNavigationCompletedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialNavigationCompletedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialNavigationCompletedEventArgs[] = {
        { "_from", (PyCFunction)_from_SpatialNavigationCompletedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialNavigationCompletedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialNavigationCompletedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { const_cast<char*>("normalized_offset"), (getter)SpatialNavigationCompletedEventArgs_get_NormalizedOffset, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialNavigationCompletedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialNavigationCompletedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialNavigationCompletedEventArgs },
        { Py_tp_methods, _methods_SpatialNavigationCompletedEventArgs },
        { Py_tp_getset, _getset_SpatialNavigationCompletedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialNavigationCompletedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialNavigationCompletedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationCompletedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialNavigationCompletedEventArgs
    };

    // ----- SpatialNavigationStartedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialNavigationStartedEventArgs = "SpatialNavigationStartedEventArgs";

    static PyObject* _new_SpatialNavigationStartedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialNavigationStartedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialNavigationStartedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialNavigationStartedEventArgs_TryGetPointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetPointerPose(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialNavigationStartedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialNavigationStartedEventArgs_get_IsNavigatingX(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsNavigatingX());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialNavigationStartedEventArgs_get_IsNavigatingY(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsNavigatingY());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialNavigationStartedEventArgs_get_IsNavigatingZ(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsNavigatingZ());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialNavigationStartedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialNavigationStartedEventArgs[] = {
        { "try_get_pointer_pose", (PyCFunction)SpatialNavigationStartedEventArgs_TryGetPointerPose, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialNavigationStartedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialNavigationStartedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialNavigationStartedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_navigating_x"), (getter)SpatialNavigationStartedEventArgs_get_IsNavigatingX, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_navigating_y"), (getter)SpatialNavigationStartedEventArgs_get_IsNavigatingY, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_navigating_z"), (getter)SpatialNavigationStartedEventArgs_get_IsNavigatingZ, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialNavigationStartedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialNavigationStartedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialNavigationStartedEventArgs },
        { Py_tp_methods, _methods_SpatialNavigationStartedEventArgs },
        { Py_tp_getset, _getset_SpatialNavigationStartedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialNavigationStartedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialNavigationStartedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialNavigationStartedEventArgs
    };

    // ----- SpatialNavigationUpdatedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialNavigationUpdatedEventArgs = "SpatialNavigationUpdatedEventArgs";

    static PyObject* _new_SpatialNavigationUpdatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialNavigationUpdatedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialNavigationUpdatedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationUpdatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialNavigationUpdatedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationUpdatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialNavigationUpdatedEventArgs_get_NormalizedOffset(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationUpdatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.NormalizedOffset());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialNavigationUpdatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialNavigationUpdatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialNavigationUpdatedEventArgs[] = {
        { "_from", (PyCFunction)_from_SpatialNavigationUpdatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialNavigationUpdatedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialNavigationUpdatedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { const_cast<char*>("normalized_offset"), (getter)SpatialNavigationUpdatedEventArgs_get_NormalizedOffset, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialNavigationUpdatedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialNavigationUpdatedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialNavigationUpdatedEventArgs },
        { Py_tp_methods, _methods_SpatialNavigationUpdatedEventArgs },
        { Py_tp_getset, _getset_SpatialNavigationUpdatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialNavigationUpdatedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialNavigationUpdatedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialNavigationUpdatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialNavigationUpdatedEventArgs
    };

    // ----- SpatialPointerInteractionSourcePose class --------------------
    constexpr const char* const _type_name_SpatialPointerInteractionSourcePose = "SpatialPointerInteractionSourcePose";

    static PyObject* _new_SpatialPointerInteractionSourcePose(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialPointerInteractionSourcePose);
        return nullptr;
    }

    static void _dealloc_SpatialPointerInteractionSourcePose(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialPointerInteractionSourcePose_get_ForwardDirection(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ForwardDirection());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialPointerInteractionSourcePose_get_Position(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Position());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialPointerInteractionSourcePose_get_UpDirection(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.UpDirection());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialPointerInteractionSourcePose_get_Orientation(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Orientation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialPointerInteractionSourcePose_get_PositionAccuracy(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PositionAccuracy());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialPointerInteractionSourcePose(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialPointerInteractionSourcePose[] = {
        { "_from", (PyCFunction)_from_SpatialPointerInteractionSourcePose, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialPointerInteractionSourcePose[] = {
        { const_cast<char*>("forward_direction"), (getter)SpatialPointerInteractionSourcePose_get_ForwardDirection, nullptr, nullptr, nullptr },
        { const_cast<char*>("position"), (getter)SpatialPointerInteractionSourcePose_get_Position, nullptr, nullptr, nullptr },
        { const_cast<char*>("up_direction"), (getter)SpatialPointerInteractionSourcePose_get_UpDirection, nullptr, nullptr, nullptr },
        { const_cast<char*>("orientation"), (getter)SpatialPointerInteractionSourcePose_get_Orientation, nullptr, nullptr, nullptr },
        { const_cast<char*>("position_accuracy"), (getter)SpatialPointerInteractionSourcePose_get_PositionAccuracy, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialPointerInteractionSourcePose[] = 
    {
        { Py_tp_new, _new_SpatialPointerInteractionSourcePose },
        { Py_tp_dealloc, _dealloc_SpatialPointerInteractionSourcePose },
        { Py_tp_methods, _methods_SpatialPointerInteractionSourcePose },
        { Py_tp_getset, _getset_SpatialPointerInteractionSourcePose },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialPointerInteractionSourcePose =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialPointerInteractionSourcePose",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialPointerInteractionSourcePose
    };

    // ----- SpatialPointerPose class --------------------
    constexpr const char* const _type_name_SpatialPointerPose = "SpatialPointerPose";

    static PyObject* _new_SpatialPointerPose(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialPointerPose);
        return nullptr;
    }

    static void _dealloc_SpatialPointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerPose* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialPointerPose_TryGetAtTimestamp(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);
                auto param1 = py::convert_to<winrt::Windows::Perception::PerceptionTimestamp>(args, 1);

                return py::convert(winrt::Windows::UI::Input::Spatial::SpatialPointerPose::TryGetAtTimestamp(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialPointerPose_TryGetInteractionSourcePose(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerPose* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::UI::Input::Spatial::SpatialInteractionSource>(args, 0);

                return py::convert(self->obj.TryGetInteractionSourcePose(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialPointerPose_get_Head(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerPose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Head());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialPointerPose_get_Timestamp(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerPose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Timestamp());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialPointerPose_get_Eyes(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerPose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Eyes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialPointerPose_get_IsHeadCapturedBySystem(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerPose* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsHeadCapturedBySystem());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialPointerPose(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialPointerPose>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialPointerPose[] = {
        { "try_get_at_timestamp", (PyCFunction)SpatialPointerPose_TryGetAtTimestamp, METH_VARARGS | METH_STATIC, nullptr },
        { "try_get_interaction_source_pose", (PyCFunction)SpatialPointerPose_TryGetInteractionSourcePose, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialPointerPose, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialPointerPose[] = {
        { const_cast<char*>("head"), (getter)SpatialPointerPose_get_Head, nullptr, nullptr, nullptr },
        { const_cast<char*>("timestamp"), (getter)SpatialPointerPose_get_Timestamp, nullptr, nullptr, nullptr },
        { const_cast<char*>("eyes"), (getter)SpatialPointerPose_get_Eyes, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_head_captured_by_system"), (getter)SpatialPointerPose_get_IsHeadCapturedBySystem, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialPointerPose[] = 
    {
        { Py_tp_new, _new_SpatialPointerPose },
        { Py_tp_dealloc, _dealloc_SpatialPointerPose },
        { Py_tp_methods, _methods_SpatialPointerPose },
        { Py_tp_getset, _getset_SpatialPointerPose },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialPointerPose =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialPointerPose",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialPointerPose),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialPointerPose
    };

    // ----- SpatialRecognitionEndedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialRecognitionEndedEventArgs = "SpatialRecognitionEndedEventArgs";

    static PyObject* _new_SpatialRecognitionEndedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialRecognitionEndedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialRecognitionEndedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialRecognitionEndedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialRecognitionEndedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialRecognitionEndedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialRecognitionEndedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialRecognitionEndedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialRecognitionEndedEventArgs[] = {
        { "_from", (PyCFunction)_from_SpatialRecognitionEndedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialRecognitionEndedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialRecognitionEndedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialRecognitionEndedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialRecognitionEndedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialRecognitionEndedEventArgs },
        { Py_tp_methods, _methods_SpatialRecognitionEndedEventArgs },
        { Py_tp_getset, _getset_SpatialRecognitionEndedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialRecognitionEndedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialRecognitionEndedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialRecognitionEndedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialRecognitionEndedEventArgs
    };

    // ----- SpatialRecognitionStartedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialRecognitionStartedEventArgs = "SpatialRecognitionStartedEventArgs";

    static PyObject* _new_SpatialRecognitionStartedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialRecognitionStartedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialRecognitionStartedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialRecognitionStartedEventArgs_IsGesturePossible(py::wrapper::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::UI::Input::Spatial::SpatialGestureSettings>(args, 0);

                return py::convert(self->obj.IsGesturePossible(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialRecognitionStartedEventArgs_TryGetPointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetPointerPose(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialRecognitionStartedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialRecognitionStartedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialRecognitionStartedEventArgs[] = {
        { "is_gesture_possible", (PyCFunction)SpatialRecognitionStartedEventArgs_IsGesturePossible, METH_VARARGS, nullptr },
        { "try_get_pointer_pose", (PyCFunction)SpatialRecognitionStartedEventArgs_TryGetPointerPose, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialRecognitionStartedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialRecognitionStartedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialRecognitionStartedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialRecognitionStartedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialRecognitionStartedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialRecognitionStartedEventArgs },
        { Py_tp_methods, _methods_SpatialRecognitionStartedEventArgs },
        { Py_tp_getset, _getset_SpatialRecognitionStartedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialRecognitionStartedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialRecognitionStartedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialRecognitionStartedEventArgs
    };

    // ----- SpatialTappedEventArgs class --------------------
    constexpr const char* const _type_name_SpatialTappedEventArgs = "SpatialTappedEventArgs";

    static PyObject* _new_SpatialTappedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SpatialTappedEventArgs);
        return nullptr;
    }

    static void _dealloc_SpatialTappedEventArgs(py::wrapper::Windows::UI::Input::Spatial::SpatialTappedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SpatialTappedEventArgs_TryGetPointerPose(py::wrapper::Windows::UI::Input::Spatial::SpatialTappedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Perception::Spatial::SpatialCoordinateSystem>(args, 0);

                return py::convert(self->obj.TryGetPointerPose(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SpatialTappedEventArgs_get_InteractionSourceKind(py::wrapper::Windows::UI::Input::Spatial::SpatialTappedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InteractionSourceKind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SpatialTappedEventArgs_get_TapCount(py::wrapper::Windows::UI::Input::Spatial::SpatialTappedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TapCount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SpatialTappedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Input::Spatial::SpatialTappedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SpatialTappedEventArgs[] = {
        { "try_get_pointer_pose", (PyCFunction)SpatialTappedEventArgs_TryGetPointerPose, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SpatialTappedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SpatialTappedEventArgs[] = {
        { const_cast<char*>("interaction_source_kind"), (getter)SpatialTappedEventArgs_get_InteractionSourceKind, nullptr, nullptr, nullptr },
        { const_cast<char*>("tap_count"), (getter)SpatialTappedEventArgs_get_TapCount, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SpatialTappedEventArgs[] = 
    {
        { Py_tp_new, _new_SpatialTappedEventArgs },
        { Py_tp_dealloc, _dealloc_SpatialTappedEventArgs },
        { Py_tp_methods, _methods_SpatialTappedEventArgs },
        { Py_tp_getset, _getset_SpatialTappedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SpatialTappedEventArgs =
    {
        "_winrt_Windows_UI_Input_Spatial.SpatialTappedEventArgs",
        sizeof(py::wrapper::Windows::UI::Input::Spatial::SpatialTappedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SpatialTappedEventArgs
    };

    // ----- Windows.UI.Input.Spatial Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialGestureRecognizer>::python_type = py::register_python_type(module, _type_name_SpatialGestureRecognizer, &_type_spec_SpatialGestureRecognizer, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialHoldCanceledEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialHoldCanceledEventArgs, &_type_spec_SpatialHoldCanceledEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialHoldCompletedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialHoldCompletedEventArgs, &_type_spec_SpatialHoldCompletedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialHoldStartedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialHoldStartedEventArgs, &_type_spec_SpatialHoldStartedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteraction>::python_type = py::register_python_type(module, _type_name_SpatialInteraction, &_type_spec_SpatialInteraction, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionController>::python_type = py::register_python_type(module, _type_name_SpatialInteractionController, &_type_spec_SpatialInteractionController, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionControllerProperties>::python_type = py::register_python_type(module, _type_name_SpatialInteractionControllerProperties, &_type_spec_SpatialInteractionControllerProperties, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionDetectedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialInteractionDetectedEventArgs, &_type_spec_SpatialInteractionDetectedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionManager>::python_type = py::register_python_type(module, _type_name_SpatialInteractionManager, &_type_spec_SpatialInteractionManager, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSource>::python_type = py::register_python_type(module, _type_name_SpatialInteractionSource, &_type_spec_SpatialInteractionSource, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialInteractionSourceEventArgs, &_type_spec_SpatialInteractionSourceEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceLocation>::python_type = py::register_python_type(module, _type_name_SpatialInteractionSourceLocation, &_type_spec_SpatialInteractionSourceLocation, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceProperties>::python_type = py::register_python_type(module, _type_name_SpatialInteractionSourceProperties, &_type_spec_SpatialInteractionSourceProperties, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialInteractionSourceState>::python_type = py::register_python_type(module, _type_name_SpatialInteractionSourceState, &_type_spec_SpatialInteractionSourceState, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationCanceledEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialManipulationCanceledEventArgs, &_type_spec_SpatialManipulationCanceledEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationCompletedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialManipulationCompletedEventArgs, &_type_spec_SpatialManipulationCompletedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationDelta>::python_type = py::register_python_type(module, _type_name_SpatialManipulationDelta, &_type_spec_SpatialManipulationDelta, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationStartedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialManipulationStartedEventArgs, &_type_spec_SpatialManipulationStartedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialManipulationUpdatedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialManipulationUpdatedEventArgs, &_type_spec_SpatialManipulationUpdatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialNavigationCanceledEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialNavigationCanceledEventArgs, &_type_spec_SpatialNavigationCanceledEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialNavigationCompletedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialNavigationCompletedEventArgs, &_type_spec_SpatialNavigationCompletedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialNavigationStartedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialNavigationStartedEventArgs, &_type_spec_SpatialNavigationStartedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialNavigationUpdatedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialNavigationUpdatedEventArgs, &_type_spec_SpatialNavigationUpdatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialPointerInteractionSourcePose>::python_type = py::register_python_type(module, _type_name_SpatialPointerInteractionSourcePose, &_type_spec_SpatialPointerInteractionSourcePose, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialPointerPose>::python_type = py::register_python_type(module, _type_name_SpatialPointerPose, &_type_spec_SpatialPointerPose, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialRecognitionEndedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialRecognitionEndedEventArgs, &_type_spec_SpatialRecognitionEndedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialRecognitionStartedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialRecognitionStartedEventArgs, &_type_spec_SpatialRecognitionStartedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::UI::Input::Spatial::SpatialTappedEventArgs>::python_type = py::register_python_type(module, _type_name_SpatialTappedEventArgs, &_type_spec_SpatialTappedEventArgs, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.UI.Input.Spatial");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_UI_Input_Spatial",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::UI::Input::Spatial

PyMODINIT_FUNC
PyInit__winrt_Windows_UI_Input_Spatial (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::UI::Input::Spatial::module_def);
}
