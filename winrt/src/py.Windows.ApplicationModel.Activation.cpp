// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.ApplicationModel.Activation.h"

PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::CommandLineActivationOperation>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::LockScreenComponentActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::SearchActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::SplashScreen>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::TileActivatedInfo>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IContactPanelActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs2>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs2>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::ISearchActivatedEventArgsWithLinguisticDetails>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IViewSwitcherProvider>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs>::python_type;

namespace py::cpp::Windows::ApplicationModel::Activation
{
    // ----- AppointmentsProviderAddAppointmentActivatedEventArgs class --------------------
    constexpr const char* const _type_name_AppointmentsProviderAddAppointmentActivatedEventArgs = "AppointmentsProviderAddAppointmentActivatedEventArgs";

    static PyObject* _new_AppointmentsProviderAddAppointmentActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_AppointmentsProviderAddAppointmentActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_AppointmentsProviderAddAppointmentActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* AppointmentsProviderAddAppointmentActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderAddAppointmentActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderAddAppointmentActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderAddAppointmentActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderAddAppointmentActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderAddAppointmentActivatedEventArgs_get_AddAppointmentOperation(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AddAppointmentOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_AppointmentsProviderAddAppointmentActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_AppointmentsProviderAddAppointmentActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_AppointmentsProviderAddAppointmentActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_AppointmentsProviderAddAppointmentActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)AppointmentsProviderAddAppointmentActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)AppointmentsProviderAddAppointmentActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)AppointmentsProviderAddAppointmentActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)AppointmentsProviderAddAppointmentActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)AppointmentsProviderAddAppointmentActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("add_appointment_operation"), (getter)AppointmentsProviderAddAppointmentActivatedEventArgs_get_AddAppointmentOperation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_AppointmentsProviderAddAppointmentActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_AppointmentsProviderAddAppointmentActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_AppointmentsProviderAddAppointmentActivatedEventArgs },
        { Py_tp_methods, _methods_AppointmentsProviderAddAppointmentActivatedEventArgs },
        { Py_tp_getset, _getset_AppointmentsProviderAddAppointmentActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_AppointmentsProviderAddAppointmentActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.AppointmentsProviderAddAppointmentActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_AppointmentsProviderAddAppointmentActivatedEventArgs
    };

    // ----- AppointmentsProviderRemoveAppointmentActivatedEventArgs class --------------------
    constexpr const char* const _type_name_AppointmentsProviderRemoveAppointmentActivatedEventArgs = "AppointmentsProviderRemoveAppointmentActivatedEventArgs";

    static PyObject* _new_AppointmentsProviderRemoveAppointmentActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_AppointmentsProviderRemoveAppointmentActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_AppointmentsProviderRemoveAppointmentActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_RemoveAppointmentOperation(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RemoveAppointmentOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_AppointmentsProviderRemoveAppointmentActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_AppointmentsProviderRemoveAppointmentActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_AppointmentsProviderRemoveAppointmentActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_AppointmentsProviderRemoveAppointmentActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("remove_appointment_operation"), (getter)AppointmentsProviderRemoveAppointmentActivatedEventArgs_get_RemoveAppointmentOperation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_AppointmentsProviderRemoveAppointmentActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_AppointmentsProviderRemoveAppointmentActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_AppointmentsProviderRemoveAppointmentActivatedEventArgs },
        { Py_tp_methods, _methods_AppointmentsProviderRemoveAppointmentActivatedEventArgs },
        { Py_tp_getset, _getset_AppointmentsProviderRemoveAppointmentActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_AppointmentsProviderRemoveAppointmentActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.AppointmentsProviderRemoveAppointmentActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_AppointmentsProviderRemoveAppointmentActivatedEventArgs
    };

    // ----- AppointmentsProviderReplaceAppointmentActivatedEventArgs class --------------------
    constexpr const char* const _type_name_AppointmentsProviderReplaceAppointmentActivatedEventArgs = "AppointmentsProviderReplaceAppointmentActivatedEventArgs";

    static PyObject* _new_AppointmentsProviderReplaceAppointmentActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_AppointmentsProviderReplaceAppointmentActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_AppointmentsProviderReplaceAppointmentActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_ReplaceAppointmentOperation(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ReplaceAppointmentOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_AppointmentsProviderReplaceAppointmentActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_AppointmentsProviderReplaceAppointmentActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_AppointmentsProviderReplaceAppointmentActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_AppointmentsProviderReplaceAppointmentActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("replace_appointment_operation"), (getter)AppointmentsProviderReplaceAppointmentActivatedEventArgs_get_ReplaceAppointmentOperation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_AppointmentsProviderReplaceAppointmentActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_AppointmentsProviderReplaceAppointmentActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_AppointmentsProviderReplaceAppointmentActivatedEventArgs },
        { Py_tp_methods, _methods_AppointmentsProviderReplaceAppointmentActivatedEventArgs },
        { Py_tp_getset, _getset_AppointmentsProviderReplaceAppointmentActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_AppointmentsProviderReplaceAppointmentActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.AppointmentsProviderReplaceAppointmentActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_AppointmentsProviderReplaceAppointmentActivatedEventArgs
    };

    // ----- AppointmentsProviderShowAppointmentDetailsActivatedEventArgs class --------------------
    constexpr const char* const _type_name_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs = "AppointmentsProviderShowAppointmentDetailsActivatedEventArgs";

    static PyObject* _new_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_InstanceStartDate(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InstanceStartDate());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_LocalId(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.LocalId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_RoamingId(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RoamingId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("instance_start_date"), (getter)AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_InstanceStartDate, nullptr, nullptr, nullptr },
        { const_cast<char*>("local_id"), (getter)AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_LocalId, nullptr, nullptr, nullptr },
        { const_cast<char*>("roaming_id"), (getter)AppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_RoamingId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs },
        { Py_tp_methods, _methods_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs },
        { Py_tp_getset, _getset_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.AppointmentsProviderShowAppointmentDetailsActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs
    };

    // ----- AppointmentsProviderShowTimeFrameActivatedEventArgs class --------------------
    constexpr const char* const _type_name_AppointmentsProviderShowTimeFrameActivatedEventArgs = "AppointmentsProviderShowTimeFrameActivatedEventArgs";

    static PyObject* _new_AppointmentsProviderShowTimeFrameActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_AppointmentsProviderShowTimeFrameActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_AppointmentsProviderShowTimeFrameActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* AppointmentsProviderShowTimeFrameActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowTimeFrameActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowTimeFrameActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowTimeFrameActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowTimeFrameActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowTimeFrameActivatedEventArgs_get_Duration(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Duration());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* AppointmentsProviderShowTimeFrameActivatedEventArgs_get_TimeToShow(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TimeToShow());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_AppointmentsProviderShowTimeFrameActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_AppointmentsProviderShowTimeFrameActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_AppointmentsProviderShowTimeFrameActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_AppointmentsProviderShowTimeFrameActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)AppointmentsProviderShowTimeFrameActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)AppointmentsProviderShowTimeFrameActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)AppointmentsProviderShowTimeFrameActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)AppointmentsProviderShowTimeFrameActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)AppointmentsProviderShowTimeFrameActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("duration"), (getter)AppointmentsProviderShowTimeFrameActivatedEventArgs_get_Duration, nullptr, nullptr, nullptr },
        { const_cast<char*>("time_to_show"), (getter)AppointmentsProviderShowTimeFrameActivatedEventArgs_get_TimeToShow, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_AppointmentsProviderShowTimeFrameActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_AppointmentsProviderShowTimeFrameActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_AppointmentsProviderShowTimeFrameActivatedEventArgs },
        { Py_tp_methods, _methods_AppointmentsProviderShowTimeFrameActivatedEventArgs },
        { Py_tp_getset, _getset_AppointmentsProviderShowTimeFrameActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_AppointmentsProviderShowTimeFrameActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.AppointmentsProviderShowTimeFrameActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_AppointmentsProviderShowTimeFrameActivatedEventArgs
    };

    // ----- BackgroundActivatedEventArgs class --------------------
    constexpr const char* const _type_name_BackgroundActivatedEventArgs = "BackgroundActivatedEventArgs";

    static PyObject* _new_BackgroundActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_BackgroundActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_BackgroundActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* BackgroundActivatedEventArgs_get_TaskInstance(py::wrapper::Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskInstance());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_BackgroundActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_BackgroundActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_BackgroundActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_BackgroundActivatedEventArgs[] = {
        { const_cast<char*>("task_instance"), (getter)BackgroundActivatedEventArgs_get_TaskInstance, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_BackgroundActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_BackgroundActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_BackgroundActivatedEventArgs },
        { Py_tp_methods, _methods_BackgroundActivatedEventArgs },
        { Py_tp_getset, _getset_BackgroundActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_BackgroundActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.BackgroundActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_BackgroundActivatedEventArgs
    };

    // ----- BarcodeScannerPreviewActivatedEventArgs class --------------------
    constexpr const char* const _type_name_BarcodeScannerPreviewActivatedEventArgs = "BarcodeScannerPreviewActivatedEventArgs";

    static PyObject* _new_BarcodeScannerPreviewActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_BarcodeScannerPreviewActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_BarcodeScannerPreviewActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* BarcodeScannerPreviewActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* BarcodeScannerPreviewActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* BarcodeScannerPreviewActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* BarcodeScannerPreviewActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* BarcodeScannerPreviewActivatedEventArgs_get_ConnectionId(py::wrapper::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ConnectionId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_BarcodeScannerPreviewActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_BarcodeScannerPreviewActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_BarcodeScannerPreviewActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_BarcodeScannerPreviewActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)BarcodeScannerPreviewActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)BarcodeScannerPreviewActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)BarcodeScannerPreviewActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)BarcodeScannerPreviewActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("connection_id"), (getter)BarcodeScannerPreviewActivatedEventArgs_get_ConnectionId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_BarcodeScannerPreviewActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_BarcodeScannerPreviewActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_BarcodeScannerPreviewActivatedEventArgs },
        { Py_tp_methods, _methods_BarcodeScannerPreviewActivatedEventArgs },
        { Py_tp_getset, _getset_BarcodeScannerPreviewActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_BarcodeScannerPreviewActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.BarcodeScannerPreviewActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_BarcodeScannerPreviewActivatedEventArgs
    };

    // ----- CachedFileUpdaterActivatedEventArgs class --------------------
    constexpr const char* const _type_name_CachedFileUpdaterActivatedEventArgs = "CachedFileUpdaterActivatedEventArgs";

    static PyObject* _new_CachedFileUpdaterActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_CachedFileUpdaterActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_CachedFileUpdaterActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* CachedFileUpdaterActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CachedFileUpdaterActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CachedFileUpdaterActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CachedFileUpdaterActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CachedFileUpdaterActivatedEventArgs_get_CachedFileUpdaterUI(py::wrapper::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CachedFileUpdaterUI());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_CachedFileUpdaterActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_CachedFileUpdaterActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_CachedFileUpdaterActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_CachedFileUpdaterActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)CachedFileUpdaterActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)CachedFileUpdaterActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)CachedFileUpdaterActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)CachedFileUpdaterActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("cached_file_updater_u_i"), (getter)CachedFileUpdaterActivatedEventArgs_get_CachedFileUpdaterUI, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_CachedFileUpdaterActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_CachedFileUpdaterActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_CachedFileUpdaterActivatedEventArgs },
        { Py_tp_methods, _methods_CachedFileUpdaterActivatedEventArgs },
        { Py_tp_getset, _getset_CachedFileUpdaterActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_CachedFileUpdaterActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.CachedFileUpdaterActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_CachedFileUpdaterActivatedEventArgs
    };

    // ----- CommandLineActivatedEventArgs class --------------------
    constexpr const char* const _type_name_CommandLineActivatedEventArgs = "CommandLineActivatedEventArgs";

    static PyObject* _new_CommandLineActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_CommandLineActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_CommandLineActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* CommandLineActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CommandLineActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CommandLineActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CommandLineActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CommandLineActivatedEventArgs_get_Operation(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Operation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_CommandLineActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_CommandLineActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_CommandLineActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_CommandLineActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)CommandLineActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)CommandLineActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)CommandLineActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)CommandLineActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("operation"), (getter)CommandLineActivatedEventArgs_get_Operation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_CommandLineActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_CommandLineActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_CommandLineActivatedEventArgs },
        { Py_tp_methods, _methods_CommandLineActivatedEventArgs },
        { Py_tp_getset, _getset_CommandLineActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_CommandLineActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.CommandLineActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_CommandLineActivatedEventArgs
    };

    // ----- CommandLineActivationOperation class --------------------
    constexpr const char* const _type_name_CommandLineActivationOperation = "CommandLineActivationOperation";

    static PyObject* _new_CommandLineActivationOperation(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_CommandLineActivationOperation);
        return nullptr;
    }

    static void _dealloc_CommandLineActivationOperation(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivationOperation* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* CommandLineActivationOperation_GetDeferral(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivationOperation* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* CommandLineActivationOperation_get_ExitCode(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivationOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ExitCode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int CommandLineActivationOperation_put_ExitCode(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivationOperation* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<int32_t>(arg);

            self->obj.ExitCode(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* CommandLineActivationOperation_get_Arguments(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivationOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Arguments());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* CommandLineActivationOperation_get_CurrentDirectoryPath(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivationOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentDirectoryPath());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_CommandLineActivationOperation(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::CommandLineActivationOperation>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_CommandLineActivationOperation[] = {
        { "get_deferral", (PyCFunction)CommandLineActivationOperation_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_CommandLineActivationOperation, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_CommandLineActivationOperation[] = {
        { const_cast<char*>("exit_code"), (getter)CommandLineActivationOperation_get_ExitCode, (setter)CommandLineActivationOperation_put_ExitCode, nullptr, nullptr },
        { const_cast<char*>("arguments"), (getter)CommandLineActivationOperation_get_Arguments, nullptr, nullptr, nullptr },
        { const_cast<char*>("current_directory_path"), (getter)CommandLineActivationOperation_get_CurrentDirectoryPath, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_CommandLineActivationOperation[] = 
    {
        { Py_tp_new, _new_CommandLineActivationOperation },
        { Py_tp_dealloc, _dealloc_CommandLineActivationOperation },
        { Py_tp_methods, _methods_CommandLineActivationOperation },
        { Py_tp_getset, _getset_CommandLineActivationOperation },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_CommandLineActivationOperation =
    {
        "_winrt_Windows_ApplicationModel_Activation.CommandLineActivationOperation",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::CommandLineActivationOperation),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_CommandLineActivationOperation
    };

    // ----- ContactPanelActivatedEventArgs class --------------------
    constexpr const char* const _type_name_ContactPanelActivatedEventArgs = "ContactPanelActivatedEventArgs";

    static PyObject* _new_ContactPanelActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ContactPanelActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ContactPanelActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ContactPanelActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPanelActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPanelActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPanelActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPanelActivatedEventArgs_get_Contact(py::wrapper::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Contact());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ContactPanelActivatedEventArgs_get_ContactPanel(py::wrapper::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContactPanel());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ContactPanelActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ContactPanelActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ContactPanelActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ContactPanelActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)ContactPanelActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ContactPanelActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ContactPanelActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)ContactPanelActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("contact"), (getter)ContactPanelActivatedEventArgs_get_Contact, nullptr, nullptr, nullptr },
        { const_cast<char*>("contact_panel"), (getter)ContactPanelActivatedEventArgs_get_ContactPanel, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ContactPanelActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ContactPanelActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ContactPanelActivatedEventArgs },
        { Py_tp_methods, _methods_ContactPanelActivatedEventArgs },
        { Py_tp_getset, _getset_ContactPanelActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ContactPanelActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ContactPanelActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ContactPanelActivatedEventArgs
    };

    // ----- DeviceActivatedEventArgs class --------------------
    constexpr const char* const _type_name_DeviceActivatedEventArgs = "DeviceActivatedEventArgs";

    static PyObject* _new_DeviceActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_DeviceActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_DeviceActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* DeviceActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DeviceActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DeviceActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DeviceActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DeviceActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DeviceActivatedEventArgs_get_DeviceInformationId(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeviceInformationId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DeviceActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DeviceActivatedEventArgs_get_ViewSwitcher(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ViewSwitcher());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_DeviceActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_DeviceActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_DeviceActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_DeviceActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)DeviceActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)DeviceActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)DeviceActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)DeviceActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("currently_shown_application_view_id"), (getter)DeviceActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("device_information_id"), (getter)DeviceActivatedEventArgs_get_DeviceInformationId, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)DeviceActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("view_switcher"), (getter)DeviceActivatedEventArgs_get_ViewSwitcher, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_DeviceActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_DeviceActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_DeviceActivatedEventArgs },
        { Py_tp_methods, _methods_DeviceActivatedEventArgs },
        { Py_tp_getset, _getset_DeviceActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_DeviceActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.DeviceActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_DeviceActivatedEventArgs
    };

    // ----- DevicePairingActivatedEventArgs class --------------------
    constexpr const char* const _type_name_DevicePairingActivatedEventArgs = "DevicePairingActivatedEventArgs";

    static PyObject* _new_DevicePairingActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_DevicePairingActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_DevicePairingActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* DevicePairingActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DevicePairingActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DevicePairingActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DevicePairingActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DevicePairingActivatedEventArgs_get_DeviceInformation(py::wrapper::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeviceInformation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_DevicePairingActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_DevicePairingActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_DevicePairingActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_DevicePairingActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)DevicePairingActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)DevicePairingActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)DevicePairingActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)DevicePairingActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("device_information"), (getter)DevicePairingActivatedEventArgs_get_DeviceInformation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_DevicePairingActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_DevicePairingActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_DevicePairingActivatedEventArgs },
        { Py_tp_methods, _methods_DevicePairingActivatedEventArgs },
        { Py_tp_getset, _getset_DevicePairingActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_DevicePairingActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.DevicePairingActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_DevicePairingActivatedEventArgs
    };

    // ----- DialReceiverActivatedEventArgs class --------------------
    constexpr const char* const _type_name_DialReceiverActivatedEventArgs = "DialReceiverActivatedEventArgs";

    static PyObject* _new_DialReceiverActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_DialReceiverActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_DialReceiverActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* DialReceiverActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DialReceiverActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DialReceiverActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DialReceiverActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DialReceiverActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DialReceiverActivatedEventArgs_get_AppName(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AppName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DialReceiverActivatedEventArgs_get_Arguments(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Arguments());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DialReceiverActivatedEventArgs_get_TileId(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TileId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* DialReceiverActivatedEventArgs_get_ViewSwitcher(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ViewSwitcher());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_DialReceiverActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_DialReceiverActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_DialReceiverActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_DialReceiverActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)DialReceiverActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)DialReceiverActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)DialReceiverActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)DialReceiverActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("currently_shown_application_view_id"), (getter)DialReceiverActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("app_name"), (getter)DialReceiverActivatedEventArgs_get_AppName, nullptr, nullptr, nullptr },
        { const_cast<char*>("arguments"), (getter)DialReceiverActivatedEventArgs_get_Arguments, nullptr, nullptr, nullptr },
        { const_cast<char*>("tile_id"), (getter)DialReceiverActivatedEventArgs_get_TileId, nullptr, nullptr, nullptr },
        { const_cast<char*>("view_switcher"), (getter)DialReceiverActivatedEventArgs_get_ViewSwitcher, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_DialReceiverActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_DialReceiverActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_DialReceiverActivatedEventArgs },
        { Py_tp_methods, _methods_DialReceiverActivatedEventArgs },
        { Py_tp_getset, _getset_DialReceiverActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_DialReceiverActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.DialReceiverActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_DialReceiverActivatedEventArgs
    };

    // ----- FileActivatedEventArgs class --------------------
    constexpr const char* const _type_name_FileActivatedEventArgs = "FileActivatedEventArgs";

    static PyObject* _new_FileActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_FileActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_FileActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* FileActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_Files(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Files());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_NeighboringFilesQuery(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.NeighboringFilesQuery());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileActivatedEventArgs_get_ViewSwitcher(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ViewSwitcher());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_FileActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::FileActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_FileActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_FileActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_FileActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)FileActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)FileActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)FileActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)FileActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("currently_shown_application_view_id"), (getter)FileActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("files"), (getter)FileActivatedEventArgs_get_Files, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)FileActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("caller_package_family_name"), (getter)FileActivatedEventArgs_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { const_cast<char*>("neighboring_files_query"), (getter)FileActivatedEventArgs_get_NeighboringFilesQuery, nullptr, nullptr, nullptr },
        { const_cast<char*>("view_switcher"), (getter)FileActivatedEventArgs_get_ViewSwitcher, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_FileActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_FileActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_FileActivatedEventArgs },
        { Py_tp_methods, _methods_FileActivatedEventArgs },
        { Py_tp_getset, _getset_FileActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_FileActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.FileActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::FileActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_FileActivatedEventArgs
    };

    // ----- FileOpenPickerActivatedEventArgs class --------------------
    constexpr const char* const _type_name_FileOpenPickerActivatedEventArgs = "FileOpenPickerActivatedEventArgs";

    static PyObject* _new_FileOpenPickerActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_FileOpenPickerActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_FileOpenPickerActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* FileOpenPickerActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerActivatedEventArgs_get_FileOpenPickerUI(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.FileOpenPickerUI());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerActivatedEventArgs_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_FileOpenPickerActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_FileOpenPickerActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_FileOpenPickerActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_FileOpenPickerActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)FileOpenPickerActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)FileOpenPickerActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)FileOpenPickerActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)FileOpenPickerActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("file_open_picker_u_i"), (getter)FileOpenPickerActivatedEventArgs_get_FileOpenPickerUI, nullptr, nullptr, nullptr },
        { const_cast<char*>("caller_package_family_name"), (getter)FileOpenPickerActivatedEventArgs_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_FileOpenPickerActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_FileOpenPickerActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_FileOpenPickerActivatedEventArgs },
        { Py_tp_methods, _methods_FileOpenPickerActivatedEventArgs },
        { Py_tp_getset, _getset_FileOpenPickerActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_FileOpenPickerActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.FileOpenPickerActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_FileOpenPickerActivatedEventArgs
    };

    // ----- FileOpenPickerContinuationEventArgs class --------------------
    constexpr const char* const _type_name_FileOpenPickerContinuationEventArgs = "FileOpenPickerContinuationEventArgs";

    static PyObject* _new_FileOpenPickerContinuationEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_FileOpenPickerContinuationEventArgs);
        return nullptr;
    }

    static void _dealloc_FileOpenPickerContinuationEventArgs(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* FileOpenPickerContinuationEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerContinuationEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerContinuationEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerContinuationEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerContinuationEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileOpenPickerContinuationEventArgs_get_Files(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Files());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_FileOpenPickerContinuationEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_FileOpenPickerContinuationEventArgs[] = {
        { "_from", (PyCFunction)_from_FileOpenPickerContinuationEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_FileOpenPickerContinuationEventArgs[] = {
        { const_cast<char*>("kind"), (getter)FileOpenPickerContinuationEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)FileOpenPickerContinuationEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)FileOpenPickerContinuationEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)FileOpenPickerContinuationEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("continuation_data"), (getter)FileOpenPickerContinuationEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("files"), (getter)FileOpenPickerContinuationEventArgs_get_Files, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_FileOpenPickerContinuationEventArgs[] = 
    {
        { Py_tp_new, _new_FileOpenPickerContinuationEventArgs },
        { Py_tp_dealloc, _dealloc_FileOpenPickerContinuationEventArgs },
        { Py_tp_methods, _methods_FileOpenPickerContinuationEventArgs },
        { Py_tp_getset, _getset_FileOpenPickerContinuationEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_FileOpenPickerContinuationEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.FileOpenPickerContinuationEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_FileOpenPickerContinuationEventArgs
    };

    // ----- FileSavePickerActivatedEventArgs class --------------------
    constexpr const char* const _type_name_FileSavePickerActivatedEventArgs = "FileSavePickerActivatedEventArgs";

    static PyObject* _new_FileSavePickerActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_FileSavePickerActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_FileSavePickerActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* FileSavePickerActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerActivatedEventArgs_get_FileSavePickerUI(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.FileSavePickerUI());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerActivatedEventArgs_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerActivatedEventArgs_get_EnterpriseId(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EnterpriseId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_FileSavePickerActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_FileSavePickerActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_FileSavePickerActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_FileSavePickerActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)FileSavePickerActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)FileSavePickerActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)FileSavePickerActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)FileSavePickerActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("file_save_picker_u_i"), (getter)FileSavePickerActivatedEventArgs_get_FileSavePickerUI, nullptr, nullptr, nullptr },
        { const_cast<char*>("caller_package_family_name"), (getter)FileSavePickerActivatedEventArgs_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { const_cast<char*>("enterprise_id"), (getter)FileSavePickerActivatedEventArgs_get_EnterpriseId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_FileSavePickerActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_FileSavePickerActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_FileSavePickerActivatedEventArgs },
        { Py_tp_methods, _methods_FileSavePickerActivatedEventArgs },
        { Py_tp_getset, _getset_FileSavePickerActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_FileSavePickerActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.FileSavePickerActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_FileSavePickerActivatedEventArgs
    };

    // ----- FileSavePickerContinuationEventArgs class --------------------
    constexpr const char* const _type_name_FileSavePickerContinuationEventArgs = "FileSavePickerContinuationEventArgs";

    static PyObject* _new_FileSavePickerContinuationEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_FileSavePickerContinuationEventArgs);
        return nullptr;
    }

    static void _dealloc_FileSavePickerContinuationEventArgs(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* FileSavePickerContinuationEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerContinuationEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerContinuationEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerContinuationEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerContinuationEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FileSavePickerContinuationEventArgs_get_File(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.File());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_FileSavePickerContinuationEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_FileSavePickerContinuationEventArgs[] = {
        { "_from", (PyCFunction)_from_FileSavePickerContinuationEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_FileSavePickerContinuationEventArgs[] = {
        { const_cast<char*>("kind"), (getter)FileSavePickerContinuationEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)FileSavePickerContinuationEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)FileSavePickerContinuationEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)FileSavePickerContinuationEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("continuation_data"), (getter)FileSavePickerContinuationEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("file"), (getter)FileSavePickerContinuationEventArgs_get_File, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_FileSavePickerContinuationEventArgs[] = 
    {
        { Py_tp_new, _new_FileSavePickerContinuationEventArgs },
        { Py_tp_dealloc, _dealloc_FileSavePickerContinuationEventArgs },
        { Py_tp_methods, _methods_FileSavePickerContinuationEventArgs },
        { Py_tp_getset, _getset_FileSavePickerContinuationEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_FileSavePickerContinuationEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.FileSavePickerContinuationEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_FileSavePickerContinuationEventArgs
    };

    // ----- FolderPickerContinuationEventArgs class --------------------
    constexpr const char* const _type_name_FolderPickerContinuationEventArgs = "FolderPickerContinuationEventArgs";

    static PyObject* _new_FolderPickerContinuationEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_FolderPickerContinuationEventArgs);
        return nullptr;
    }

    static void _dealloc_FolderPickerContinuationEventArgs(py::wrapper::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* FolderPickerContinuationEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FolderPickerContinuationEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FolderPickerContinuationEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FolderPickerContinuationEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FolderPickerContinuationEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* FolderPickerContinuationEventArgs_get_Folder(py::wrapper::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Folder());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_FolderPickerContinuationEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_FolderPickerContinuationEventArgs[] = {
        { "_from", (PyCFunction)_from_FolderPickerContinuationEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_FolderPickerContinuationEventArgs[] = {
        { const_cast<char*>("kind"), (getter)FolderPickerContinuationEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)FolderPickerContinuationEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)FolderPickerContinuationEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)FolderPickerContinuationEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("continuation_data"), (getter)FolderPickerContinuationEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("folder"), (getter)FolderPickerContinuationEventArgs_get_Folder, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_FolderPickerContinuationEventArgs[] = 
    {
        { Py_tp_new, _new_FolderPickerContinuationEventArgs },
        { Py_tp_dealloc, _dealloc_FolderPickerContinuationEventArgs },
        { Py_tp_methods, _methods_FolderPickerContinuationEventArgs },
        { Py_tp_getset, _getset_FolderPickerContinuationEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_FolderPickerContinuationEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.FolderPickerContinuationEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_FolderPickerContinuationEventArgs
    };

    // ----- LaunchActivatedEventArgs class --------------------
    constexpr const char* const _type_name_LaunchActivatedEventArgs = "LaunchActivatedEventArgs";

    static PyObject* _new_LaunchActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_LaunchActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_LaunchActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* LaunchActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_Arguments(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Arguments());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_TileId(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TileId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_TileActivatedInfo(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TileActivatedInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_PrelaunchActivated(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PrelaunchActivated());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LaunchActivatedEventArgs_get_ViewSwitcher(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ViewSwitcher());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_LaunchActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_LaunchActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_LaunchActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_LaunchActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)LaunchActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)LaunchActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)LaunchActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)LaunchActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("currently_shown_application_view_id"), (getter)LaunchActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("arguments"), (getter)LaunchActivatedEventArgs_get_Arguments, nullptr, nullptr, nullptr },
        { const_cast<char*>("tile_id"), (getter)LaunchActivatedEventArgs_get_TileId, nullptr, nullptr, nullptr },
        { const_cast<char*>("tile_activated_info"), (getter)LaunchActivatedEventArgs_get_TileActivatedInfo, nullptr, nullptr, nullptr },
        { const_cast<char*>("prelaunch_activated"), (getter)LaunchActivatedEventArgs_get_PrelaunchActivated, nullptr, nullptr, nullptr },
        { const_cast<char*>("view_switcher"), (getter)LaunchActivatedEventArgs_get_ViewSwitcher, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_LaunchActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_LaunchActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_LaunchActivatedEventArgs },
        { Py_tp_methods, _methods_LaunchActivatedEventArgs },
        { Py_tp_getset, _getset_LaunchActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_LaunchActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.LaunchActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_LaunchActivatedEventArgs
    };

    // ----- LockScreenActivatedEventArgs class --------------------
    constexpr const char* const _type_name_LockScreenActivatedEventArgs = "LockScreenActivatedEventArgs";

    static PyObject* _new_LockScreenActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_LockScreenActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_LockScreenActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* LockScreenActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LockScreenActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LockScreenActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LockScreenActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LockScreenActivatedEventArgs_get_Info(py::wrapper::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Info());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_LockScreenActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_LockScreenActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_LockScreenActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_LockScreenActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)LockScreenActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)LockScreenActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)LockScreenActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)LockScreenActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("info"), (getter)LockScreenActivatedEventArgs_get_Info, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_LockScreenActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_LockScreenActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_LockScreenActivatedEventArgs },
        { Py_tp_methods, _methods_LockScreenActivatedEventArgs },
        { Py_tp_getset, _getset_LockScreenActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_LockScreenActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.LockScreenActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_LockScreenActivatedEventArgs
    };

    // ----- LockScreenComponentActivatedEventArgs class --------------------
    constexpr const char* const _type_name_LockScreenComponentActivatedEventArgs = "LockScreenComponentActivatedEventArgs";

    static PyObject* _new_LockScreenComponentActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_LockScreenComponentActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_LockScreenComponentActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::LockScreenComponentActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* LockScreenComponentActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::LockScreenComponentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LockScreenComponentActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::LockScreenComponentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* LockScreenComponentActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::LockScreenComponentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_LockScreenComponentActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::LockScreenComponentActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_LockScreenComponentActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_LockScreenComponentActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_LockScreenComponentActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)LockScreenComponentActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)LockScreenComponentActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)LockScreenComponentActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_LockScreenComponentActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_LockScreenComponentActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_LockScreenComponentActivatedEventArgs },
        { Py_tp_methods, _methods_LockScreenComponentActivatedEventArgs },
        { Py_tp_getset, _getset_LockScreenComponentActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_LockScreenComponentActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.LockScreenComponentActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::LockScreenComponentActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_LockScreenComponentActivatedEventArgs
    };

    // ----- PhoneCallActivatedEventArgs class --------------------
    constexpr const char* const _type_name_PhoneCallActivatedEventArgs = "PhoneCallActivatedEventArgs";

    static PyObject* _new_PhoneCallActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PhoneCallActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_PhoneCallActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PhoneCallActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhoneCallActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhoneCallActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhoneCallActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PhoneCallActivatedEventArgs_get_LineId(py::wrapper::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.LineId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PhoneCallActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PhoneCallActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_PhoneCallActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PhoneCallActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)PhoneCallActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)PhoneCallActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)PhoneCallActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)PhoneCallActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("line_id"), (getter)PhoneCallActivatedEventArgs_get_LineId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PhoneCallActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_PhoneCallActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_PhoneCallActivatedEventArgs },
        { Py_tp_methods, _methods_PhoneCallActivatedEventArgs },
        { Py_tp_getset, _getset_PhoneCallActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PhoneCallActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.PhoneCallActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PhoneCallActivatedEventArgs
    };

    // ----- PickerReturnedActivatedEventArgs class --------------------
    constexpr const char* const _type_name_PickerReturnedActivatedEventArgs = "PickerReturnedActivatedEventArgs";

    static PyObject* _new_PickerReturnedActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PickerReturnedActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_PickerReturnedActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PickerReturnedActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PickerReturnedActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PickerReturnedActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PickerReturnedActivatedEventArgs_get_PickerOperationId(py::wrapper::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PickerOperationId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PickerReturnedActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PickerReturnedActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_PickerReturnedActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PickerReturnedActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)PickerReturnedActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)PickerReturnedActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)PickerReturnedActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("picker_operation_id"), (getter)PickerReturnedActivatedEventArgs_get_PickerOperationId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PickerReturnedActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_PickerReturnedActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_PickerReturnedActivatedEventArgs },
        { Py_tp_methods, _methods_PickerReturnedActivatedEventArgs },
        { Py_tp_getset, _getset_PickerReturnedActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PickerReturnedActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.PickerReturnedActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PickerReturnedActivatedEventArgs
    };

    // ----- ProtocolActivatedEventArgs class --------------------
    constexpr const char* const _type_name_ProtocolActivatedEventArgs = "ProtocolActivatedEventArgs";

    static PyObject* _new_ProtocolActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ProtocolActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ProtocolActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ProtocolActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolActivatedEventArgs_get_Uri(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Uri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolActivatedEventArgs_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolActivatedEventArgs_get_Data(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Data());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolActivatedEventArgs_get_ViewSwitcher(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ViewSwitcher());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ProtocolActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ProtocolActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ProtocolActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ProtocolActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)ProtocolActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ProtocolActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ProtocolActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)ProtocolActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("currently_shown_application_view_id"), (getter)ProtocolActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("uri"), (getter)ProtocolActivatedEventArgs_get_Uri, nullptr, nullptr, nullptr },
        { const_cast<char*>("caller_package_family_name"), (getter)ProtocolActivatedEventArgs_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { const_cast<char*>("data"), (getter)ProtocolActivatedEventArgs_get_Data, nullptr, nullptr, nullptr },
        { const_cast<char*>("view_switcher"), (getter)ProtocolActivatedEventArgs_get_ViewSwitcher, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ProtocolActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ProtocolActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ProtocolActivatedEventArgs },
        { Py_tp_methods, _methods_ProtocolActivatedEventArgs },
        { Py_tp_getset, _getset_ProtocolActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ProtocolActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ProtocolActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ProtocolActivatedEventArgs
    };

    // ----- ProtocolForResultsActivatedEventArgs class --------------------
    constexpr const char* const _type_name_ProtocolForResultsActivatedEventArgs = "ProtocolForResultsActivatedEventArgs";

    static PyObject* _new_ProtocolForResultsActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ProtocolForResultsActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ProtocolForResultsActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_Uri(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Uri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_Data(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Data());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_ProtocolForResultsOperation(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ProtocolForResultsOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ProtocolForResultsActivatedEventArgs_get_ViewSwitcher(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ViewSwitcher());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ProtocolForResultsActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ProtocolForResultsActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ProtocolForResultsActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ProtocolForResultsActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)ProtocolForResultsActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ProtocolForResultsActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ProtocolForResultsActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)ProtocolForResultsActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("currently_shown_application_view_id"), (getter)ProtocolForResultsActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("uri"), (getter)ProtocolForResultsActivatedEventArgs_get_Uri, nullptr, nullptr, nullptr },
        { const_cast<char*>("caller_package_family_name"), (getter)ProtocolForResultsActivatedEventArgs_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { const_cast<char*>("data"), (getter)ProtocolForResultsActivatedEventArgs_get_Data, nullptr, nullptr, nullptr },
        { const_cast<char*>("protocol_for_results_operation"), (getter)ProtocolForResultsActivatedEventArgs_get_ProtocolForResultsOperation, nullptr, nullptr, nullptr },
        { const_cast<char*>("view_switcher"), (getter)ProtocolForResultsActivatedEventArgs_get_ViewSwitcher, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ProtocolForResultsActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ProtocolForResultsActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ProtocolForResultsActivatedEventArgs },
        { Py_tp_methods, _methods_ProtocolForResultsActivatedEventArgs },
        { Py_tp_getset, _getset_ProtocolForResultsActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ProtocolForResultsActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ProtocolForResultsActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ProtocolForResultsActivatedEventArgs
    };

    // ----- RestrictedLaunchActivatedEventArgs class --------------------
    constexpr const char* const _type_name_RestrictedLaunchActivatedEventArgs = "RestrictedLaunchActivatedEventArgs";

    static PyObject* _new_RestrictedLaunchActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_RestrictedLaunchActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_RestrictedLaunchActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* RestrictedLaunchActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* RestrictedLaunchActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* RestrictedLaunchActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* RestrictedLaunchActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* RestrictedLaunchActivatedEventArgs_get_SharedContext(py::wrapper::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SharedContext());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_RestrictedLaunchActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_RestrictedLaunchActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_RestrictedLaunchActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_RestrictedLaunchActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)RestrictedLaunchActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)RestrictedLaunchActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)RestrictedLaunchActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)RestrictedLaunchActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("shared_context"), (getter)RestrictedLaunchActivatedEventArgs_get_SharedContext, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_RestrictedLaunchActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_RestrictedLaunchActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_RestrictedLaunchActivatedEventArgs },
        { Py_tp_methods, _methods_RestrictedLaunchActivatedEventArgs },
        { Py_tp_getset, _getset_RestrictedLaunchActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_RestrictedLaunchActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.RestrictedLaunchActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_RestrictedLaunchActivatedEventArgs
    };

    // ----- SearchActivatedEventArgs class --------------------
    constexpr const char* const _type_name_SearchActivatedEventArgs = "SearchActivatedEventArgs";

    static PyObject* _new_SearchActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SearchActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_SearchActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SearchActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SearchActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SearchActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SearchActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SearchActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SearchActivatedEventArgs_get_Language(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Language());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SearchActivatedEventArgs_get_QueryText(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.QueryText());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SearchActivatedEventArgs_get_LinguisticDetails(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.LinguisticDetails());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SearchActivatedEventArgs_get_ViewSwitcher(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ViewSwitcher());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SearchActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::SearchActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SearchActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_SearchActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SearchActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)SearchActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)SearchActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)SearchActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)SearchActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("currently_shown_application_view_id"), (getter)SearchActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("language"), (getter)SearchActivatedEventArgs_get_Language, nullptr, nullptr, nullptr },
        { const_cast<char*>("query_text"), (getter)SearchActivatedEventArgs_get_QueryText, nullptr, nullptr, nullptr },
        { const_cast<char*>("linguistic_details"), (getter)SearchActivatedEventArgs_get_LinguisticDetails, nullptr, nullptr, nullptr },
        { const_cast<char*>("view_switcher"), (getter)SearchActivatedEventArgs_get_ViewSwitcher, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SearchActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_SearchActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_SearchActivatedEventArgs },
        { Py_tp_methods, _methods_SearchActivatedEventArgs },
        { Py_tp_getset, _getset_SearchActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SearchActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.SearchActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::SearchActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SearchActivatedEventArgs
    };

    // ----- ShareTargetActivatedEventArgs class --------------------
    constexpr const char* const _type_name_ShareTargetActivatedEventArgs = "ShareTargetActivatedEventArgs";

    static PyObject* _new_ShareTargetActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ShareTargetActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ShareTargetActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ShareTargetActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ShareTargetActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ShareTargetActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ShareTargetActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ShareTargetActivatedEventArgs_get_ShareOperation(py::wrapper::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ShareOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ShareTargetActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ShareTargetActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ShareTargetActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ShareTargetActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)ShareTargetActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ShareTargetActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ShareTargetActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)ShareTargetActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("share_operation"), (getter)ShareTargetActivatedEventArgs_get_ShareOperation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ShareTargetActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ShareTargetActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ShareTargetActivatedEventArgs },
        { Py_tp_methods, _methods_ShareTargetActivatedEventArgs },
        { Py_tp_getset, _getset_ShareTargetActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ShareTargetActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ShareTargetActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ShareTargetActivatedEventArgs
    };

    // ----- SplashScreen class --------------------
    constexpr const char* const _type_name_SplashScreen = "SplashScreen";

    static PyObject* _new_SplashScreen(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SplashScreen);
        return nullptr;
    }

    static void _dealloc_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::SplashScreen* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SplashScreen_get_ImageLocation(py::wrapper::Windows::ApplicationModel::Activation::SplashScreen* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ImageLocation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SplashScreen_add_Dismissed(py::wrapper::Windows::ApplicationModel::Activation::SplashScreen* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::Activation::SplashScreen, winrt::Windows::Foundation::IInspectable>>(arg);

            return py::convert(self->obj.Dismissed(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SplashScreen_remove_Dismissed(py::wrapper::Windows::ApplicationModel::Activation::SplashScreen* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.Dismissed(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SplashScreen(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::SplashScreen>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SplashScreen[] = {
        { "add_dismissed", (PyCFunction)SplashScreen_add_Dismissed, METH_O, nullptr },
        { "remove_dismissed", (PyCFunction)SplashScreen_remove_Dismissed, METH_O, nullptr },
        { "_from", (PyCFunction)_from_SplashScreen, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SplashScreen[] = {
        { const_cast<char*>("image_location"), (getter)SplashScreen_get_ImageLocation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SplashScreen[] = 
    {
        { Py_tp_new, _new_SplashScreen },
        { Py_tp_dealloc, _dealloc_SplashScreen },
        { Py_tp_methods, _methods_SplashScreen },
        { Py_tp_getset, _getset_SplashScreen },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SplashScreen =
    {
        "_winrt_Windows_ApplicationModel_Activation.SplashScreen",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::SplashScreen),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SplashScreen
    };

    // ----- StartupTaskActivatedEventArgs class --------------------
    constexpr const char* const _type_name_StartupTaskActivatedEventArgs = "StartupTaskActivatedEventArgs";

    static PyObject* _new_StartupTaskActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_StartupTaskActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_StartupTaskActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* StartupTaskActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* StartupTaskActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* StartupTaskActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* StartupTaskActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* StartupTaskActivatedEventArgs_get_TaskId(py::wrapper::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_StartupTaskActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_StartupTaskActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_StartupTaskActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_StartupTaskActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)StartupTaskActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)StartupTaskActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)StartupTaskActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)StartupTaskActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("task_id"), (getter)StartupTaskActivatedEventArgs_get_TaskId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_StartupTaskActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_StartupTaskActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_StartupTaskActivatedEventArgs },
        { Py_tp_methods, _methods_StartupTaskActivatedEventArgs },
        { Py_tp_getset, _getset_StartupTaskActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_StartupTaskActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.StartupTaskActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_StartupTaskActivatedEventArgs
    };

    // ----- TileActivatedInfo class --------------------
    constexpr const char* const _type_name_TileActivatedInfo = "TileActivatedInfo";

    static PyObject* _new_TileActivatedInfo(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_TileActivatedInfo);
        return nullptr;
    }

    static void _dealloc_TileActivatedInfo(py::wrapper::Windows::ApplicationModel::Activation::TileActivatedInfo* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* TileActivatedInfo_get_RecentlyShownNotifications(py::wrapper::Windows::ApplicationModel::Activation::TileActivatedInfo* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RecentlyShownNotifications());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_TileActivatedInfo(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::TileActivatedInfo>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_TileActivatedInfo[] = {
        { "_from", (PyCFunction)_from_TileActivatedInfo, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_TileActivatedInfo[] = {
        { const_cast<char*>("recently_shown_notifications"), (getter)TileActivatedInfo_get_RecentlyShownNotifications, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_TileActivatedInfo[] = 
    {
        { Py_tp_new, _new_TileActivatedInfo },
        { Py_tp_dealloc, _dealloc_TileActivatedInfo },
        { Py_tp_methods, _methods_TileActivatedInfo },
        { Py_tp_getset, _getset_TileActivatedInfo },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_TileActivatedInfo =
    {
        "_winrt_Windows_ApplicationModel_Activation.TileActivatedInfo",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::TileActivatedInfo),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_TileActivatedInfo
    };

    // ----- ToastNotificationActivatedEventArgs class --------------------
    constexpr const char* const _type_name_ToastNotificationActivatedEventArgs = "ToastNotificationActivatedEventArgs";

    static PyObject* _new_ToastNotificationActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ToastNotificationActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ToastNotificationActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ToastNotificationActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ToastNotificationActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ToastNotificationActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ToastNotificationActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ToastNotificationActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ToastNotificationActivatedEventArgs_get_Argument(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Argument());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ToastNotificationActivatedEventArgs_get_UserInput(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.UserInput());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ToastNotificationActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ToastNotificationActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ToastNotificationActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ToastNotificationActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)ToastNotificationActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ToastNotificationActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ToastNotificationActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)ToastNotificationActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("currently_shown_application_view_id"), (getter)ToastNotificationActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("argument"), (getter)ToastNotificationActivatedEventArgs_get_Argument, nullptr, nullptr, nullptr },
        { const_cast<char*>("user_input"), (getter)ToastNotificationActivatedEventArgs_get_UserInput, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ToastNotificationActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ToastNotificationActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ToastNotificationActivatedEventArgs },
        { Py_tp_methods, _methods_ToastNotificationActivatedEventArgs },
        { Py_tp_getset, _getset_ToastNotificationActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ToastNotificationActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ToastNotificationActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ToastNotificationActivatedEventArgs
    };

    // ----- UserDataAccountProviderActivatedEventArgs class --------------------
    constexpr const char* const _type_name_UserDataAccountProviderActivatedEventArgs = "UserDataAccountProviderActivatedEventArgs";

    static PyObject* _new_UserDataAccountProviderActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataAccountProviderActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_UserDataAccountProviderActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataAccountProviderActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataAccountProviderActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataAccountProviderActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataAccountProviderActivatedEventArgs_get_Operation(py::wrapper::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Operation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataAccountProviderActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataAccountProviderActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_UserDataAccountProviderActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataAccountProviderActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)UserDataAccountProviderActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)UserDataAccountProviderActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)UserDataAccountProviderActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("operation"), (getter)UserDataAccountProviderActivatedEventArgs_get_Operation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataAccountProviderActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_UserDataAccountProviderActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_UserDataAccountProviderActivatedEventArgs },
        { Py_tp_methods, _methods_UserDataAccountProviderActivatedEventArgs },
        { Py_tp_getset, _getset_UserDataAccountProviderActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataAccountProviderActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.UserDataAccountProviderActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataAccountProviderActivatedEventArgs
    };

    // ----- VoiceCommandActivatedEventArgs class --------------------
    constexpr const char* const _type_name_VoiceCommandActivatedEventArgs = "VoiceCommandActivatedEventArgs";

    static PyObject* _new_VoiceCommandActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_VoiceCommandActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_VoiceCommandActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* VoiceCommandActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* VoiceCommandActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* VoiceCommandActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* VoiceCommandActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* VoiceCommandActivatedEventArgs_get_Result(py::wrapper::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Result());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_VoiceCommandActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_VoiceCommandActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_VoiceCommandActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_VoiceCommandActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)VoiceCommandActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)VoiceCommandActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)VoiceCommandActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)VoiceCommandActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("result"), (getter)VoiceCommandActivatedEventArgs_get_Result, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_VoiceCommandActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_VoiceCommandActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_VoiceCommandActivatedEventArgs },
        { Py_tp_methods, _methods_VoiceCommandActivatedEventArgs },
        { Py_tp_getset, _getset_VoiceCommandActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_VoiceCommandActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.VoiceCommandActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_VoiceCommandActivatedEventArgs
    };

    // ----- WebAccountProviderActivatedEventArgs class --------------------
    constexpr const char* const _type_name_WebAccountProviderActivatedEventArgs = "WebAccountProviderActivatedEventArgs";

    static PyObject* _new_WebAccountProviderActivatedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WebAccountProviderActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_WebAccountProviderActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WebAccountProviderActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WebAccountProviderActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WebAccountProviderActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WebAccountProviderActivatedEventArgs_get_User(py::wrapper::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WebAccountProviderActivatedEventArgs_get_Operation(py::wrapper::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Operation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WebAccountProviderActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WebAccountProviderActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_WebAccountProviderActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WebAccountProviderActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)WebAccountProviderActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)WebAccountProviderActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)WebAccountProviderActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)WebAccountProviderActivatedEventArgs_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("operation"), (getter)WebAccountProviderActivatedEventArgs_get_Operation, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WebAccountProviderActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_WebAccountProviderActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_WebAccountProviderActivatedEventArgs },
        { Py_tp_methods, _methods_WebAccountProviderActivatedEventArgs },
        { Py_tp_getset, _getset_WebAccountProviderActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WebAccountProviderActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.WebAccountProviderActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WebAccountProviderActivatedEventArgs
    };

    // ----- WebAuthenticationBrokerContinuationEventArgs class --------------------
    constexpr const char* const _type_name_WebAuthenticationBrokerContinuationEventArgs = "WebAuthenticationBrokerContinuationEventArgs";

    static PyObject* _new_WebAuthenticationBrokerContinuationEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WebAuthenticationBrokerContinuationEventArgs);
        return nullptr;
    }

    static void _dealloc_WebAuthenticationBrokerContinuationEventArgs(py::wrapper::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WebAuthenticationBrokerContinuationEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WebAuthenticationBrokerContinuationEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WebAuthenticationBrokerContinuationEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WebAuthenticationBrokerContinuationEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WebAuthenticationBrokerContinuationEventArgs_get_WebAuthenticationResult(py::wrapper::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.WebAuthenticationResult());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WebAuthenticationBrokerContinuationEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WebAuthenticationBrokerContinuationEventArgs[] = {
        { "_from", (PyCFunction)_from_WebAuthenticationBrokerContinuationEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WebAuthenticationBrokerContinuationEventArgs[] = {
        { const_cast<char*>("kind"), (getter)WebAuthenticationBrokerContinuationEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)WebAuthenticationBrokerContinuationEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)WebAuthenticationBrokerContinuationEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { const_cast<char*>("continuation_data"), (getter)WebAuthenticationBrokerContinuationEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("web_authentication_result"), (getter)WebAuthenticationBrokerContinuationEventArgs_get_WebAuthenticationResult, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WebAuthenticationBrokerContinuationEventArgs[] = 
    {
        { Py_tp_new, _new_WebAuthenticationBrokerContinuationEventArgs },
        { Py_tp_dealloc, _dealloc_WebAuthenticationBrokerContinuationEventArgs },
        { Py_tp_methods, _methods_WebAuthenticationBrokerContinuationEventArgs },
        { Py_tp_getset, _getset_WebAuthenticationBrokerContinuationEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WebAuthenticationBrokerContinuationEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.WebAuthenticationBrokerContinuationEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WebAuthenticationBrokerContinuationEventArgs
    };

    // ----- IActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IActivatedEventArgs = "IActivatedEventArgs";

    static PyObject* _new_IActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IActivatedEventArgs[] = {
        { const_cast<char*>("kind"), (getter)IActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IActivatedEventArgs },
        { Py_tp_methods, _methods_IActivatedEventArgs },
        { Py_tp_getset, _getset_IActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IActivatedEventArgs
    };

    // ----- IActivatedEventArgsWithUser interface --------------------
    constexpr const char* const _type_name_IActivatedEventArgsWithUser = "IActivatedEventArgsWithUser";

    static PyObject* _new_IActivatedEventArgsWithUser(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IActivatedEventArgsWithUser);
        return nullptr;
    }

    static void _dealloc_IActivatedEventArgsWithUser(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IActivatedEventArgsWithUser_get_User(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IActivatedEventArgsWithUser_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IActivatedEventArgsWithUser_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IActivatedEventArgsWithUser_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IActivatedEventArgsWithUser(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IActivatedEventArgsWithUser[] = {
        { "_from", (PyCFunction)_from_IActivatedEventArgsWithUser, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IActivatedEventArgsWithUser[] = {
        { const_cast<char*>("user"), (getter)IActivatedEventArgsWithUser_get_User, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IActivatedEventArgsWithUser_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IActivatedEventArgsWithUser_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IActivatedEventArgsWithUser_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IActivatedEventArgsWithUser[] = 
    {
        { Py_tp_new, _new_IActivatedEventArgsWithUser },
        { Py_tp_dealloc, _dealloc_IActivatedEventArgsWithUser },
        { Py_tp_methods, _methods_IActivatedEventArgsWithUser },
        { Py_tp_getset, _getset_IActivatedEventArgsWithUser },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IActivatedEventArgsWithUser =
    {
        "_winrt_Windows_ApplicationModel_Activation.IActivatedEventArgsWithUser",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IActivatedEventArgsWithUser
    };

    // ----- IApplicationViewActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IApplicationViewActivatedEventArgs = "IApplicationViewActivatedEventArgs";

    static PyObject* _new_IApplicationViewActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IApplicationViewActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IApplicationViewActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IApplicationViewActivatedEventArgs_get_CurrentlyShownApplicationViewId(py::wrapper::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CurrentlyShownApplicationViewId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IApplicationViewActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IApplicationViewActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IApplicationViewActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IApplicationViewActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IApplicationViewActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IApplicationViewActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IApplicationViewActivatedEventArgs[] = {
        { const_cast<char*>("currently_shown_application_view_id"), (getter)IApplicationViewActivatedEventArgs_get_CurrentlyShownApplicationViewId, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IApplicationViewActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IApplicationViewActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IApplicationViewActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IApplicationViewActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IApplicationViewActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IApplicationViewActivatedEventArgs },
        { Py_tp_methods, _methods_IApplicationViewActivatedEventArgs },
        { Py_tp_getset, _getset_IApplicationViewActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IApplicationViewActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IApplicationViewActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IApplicationViewActivatedEventArgs
    };

    // ----- IAppointmentsProviderActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IAppointmentsProviderActivatedEventArgs = "IAppointmentsProviderActivatedEventArgs";

    static PyObject* _new_IAppointmentsProviderActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IAppointmentsProviderActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IAppointmentsProviderActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IAppointmentsProviderActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IAppointmentsProviderActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IAppointmentsProviderActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IAppointmentsProviderActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IAppointmentsProviderActivatedEventArgs[] = {
        { const_cast<char*>("verb"), (getter)IAppointmentsProviderActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IAppointmentsProviderActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IAppointmentsProviderActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IAppointmentsProviderActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IAppointmentsProviderActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IAppointmentsProviderActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IAppointmentsProviderActivatedEventArgs },
        { Py_tp_methods, _methods_IAppointmentsProviderActivatedEventArgs },
        { Py_tp_getset, _getset_IAppointmentsProviderActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IAppointmentsProviderActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IAppointmentsProviderActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IAppointmentsProviderActivatedEventArgs
    };

    // ----- IAppointmentsProviderAddAppointmentActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IAppointmentsProviderAddAppointmentActivatedEventArgs = "IAppointmentsProviderAddAppointmentActivatedEventArgs";

    static PyObject* _new_IAppointmentsProviderAddAppointmentActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IAppointmentsProviderAddAppointmentActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IAppointmentsProviderAddAppointmentActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IAppointmentsProviderAddAppointmentActivatedEventArgs_get_AddAppointmentOperation(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AddAppointmentOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderAddAppointmentActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderAddAppointmentActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderAddAppointmentActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderAddAppointmentActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IAppointmentsProviderAddAppointmentActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IAppointmentsProviderAddAppointmentActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IAppointmentsProviderAddAppointmentActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IAppointmentsProviderAddAppointmentActivatedEventArgs[] = {
        { const_cast<char*>("add_appointment_operation"), (getter)IAppointmentsProviderAddAppointmentActivatedEventArgs_get_AddAppointmentOperation, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)IAppointmentsProviderAddAppointmentActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IAppointmentsProviderAddAppointmentActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IAppointmentsProviderAddAppointmentActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IAppointmentsProviderAddAppointmentActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IAppointmentsProviderAddAppointmentActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IAppointmentsProviderAddAppointmentActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IAppointmentsProviderAddAppointmentActivatedEventArgs },
        { Py_tp_methods, _methods_IAppointmentsProviderAddAppointmentActivatedEventArgs },
        { Py_tp_getset, _getset_IAppointmentsProviderAddAppointmentActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IAppointmentsProviderAddAppointmentActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IAppointmentsProviderAddAppointmentActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IAppointmentsProviderAddAppointmentActivatedEventArgs
    };

    // ----- IAppointmentsProviderRemoveAppointmentActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IAppointmentsProviderRemoveAppointmentActivatedEventArgs = "IAppointmentsProviderRemoveAppointmentActivatedEventArgs";

    static PyObject* _new_IAppointmentsProviderRemoveAppointmentActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IAppointmentsProviderRemoveAppointmentActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IAppointmentsProviderRemoveAppointmentActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_RemoveAppointmentOperation(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RemoveAppointmentOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IAppointmentsProviderRemoveAppointmentActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IAppointmentsProviderRemoveAppointmentActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IAppointmentsProviderRemoveAppointmentActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IAppointmentsProviderRemoveAppointmentActivatedEventArgs[] = {
        { const_cast<char*>("remove_appointment_operation"), (getter)IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_RemoveAppointmentOperation, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IAppointmentsProviderRemoveAppointmentActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IAppointmentsProviderRemoveAppointmentActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IAppointmentsProviderRemoveAppointmentActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IAppointmentsProviderRemoveAppointmentActivatedEventArgs },
        { Py_tp_methods, _methods_IAppointmentsProviderRemoveAppointmentActivatedEventArgs },
        { Py_tp_getset, _getset_IAppointmentsProviderRemoveAppointmentActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IAppointmentsProviderRemoveAppointmentActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IAppointmentsProviderRemoveAppointmentActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IAppointmentsProviderRemoveAppointmentActivatedEventArgs
    };

    // ----- IAppointmentsProviderReplaceAppointmentActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IAppointmentsProviderReplaceAppointmentActivatedEventArgs = "IAppointmentsProviderReplaceAppointmentActivatedEventArgs";

    static PyObject* _new_IAppointmentsProviderReplaceAppointmentActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IAppointmentsProviderReplaceAppointmentActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IAppointmentsProviderReplaceAppointmentActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_ReplaceAppointmentOperation(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ReplaceAppointmentOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IAppointmentsProviderReplaceAppointmentActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IAppointmentsProviderReplaceAppointmentActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IAppointmentsProviderReplaceAppointmentActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IAppointmentsProviderReplaceAppointmentActivatedEventArgs[] = {
        { const_cast<char*>("replace_appointment_operation"), (getter)IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_ReplaceAppointmentOperation, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IAppointmentsProviderReplaceAppointmentActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IAppointmentsProviderReplaceAppointmentActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IAppointmentsProviderReplaceAppointmentActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IAppointmentsProviderReplaceAppointmentActivatedEventArgs },
        { Py_tp_methods, _methods_IAppointmentsProviderReplaceAppointmentActivatedEventArgs },
        { Py_tp_getset, _getset_IAppointmentsProviderReplaceAppointmentActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IAppointmentsProviderReplaceAppointmentActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IAppointmentsProviderReplaceAppointmentActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IAppointmentsProviderReplaceAppointmentActivatedEventArgs
    };

    // ----- IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs = "IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs";

    static PyObject* _new_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_InstanceStartDate(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.InstanceStartDate());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_LocalId(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.LocalId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_RoamingId(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RoamingId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs[] = {
        { const_cast<char*>("instance_start_date"), (getter)IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_InstanceStartDate, nullptr, nullptr, nullptr },
        { const_cast<char*>("local_id"), (getter)IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_LocalId, nullptr, nullptr, nullptr },
        { const_cast<char*>("roaming_id"), (getter)IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_RoamingId, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs },
        { Py_tp_methods, _methods_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs },
        { Py_tp_getset, _getset_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs
    };

    // ----- IAppointmentsProviderShowTimeFrameActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IAppointmentsProviderShowTimeFrameActivatedEventArgs = "IAppointmentsProviderShowTimeFrameActivatedEventArgs";

    static PyObject* _new_IAppointmentsProviderShowTimeFrameActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IAppointmentsProviderShowTimeFrameActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IAppointmentsProviderShowTimeFrameActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_Duration(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Duration());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_TimeToShow(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TimeToShow());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IAppointmentsProviderShowTimeFrameActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IAppointmentsProviderShowTimeFrameActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IAppointmentsProviderShowTimeFrameActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IAppointmentsProviderShowTimeFrameActivatedEventArgs[] = {
        { const_cast<char*>("duration"), (getter)IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_Duration, nullptr, nullptr, nullptr },
        { const_cast<char*>("time_to_show"), (getter)IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_TimeToShow, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IAppointmentsProviderShowTimeFrameActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IAppointmentsProviderShowTimeFrameActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IAppointmentsProviderShowTimeFrameActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IAppointmentsProviderShowTimeFrameActivatedEventArgs },
        { Py_tp_methods, _methods_IAppointmentsProviderShowTimeFrameActivatedEventArgs },
        { Py_tp_getset, _getset_IAppointmentsProviderShowTimeFrameActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IAppointmentsProviderShowTimeFrameActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IAppointmentsProviderShowTimeFrameActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IAppointmentsProviderShowTimeFrameActivatedEventArgs
    };

    // ----- IBackgroundActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IBackgroundActivatedEventArgs = "IBackgroundActivatedEventArgs";

    static PyObject* _new_IBackgroundActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IBackgroundActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IBackgroundActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IBackgroundActivatedEventArgs_get_TaskInstance(py::wrapper::Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskInstance());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IBackgroundActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IBackgroundActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IBackgroundActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IBackgroundActivatedEventArgs[] = {
        { const_cast<char*>("task_instance"), (getter)IBackgroundActivatedEventArgs_get_TaskInstance, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IBackgroundActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IBackgroundActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IBackgroundActivatedEventArgs },
        { Py_tp_methods, _methods_IBackgroundActivatedEventArgs },
        { Py_tp_getset, _getset_IBackgroundActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IBackgroundActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IBackgroundActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IBackgroundActivatedEventArgs
    };

    // ----- IBarcodeScannerPreviewActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IBarcodeScannerPreviewActivatedEventArgs = "IBarcodeScannerPreviewActivatedEventArgs";

    static PyObject* _new_IBarcodeScannerPreviewActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IBarcodeScannerPreviewActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IBarcodeScannerPreviewActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IBarcodeScannerPreviewActivatedEventArgs_get_ConnectionId(py::wrapper::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ConnectionId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IBarcodeScannerPreviewActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IBarcodeScannerPreviewActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IBarcodeScannerPreviewActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IBarcodeScannerPreviewActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IBarcodeScannerPreviewActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IBarcodeScannerPreviewActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IBarcodeScannerPreviewActivatedEventArgs[] = {
        { const_cast<char*>("connection_id"), (getter)IBarcodeScannerPreviewActivatedEventArgs_get_ConnectionId, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IBarcodeScannerPreviewActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IBarcodeScannerPreviewActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IBarcodeScannerPreviewActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IBarcodeScannerPreviewActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IBarcodeScannerPreviewActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IBarcodeScannerPreviewActivatedEventArgs },
        { Py_tp_methods, _methods_IBarcodeScannerPreviewActivatedEventArgs },
        { Py_tp_getset, _getset_IBarcodeScannerPreviewActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IBarcodeScannerPreviewActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IBarcodeScannerPreviewActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IBarcodeScannerPreviewActivatedEventArgs
    };

    // ----- ICachedFileUpdaterActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_ICachedFileUpdaterActivatedEventArgs = "ICachedFileUpdaterActivatedEventArgs";

    static PyObject* _new_ICachedFileUpdaterActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_ICachedFileUpdaterActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ICachedFileUpdaterActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ICachedFileUpdaterActivatedEventArgs_get_CachedFileUpdaterUI(py::wrapper::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CachedFileUpdaterUI());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ICachedFileUpdaterActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ICachedFileUpdaterActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ICachedFileUpdaterActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ICachedFileUpdaterActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ICachedFileUpdaterActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ICachedFileUpdaterActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ICachedFileUpdaterActivatedEventArgs[] = {
        { const_cast<char*>("cached_file_updater_u_i"), (getter)ICachedFileUpdaterActivatedEventArgs_get_CachedFileUpdaterUI, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)ICachedFileUpdaterActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ICachedFileUpdaterActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ICachedFileUpdaterActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ICachedFileUpdaterActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ICachedFileUpdaterActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ICachedFileUpdaterActivatedEventArgs },
        { Py_tp_methods, _methods_ICachedFileUpdaterActivatedEventArgs },
        { Py_tp_getset, _getset_ICachedFileUpdaterActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ICachedFileUpdaterActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ICachedFileUpdaterActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ICachedFileUpdaterActivatedEventArgs
    };

    // ----- ICommandLineActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_ICommandLineActivatedEventArgs = "ICommandLineActivatedEventArgs";

    static PyObject* _new_ICommandLineActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_ICommandLineActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ICommandLineActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ICommandLineActivatedEventArgs_get_Operation(py::wrapper::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Operation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ICommandLineActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ICommandLineActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ICommandLineActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ICommandLineActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ICommandLineActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ICommandLineActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ICommandLineActivatedEventArgs[] = {
        { const_cast<char*>("operation"), (getter)ICommandLineActivatedEventArgs_get_Operation, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)ICommandLineActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ICommandLineActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ICommandLineActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ICommandLineActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ICommandLineActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ICommandLineActivatedEventArgs },
        { Py_tp_methods, _methods_ICommandLineActivatedEventArgs },
        { Py_tp_getset, _getset_ICommandLineActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ICommandLineActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ICommandLineActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ICommandLineActivatedEventArgs
    };

    // ----- IContactPanelActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IContactPanelActivatedEventArgs = "IContactPanelActivatedEventArgs";

    static PyObject* _new_IContactPanelActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IContactPanelActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IContactPanelActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IContactPanelActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IContactPanelActivatedEventArgs_get_Contact(py::wrapper::Windows::ApplicationModel::Activation::IContactPanelActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Contact());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IContactPanelActivatedEventArgs_get_ContactPanel(py::wrapper::Windows::ApplicationModel::Activation::IContactPanelActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContactPanel());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IContactPanelActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IContactPanelActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IContactPanelActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IContactPanelActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IContactPanelActivatedEventArgs[] = {
        { const_cast<char*>("contact"), (getter)IContactPanelActivatedEventArgs_get_Contact, nullptr, nullptr, nullptr },
        { const_cast<char*>("contact_panel"), (getter)IContactPanelActivatedEventArgs_get_ContactPanel, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IContactPanelActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IContactPanelActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IContactPanelActivatedEventArgs },
        { Py_tp_methods, _methods_IContactPanelActivatedEventArgs },
        { Py_tp_getset, _getset_IContactPanelActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IContactPanelActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IContactPanelActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IContactPanelActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IContactPanelActivatedEventArgs
    };

    // ----- IContinuationActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IContinuationActivatedEventArgs = "IContinuationActivatedEventArgs";

    static PyObject* _new_IContinuationActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IContinuationActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IContinuationActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IContinuationActivatedEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IContinuationActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IContinuationActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IContinuationActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IContinuationActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IContinuationActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IContinuationActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IContinuationActivatedEventArgs[] = {
        { const_cast<char*>("continuation_data"), (getter)IContinuationActivatedEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IContinuationActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IContinuationActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IContinuationActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IContinuationActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IContinuationActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IContinuationActivatedEventArgs },
        { Py_tp_methods, _methods_IContinuationActivatedEventArgs },
        { Py_tp_getset, _getset_IContinuationActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IContinuationActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IContinuationActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IContinuationActivatedEventArgs
    };

    // ----- IDeviceActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IDeviceActivatedEventArgs = "IDeviceActivatedEventArgs";

    static PyObject* _new_IDeviceActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IDeviceActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IDeviceActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IDeviceActivatedEventArgs_get_DeviceInformationId(py::wrapper::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeviceInformationId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDeviceActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDeviceActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDeviceActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDeviceActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IDeviceActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IDeviceActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IDeviceActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IDeviceActivatedEventArgs[] = {
        { const_cast<char*>("device_information_id"), (getter)IDeviceActivatedEventArgs_get_DeviceInformationId, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)IDeviceActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IDeviceActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IDeviceActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IDeviceActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IDeviceActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IDeviceActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IDeviceActivatedEventArgs },
        { Py_tp_methods, _methods_IDeviceActivatedEventArgs },
        { Py_tp_getset, _getset_IDeviceActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IDeviceActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IDeviceActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IDeviceActivatedEventArgs
    };

    // ----- IDevicePairingActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IDevicePairingActivatedEventArgs = "IDevicePairingActivatedEventArgs";

    static PyObject* _new_IDevicePairingActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IDevicePairingActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IDevicePairingActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IDevicePairingActivatedEventArgs_get_DeviceInformation(py::wrapper::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeviceInformation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDevicePairingActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDevicePairingActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDevicePairingActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IDevicePairingActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IDevicePairingActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IDevicePairingActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IDevicePairingActivatedEventArgs[] = {
        { const_cast<char*>("device_information"), (getter)IDevicePairingActivatedEventArgs_get_DeviceInformation, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IDevicePairingActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IDevicePairingActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IDevicePairingActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IDevicePairingActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IDevicePairingActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IDevicePairingActivatedEventArgs },
        { Py_tp_methods, _methods_IDevicePairingActivatedEventArgs },
        { Py_tp_getset, _getset_IDevicePairingActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IDevicePairingActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IDevicePairingActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IDevicePairingActivatedEventArgs
    };

    // ----- IDialReceiverActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IDialReceiverActivatedEventArgs = "IDialReceiverActivatedEventArgs";

    static PyObject* _new_IDialReceiverActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IDialReceiverActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IDialReceiverActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IDialReceiverActivatedEventArgs_get_AppName(py::wrapper::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AppName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDialReceiverActivatedEventArgs_get_Arguments(py::wrapper::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Arguments());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDialReceiverActivatedEventArgs_get_TileId(py::wrapper::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TileId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDialReceiverActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDialReceiverActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IDialReceiverActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IDialReceiverActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IDialReceiverActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IDialReceiverActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IDialReceiverActivatedEventArgs[] = {
        { const_cast<char*>("app_name"), (getter)IDialReceiverActivatedEventArgs_get_AppName, nullptr, nullptr, nullptr },
        { const_cast<char*>("arguments"), (getter)IDialReceiverActivatedEventArgs_get_Arguments, nullptr, nullptr, nullptr },
        { const_cast<char*>("tile_id"), (getter)IDialReceiverActivatedEventArgs_get_TileId, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IDialReceiverActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IDialReceiverActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IDialReceiverActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IDialReceiverActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IDialReceiverActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IDialReceiverActivatedEventArgs },
        { Py_tp_methods, _methods_IDialReceiverActivatedEventArgs },
        { Py_tp_getset, _getset_IDialReceiverActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IDialReceiverActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IDialReceiverActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IDialReceiverActivatedEventArgs
    };

    // ----- IFileActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IFileActivatedEventArgs = "IFileActivatedEventArgs";

    static PyObject* _new_IFileActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IFileActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileActivatedEventArgs_get_Files(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Files());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgs_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IFileActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileActivatedEventArgs[] = {
        { const_cast<char*>("files"), (getter)IFileActivatedEventArgs_get_Files, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)IFileActivatedEventArgs_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IFileActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IFileActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IFileActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IFileActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IFileActivatedEventArgs },
        { Py_tp_methods, _methods_IFileActivatedEventArgs },
        { Py_tp_getset, _getset_IFileActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileActivatedEventArgs
    };

    // ----- IFileActivatedEventArgsWithCallerPackageFamilyName interface --------------------
    constexpr const char* const _type_name_IFileActivatedEventArgsWithCallerPackageFamilyName = "IFileActivatedEventArgsWithCallerPackageFamilyName";

    static PyObject* _new_IFileActivatedEventArgsWithCallerPackageFamilyName(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileActivatedEventArgsWithCallerPackageFamilyName);
        return nullptr;
    }

    static void _dealloc_IFileActivatedEventArgsWithCallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileActivatedEventArgsWithCallerPackageFamilyName_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgsWithCallerPackageFamilyName_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgsWithCallerPackageFamilyName_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgsWithCallerPackageFamilyName_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileActivatedEventArgsWithCallerPackageFamilyName(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileActivatedEventArgsWithCallerPackageFamilyName[] = {
        { "_from", (PyCFunction)_from_IFileActivatedEventArgsWithCallerPackageFamilyName, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileActivatedEventArgsWithCallerPackageFamilyName[] = {
        { const_cast<char*>("caller_package_family_name"), (getter)IFileActivatedEventArgsWithCallerPackageFamilyName_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IFileActivatedEventArgsWithCallerPackageFamilyName_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IFileActivatedEventArgsWithCallerPackageFamilyName_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IFileActivatedEventArgsWithCallerPackageFamilyName_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileActivatedEventArgsWithCallerPackageFamilyName[] = 
    {
        { Py_tp_new, _new_IFileActivatedEventArgsWithCallerPackageFamilyName },
        { Py_tp_dealloc, _dealloc_IFileActivatedEventArgsWithCallerPackageFamilyName },
        { Py_tp_methods, _methods_IFileActivatedEventArgsWithCallerPackageFamilyName },
        { Py_tp_getset, _getset_IFileActivatedEventArgsWithCallerPackageFamilyName },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileActivatedEventArgsWithCallerPackageFamilyName =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileActivatedEventArgsWithCallerPackageFamilyName",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileActivatedEventArgsWithCallerPackageFamilyName
    };

    // ----- IFileActivatedEventArgsWithNeighboringFiles interface --------------------
    constexpr const char* const _type_name_IFileActivatedEventArgsWithNeighboringFiles = "IFileActivatedEventArgsWithNeighboringFiles";

    static PyObject* _new_IFileActivatedEventArgsWithNeighboringFiles(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileActivatedEventArgsWithNeighboringFiles);
        return nullptr;
    }

    static void _dealloc_IFileActivatedEventArgsWithNeighboringFiles(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileActivatedEventArgsWithNeighboringFiles_get_NeighboringFilesQuery(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.NeighboringFilesQuery());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgsWithNeighboringFiles_get_Files(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Files());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgsWithNeighboringFiles_get_Verb(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Verb());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgsWithNeighboringFiles_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgsWithNeighboringFiles_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileActivatedEventArgsWithNeighboringFiles_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileActivatedEventArgsWithNeighboringFiles(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileActivatedEventArgsWithNeighboringFiles[] = {
        { "_from", (PyCFunction)_from_IFileActivatedEventArgsWithNeighboringFiles, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileActivatedEventArgsWithNeighboringFiles[] = {
        { const_cast<char*>("neighboring_files_query"), (getter)IFileActivatedEventArgsWithNeighboringFiles_get_NeighboringFilesQuery, nullptr, nullptr, nullptr },
        { const_cast<char*>("files"), (getter)IFileActivatedEventArgsWithNeighboringFiles_get_Files, nullptr, nullptr, nullptr },
        { const_cast<char*>("verb"), (getter)IFileActivatedEventArgsWithNeighboringFiles_get_Verb, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IFileActivatedEventArgsWithNeighboringFiles_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IFileActivatedEventArgsWithNeighboringFiles_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IFileActivatedEventArgsWithNeighboringFiles_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileActivatedEventArgsWithNeighboringFiles[] = 
    {
        { Py_tp_new, _new_IFileActivatedEventArgsWithNeighboringFiles },
        { Py_tp_dealloc, _dealloc_IFileActivatedEventArgsWithNeighboringFiles },
        { Py_tp_methods, _methods_IFileActivatedEventArgsWithNeighboringFiles },
        { Py_tp_getset, _getset_IFileActivatedEventArgsWithNeighboringFiles },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileActivatedEventArgsWithNeighboringFiles =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileActivatedEventArgsWithNeighboringFiles",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileActivatedEventArgsWithNeighboringFiles
    };

    // ----- IFileOpenPickerActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IFileOpenPickerActivatedEventArgs = "IFileOpenPickerActivatedEventArgs";

    static PyObject* _new_IFileOpenPickerActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileOpenPickerActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IFileOpenPickerActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileOpenPickerActivatedEventArgs_get_FileOpenPickerUI(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.FileOpenPickerUI());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileOpenPickerActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileOpenPickerActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileOpenPickerActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileOpenPickerActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileOpenPickerActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IFileOpenPickerActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileOpenPickerActivatedEventArgs[] = {
        { const_cast<char*>("file_open_picker_u_i"), (getter)IFileOpenPickerActivatedEventArgs_get_FileOpenPickerUI, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IFileOpenPickerActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IFileOpenPickerActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IFileOpenPickerActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileOpenPickerActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IFileOpenPickerActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IFileOpenPickerActivatedEventArgs },
        { Py_tp_methods, _methods_IFileOpenPickerActivatedEventArgs },
        { Py_tp_getset, _getset_IFileOpenPickerActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileOpenPickerActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileOpenPickerActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileOpenPickerActivatedEventArgs
    };

    // ----- IFileOpenPickerActivatedEventArgs2 interface --------------------
    constexpr const char* const _type_name_IFileOpenPickerActivatedEventArgs2 = "IFileOpenPickerActivatedEventArgs2";

    static PyObject* _new_IFileOpenPickerActivatedEventArgs2(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileOpenPickerActivatedEventArgs2);
        return nullptr;
    }

    static void _dealloc_IFileOpenPickerActivatedEventArgs2(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs2* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileOpenPickerActivatedEventArgs2_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileOpenPickerActivatedEventArgs2(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs2>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileOpenPickerActivatedEventArgs2[] = {
        { "_from", (PyCFunction)_from_IFileOpenPickerActivatedEventArgs2, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileOpenPickerActivatedEventArgs2[] = {
        { const_cast<char*>("caller_package_family_name"), (getter)IFileOpenPickerActivatedEventArgs2_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileOpenPickerActivatedEventArgs2[] = 
    {
        { Py_tp_new, _new_IFileOpenPickerActivatedEventArgs2 },
        { Py_tp_dealloc, _dealloc_IFileOpenPickerActivatedEventArgs2 },
        { Py_tp_methods, _methods_IFileOpenPickerActivatedEventArgs2 },
        { Py_tp_getset, _getset_IFileOpenPickerActivatedEventArgs2 },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileOpenPickerActivatedEventArgs2 =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileOpenPickerActivatedEventArgs2",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs2),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileOpenPickerActivatedEventArgs2
    };

    // ----- IFileOpenPickerContinuationEventArgs interface --------------------
    constexpr const char* const _type_name_IFileOpenPickerContinuationEventArgs = "IFileOpenPickerContinuationEventArgs";

    static PyObject* _new_IFileOpenPickerContinuationEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileOpenPickerContinuationEventArgs);
        return nullptr;
    }

    static void _dealloc_IFileOpenPickerContinuationEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileOpenPickerContinuationEventArgs_get_Files(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Files());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileOpenPickerContinuationEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileOpenPickerContinuationEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileOpenPickerContinuationEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileOpenPickerContinuationEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileOpenPickerContinuationEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileOpenPickerContinuationEventArgs[] = {
        { "_from", (PyCFunction)_from_IFileOpenPickerContinuationEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileOpenPickerContinuationEventArgs[] = {
        { const_cast<char*>("files"), (getter)IFileOpenPickerContinuationEventArgs_get_Files, nullptr, nullptr, nullptr },
        { const_cast<char*>("continuation_data"), (getter)IFileOpenPickerContinuationEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IFileOpenPickerContinuationEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IFileOpenPickerContinuationEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IFileOpenPickerContinuationEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileOpenPickerContinuationEventArgs[] = 
    {
        { Py_tp_new, _new_IFileOpenPickerContinuationEventArgs },
        { Py_tp_dealloc, _dealloc_IFileOpenPickerContinuationEventArgs },
        { Py_tp_methods, _methods_IFileOpenPickerContinuationEventArgs },
        { Py_tp_getset, _getset_IFileOpenPickerContinuationEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileOpenPickerContinuationEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileOpenPickerContinuationEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileOpenPickerContinuationEventArgs
    };

    // ----- IFileSavePickerActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IFileSavePickerActivatedEventArgs = "IFileSavePickerActivatedEventArgs";

    static PyObject* _new_IFileSavePickerActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileSavePickerActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IFileSavePickerActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileSavePickerActivatedEventArgs_get_FileSavePickerUI(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.FileSavePickerUI());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileSavePickerActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileSavePickerActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileSavePickerActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileSavePickerActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileSavePickerActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IFileSavePickerActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileSavePickerActivatedEventArgs[] = {
        { const_cast<char*>("file_save_picker_u_i"), (getter)IFileSavePickerActivatedEventArgs_get_FileSavePickerUI, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IFileSavePickerActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IFileSavePickerActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IFileSavePickerActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileSavePickerActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IFileSavePickerActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IFileSavePickerActivatedEventArgs },
        { Py_tp_methods, _methods_IFileSavePickerActivatedEventArgs },
        { Py_tp_getset, _getset_IFileSavePickerActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileSavePickerActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileSavePickerActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileSavePickerActivatedEventArgs
    };

    // ----- IFileSavePickerActivatedEventArgs2 interface --------------------
    constexpr const char* const _type_name_IFileSavePickerActivatedEventArgs2 = "IFileSavePickerActivatedEventArgs2";

    static PyObject* _new_IFileSavePickerActivatedEventArgs2(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileSavePickerActivatedEventArgs2);
        return nullptr;
    }

    static void _dealloc_IFileSavePickerActivatedEventArgs2(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs2* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileSavePickerActivatedEventArgs2_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileSavePickerActivatedEventArgs2_get_EnterpriseId(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EnterpriseId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileSavePickerActivatedEventArgs2(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs2>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileSavePickerActivatedEventArgs2[] = {
        { "_from", (PyCFunction)_from_IFileSavePickerActivatedEventArgs2, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileSavePickerActivatedEventArgs2[] = {
        { const_cast<char*>("caller_package_family_name"), (getter)IFileSavePickerActivatedEventArgs2_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { const_cast<char*>("enterprise_id"), (getter)IFileSavePickerActivatedEventArgs2_get_EnterpriseId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileSavePickerActivatedEventArgs2[] = 
    {
        { Py_tp_new, _new_IFileSavePickerActivatedEventArgs2 },
        { Py_tp_dealloc, _dealloc_IFileSavePickerActivatedEventArgs2 },
        { Py_tp_methods, _methods_IFileSavePickerActivatedEventArgs2 },
        { Py_tp_getset, _getset_IFileSavePickerActivatedEventArgs2 },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileSavePickerActivatedEventArgs2 =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileSavePickerActivatedEventArgs2",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs2),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileSavePickerActivatedEventArgs2
    };

    // ----- IFileSavePickerContinuationEventArgs interface --------------------
    constexpr const char* const _type_name_IFileSavePickerContinuationEventArgs = "IFileSavePickerContinuationEventArgs";

    static PyObject* _new_IFileSavePickerContinuationEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFileSavePickerContinuationEventArgs);
        return nullptr;
    }

    static void _dealloc_IFileSavePickerContinuationEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFileSavePickerContinuationEventArgs_get_File(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.File());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileSavePickerContinuationEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileSavePickerContinuationEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileSavePickerContinuationEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFileSavePickerContinuationEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFileSavePickerContinuationEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFileSavePickerContinuationEventArgs[] = {
        { "_from", (PyCFunction)_from_IFileSavePickerContinuationEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFileSavePickerContinuationEventArgs[] = {
        { const_cast<char*>("file"), (getter)IFileSavePickerContinuationEventArgs_get_File, nullptr, nullptr, nullptr },
        { const_cast<char*>("continuation_data"), (getter)IFileSavePickerContinuationEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IFileSavePickerContinuationEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IFileSavePickerContinuationEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IFileSavePickerContinuationEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFileSavePickerContinuationEventArgs[] = 
    {
        { Py_tp_new, _new_IFileSavePickerContinuationEventArgs },
        { Py_tp_dealloc, _dealloc_IFileSavePickerContinuationEventArgs },
        { Py_tp_methods, _methods_IFileSavePickerContinuationEventArgs },
        { Py_tp_getset, _getset_IFileSavePickerContinuationEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFileSavePickerContinuationEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFileSavePickerContinuationEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFileSavePickerContinuationEventArgs
    };

    // ----- IFolderPickerContinuationEventArgs interface --------------------
    constexpr const char* const _type_name_IFolderPickerContinuationEventArgs = "IFolderPickerContinuationEventArgs";

    static PyObject* _new_IFolderPickerContinuationEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IFolderPickerContinuationEventArgs);
        return nullptr;
    }

    static void _dealloc_IFolderPickerContinuationEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IFolderPickerContinuationEventArgs_get_Folder(py::wrapper::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Folder());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFolderPickerContinuationEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFolderPickerContinuationEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFolderPickerContinuationEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IFolderPickerContinuationEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IFolderPickerContinuationEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IFolderPickerContinuationEventArgs[] = {
        { "_from", (PyCFunction)_from_IFolderPickerContinuationEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IFolderPickerContinuationEventArgs[] = {
        { const_cast<char*>("folder"), (getter)IFolderPickerContinuationEventArgs_get_Folder, nullptr, nullptr, nullptr },
        { const_cast<char*>("continuation_data"), (getter)IFolderPickerContinuationEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IFolderPickerContinuationEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IFolderPickerContinuationEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IFolderPickerContinuationEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IFolderPickerContinuationEventArgs[] = 
    {
        { Py_tp_new, _new_IFolderPickerContinuationEventArgs },
        { Py_tp_dealloc, _dealloc_IFolderPickerContinuationEventArgs },
        { Py_tp_methods, _methods_IFolderPickerContinuationEventArgs },
        { Py_tp_getset, _getset_IFolderPickerContinuationEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IFolderPickerContinuationEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IFolderPickerContinuationEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IFolderPickerContinuationEventArgs
    };

    // ----- ILaunchActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_ILaunchActivatedEventArgs = "ILaunchActivatedEventArgs";

    static PyObject* _new_ILaunchActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_ILaunchActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ILaunchActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ILaunchActivatedEventArgs_get_Arguments(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Arguments());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs_get_TileId(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TileId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ILaunchActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ILaunchActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ILaunchActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ILaunchActivatedEventArgs[] = {
        { const_cast<char*>("arguments"), (getter)ILaunchActivatedEventArgs_get_Arguments, nullptr, nullptr, nullptr },
        { const_cast<char*>("tile_id"), (getter)ILaunchActivatedEventArgs_get_TileId, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)ILaunchActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ILaunchActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ILaunchActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ILaunchActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ILaunchActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ILaunchActivatedEventArgs },
        { Py_tp_methods, _methods_ILaunchActivatedEventArgs },
        { Py_tp_getset, _getset_ILaunchActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ILaunchActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ILaunchActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ILaunchActivatedEventArgs
    };

    // ----- ILaunchActivatedEventArgs2 interface --------------------
    constexpr const char* const _type_name_ILaunchActivatedEventArgs2 = "ILaunchActivatedEventArgs2";

    static PyObject* _new_ILaunchActivatedEventArgs2(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_ILaunchActivatedEventArgs2);
        return nullptr;
    }

    static void _dealloc_ILaunchActivatedEventArgs2(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ILaunchActivatedEventArgs2_get_TileActivatedInfo(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TileActivatedInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs2_get_Arguments(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Arguments());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs2_get_TileId(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TileId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs2_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs2_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILaunchActivatedEventArgs2_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ILaunchActivatedEventArgs2(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ILaunchActivatedEventArgs2[] = {
        { "_from", (PyCFunction)_from_ILaunchActivatedEventArgs2, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ILaunchActivatedEventArgs2[] = {
        { const_cast<char*>("tile_activated_info"), (getter)ILaunchActivatedEventArgs2_get_TileActivatedInfo, nullptr, nullptr, nullptr },
        { const_cast<char*>("arguments"), (getter)ILaunchActivatedEventArgs2_get_Arguments, nullptr, nullptr, nullptr },
        { const_cast<char*>("tile_id"), (getter)ILaunchActivatedEventArgs2_get_TileId, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)ILaunchActivatedEventArgs2_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ILaunchActivatedEventArgs2_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ILaunchActivatedEventArgs2_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ILaunchActivatedEventArgs2[] = 
    {
        { Py_tp_new, _new_ILaunchActivatedEventArgs2 },
        { Py_tp_dealloc, _dealloc_ILaunchActivatedEventArgs2 },
        { Py_tp_methods, _methods_ILaunchActivatedEventArgs2 },
        { Py_tp_getset, _getset_ILaunchActivatedEventArgs2 },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ILaunchActivatedEventArgs2 =
    {
        "_winrt_Windows_ApplicationModel_Activation.ILaunchActivatedEventArgs2",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ILaunchActivatedEventArgs2
    };

    // ----- ILockScreenActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_ILockScreenActivatedEventArgs = "ILockScreenActivatedEventArgs";

    static PyObject* _new_ILockScreenActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_ILockScreenActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ILockScreenActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ILockScreenActivatedEventArgs_get_Info(py::wrapper::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Info());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILockScreenActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILockScreenActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ILockScreenActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ILockScreenActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ILockScreenActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ILockScreenActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ILockScreenActivatedEventArgs[] = {
        { const_cast<char*>("info"), (getter)ILockScreenActivatedEventArgs_get_Info, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)ILockScreenActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ILockScreenActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ILockScreenActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ILockScreenActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ILockScreenActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ILockScreenActivatedEventArgs },
        { Py_tp_methods, _methods_ILockScreenActivatedEventArgs },
        { Py_tp_getset, _getset_ILockScreenActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ILockScreenActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ILockScreenActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ILockScreenActivatedEventArgs
    };

    // ----- IPhoneCallActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IPhoneCallActivatedEventArgs = "IPhoneCallActivatedEventArgs";

    static PyObject* _new_IPhoneCallActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IPhoneCallActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IPhoneCallActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IPhoneCallActivatedEventArgs_get_LineId(py::wrapper::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.LineId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPhoneCallActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPhoneCallActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPhoneCallActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IPhoneCallActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IPhoneCallActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IPhoneCallActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IPhoneCallActivatedEventArgs[] = {
        { const_cast<char*>("line_id"), (getter)IPhoneCallActivatedEventArgs_get_LineId, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IPhoneCallActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IPhoneCallActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IPhoneCallActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IPhoneCallActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IPhoneCallActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IPhoneCallActivatedEventArgs },
        { Py_tp_methods, _methods_IPhoneCallActivatedEventArgs },
        { Py_tp_getset, _getset_IPhoneCallActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IPhoneCallActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IPhoneCallActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IPhoneCallActivatedEventArgs
    };

    // ----- IPickerReturnedActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IPickerReturnedActivatedEventArgs = "IPickerReturnedActivatedEventArgs";

    static PyObject* _new_IPickerReturnedActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IPickerReturnedActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IPickerReturnedActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IPickerReturnedActivatedEventArgs_get_PickerOperationId(py::wrapper::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PickerOperationId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPickerReturnedActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPickerReturnedActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPickerReturnedActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IPickerReturnedActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IPickerReturnedActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IPickerReturnedActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IPickerReturnedActivatedEventArgs[] = {
        { const_cast<char*>("picker_operation_id"), (getter)IPickerReturnedActivatedEventArgs_get_PickerOperationId, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IPickerReturnedActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IPickerReturnedActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IPickerReturnedActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IPickerReturnedActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IPickerReturnedActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IPickerReturnedActivatedEventArgs },
        { Py_tp_methods, _methods_IPickerReturnedActivatedEventArgs },
        { Py_tp_getset, _getset_IPickerReturnedActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IPickerReturnedActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IPickerReturnedActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IPickerReturnedActivatedEventArgs
    };

    // ----- IPrelaunchActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IPrelaunchActivatedEventArgs = "IPrelaunchActivatedEventArgs";

    static PyObject* _new_IPrelaunchActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IPrelaunchActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IPrelaunchActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IPrelaunchActivatedEventArgs_get_PrelaunchActivated(py::wrapper::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PrelaunchActivated());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPrelaunchActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPrelaunchActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IPrelaunchActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IPrelaunchActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IPrelaunchActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IPrelaunchActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IPrelaunchActivatedEventArgs[] = {
        { const_cast<char*>("prelaunch_activated"), (getter)IPrelaunchActivatedEventArgs_get_PrelaunchActivated, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IPrelaunchActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IPrelaunchActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IPrelaunchActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IPrelaunchActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IPrelaunchActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IPrelaunchActivatedEventArgs },
        { Py_tp_methods, _methods_IPrelaunchActivatedEventArgs },
        { Py_tp_getset, _getset_IPrelaunchActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IPrelaunchActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IPrelaunchActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IPrelaunchActivatedEventArgs
    };

    // ----- IProtocolActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IProtocolActivatedEventArgs = "IProtocolActivatedEventArgs";

    static PyObject* _new_IProtocolActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IProtocolActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IProtocolActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IProtocolActivatedEventArgs_get_Uri(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Uri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IProtocolActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IProtocolActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IProtocolActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IProtocolActivatedEventArgs[] = {
        { const_cast<char*>("uri"), (getter)IProtocolActivatedEventArgs_get_Uri, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IProtocolActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IProtocolActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IProtocolActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IProtocolActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IProtocolActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IProtocolActivatedEventArgs },
        { Py_tp_methods, _methods_IProtocolActivatedEventArgs },
        { Py_tp_getset, _getset_IProtocolActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IProtocolActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IProtocolActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IProtocolActivatedEventArgs
    };

    // ----- IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData interface --------------------
    constexpr const char* const _type_name_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData = "IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData";

    static PyObject* _new_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData);
        return nullptr;
    }

    static void _dealloc_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_CallerPackageFamilyName(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CallerPackageFamilyName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_Data(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Data());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData[] = {
        { "_from", (PyCFunction)_from_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData[] = {
        { const_cast<char*>("caller_package_family_name"), (getter)IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_CallerPackageFamilyName, nullptr, nullptr, nullptr },
        { const_cast<char*>("data"), (getter)IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_Data, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData[] = 
    {
        { Py_tp_new, _new_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData },
        { Py_tp_dealloc, _dealloc_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData },
        { Py_tp_methods, _methods_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData },
        { Py_tp_getset, _getset_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData =
    {
        "_winrt_Windows_ApplicationModel_Activation.IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData
    };

    // ----- IProtocolForResultsActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IProtocolForResultsActivatedEventArgs = "IProtocolForResultsActivatedEventArgs";

    static PyObject* _new_IProtocolForResultsActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IProtocolForResultsActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IProtocolForResultsActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IProtocolForResultsActivatedEventArgs_get_ProtocolForResultsOperation(py::wrapper::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ProtocolForResultsOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolForResultsActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolForResultsActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IProtocolForResultsActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IProtocolForResultsActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IProtocolForResultsActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IProtocolForResultsActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IProtocolForResultsActivatedEventArgs[] = {
        { const_cast<char*>("protocol_for_results_operation"), (getter)IProtocolForResultsActivatedEventArgs_get_ProtocolForResultsOperation, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IProtocolForResultsActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IProtocolForResultsActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IProtocolForResultsActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IProtocolForResultsActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IProtocolForResultsActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IProtocolForResultsActivatedEventArgs },
        { Py_tp_methods, _methods_IProtocolForResultsActivatedEventArgs },
        { Py_tp_getset, _getset_IProtocolForResultsActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IProtocolForResultsActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IProtocolForResultsActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IProtocolForResultsActivatedEventArgs
    };

    // ----- IRestrictedLaunchActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IRestrictedLaunchActivatedEventArgs = "IRestrictedLaunchActivatedEventArgs";

    static PyObject* _new_IRestrictedLaunchActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IRestrictedLaunchActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IRestrictedLaunchActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IRestrictedLaunchActivatedEventArgs_get_SharedContext(py::wrapper::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SharedContext());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IRestrictedLaunchActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IRestrictedLaunchActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IRestrictedLaunchActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IRestrictedLaunchActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IRestrictedLaunchActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IRestrictedLaunchActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IRestrictedLaunchActivatedEventArgs[] = {
        { const_cast<char*>("shared_context"), (getter)IRestrictedLaunchActivatedEventArgs_get_SharedContext, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IRestrictedLaunchActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IRestrictedLaunchActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IRestrictedLaunchActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IRestrictedLaunchActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IRestrictedLaunchActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IRestrictedLaunchActivatedEventArgs },
        { Py_tp_methods, _methods_IRestrictedLaunchActivatedEventArgs },
        { Py_tp_getset, _getset_IRestrictedLaunchActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IRestrictedLaunchActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IRestrictedLaunchActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IRestrictedLaunchActivatedEventArgs
    };

    // ----- ISearchActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_ISearchActivatedEventArgs = "ISearchActivatedEventArgs";

    static PyObject* _new_ISearchActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_ISearchActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_ISearchActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ISearchActivatedEventArgs_get_Language(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Language());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ISearchActivatedEventArgs_get_QueryText(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.QueryText());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ISearchActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ISearchActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* ISearchActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ISearchActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ISearchActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_ISearchActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ISearchActivatedEventArgs[] = {
        { const_cast<char*>("language"), (getter)ISearchActivatedEventArgs_get_Language, nullptr, nullptr, nullptr },
        { const_cast<char*>("query_text"), (getter)ISearchActivatedEventArgs_get_QueryText, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)ISearchActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)ISearchActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)ISearchActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ISearchActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_ISearchActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_ISearchActivatedEventArgs },
        { Py_tp_methods, _methods_ISearchActivatedEventArgs },
        { Py_tp_getset, _getset_ISearchActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ISearchActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.ISearchActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ISearchActivatedEventArgs
    };

    // ----- ISearchActivatedEventArgsWithLinguisticDetails interface --------------------
    constexpr const char* const _type_name_ISearchActivatedEventArgsWithLinguisticDetails = "ISearchActivatedEventArgsWithLinguisticDetails";

    static PyObject* _new_ISearchActivatedEventArgsWithLinguisticDetails(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_ISearchActivatedEventArgsWithLinguisticDetails);
        return nullptr;
    }

    static void _dealloc_ISearchActivatedEventArgsWithLinguisticDetails(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgsWithLinguisticDetails* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ISearchActivatedEventArgsWithLinguisticDetails_get_LinguisticDetails(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgsWithLinguisticDetails* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.LinguisticDetails());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_ISearchActivatedEventArgsWithLinguisticDetails(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::ISearchActivatedEventArgsWithLinguisticDetails>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ISearchActivatedEventArgsWithLinguisticDetails[] = {
        { "_from", (PyCFunction)_from_ISearchActivatedEventArgsWithLinguisticDetails, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ISearchActivatedEventArgsWithLinguisticDetails[] = {
        { const_cast<char*>("linguistic_details"), (getter)ISearchActivatedEventArgsWithLinguisticDetails_get_LinguisticDetails, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_ISearchActivatedEventArgsWithLinguisticDetails[] = 
    {
        { Py_tp_new, _new_ISearchActivatedEventArgsWithLinguisticDetails },
        { Py_tp_dealloc, _dealloc_ISearchActivatedEventArgsWithLinguisticDetails },
        { Py_tp_methods, _methods_ISearchActivatedEventArgsWithLinguisticDetails },
        { Py_tp_getset, _getset_ISearchActivatedEventArgsWithLinguisticDetails },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ISearchActivatedEventArgsWithLinguisticDetails =
    {
        "_winrt_Windows_ApplicationModel_Activation.ISearchActivatedEventArgsWithLinguisticDetails",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::ISearchActivatedEventArgsWithLinguisticDetails),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ISearchActivatedEventArgsWithLinguisticDetails
    };

    // ----- IShareTargetActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IShareTargetActivatedEventArgs = "IShareTargetActivatedEventArgs";

    static PyObject* _new_IShareTargetActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IShareTargetActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IShareTargetActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IShareTargetActivatedEventArgs_get_ShareOperation(py::wrapper::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ShareOperation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IShareTargetActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IShareTargetActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IShareTargetActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IShareTargetActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IShareTargetActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IShareTargetActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IShareTargetActivatedEventArgs[] = {
        { const_cast<char*>("share_operation"), (getter)IShareTargetActivatedEventArgs_get_ShareOperation, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IShareTargetActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IShareTargetActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IShareTargetActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IShareTargetActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IShareTargetActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IShareTargetActivatedEventArgs },
        { Py_tp_methods, _methods_IShareTargetActivatedEventArgs },
        { Py_tp_getset, _getset_IShareTargetActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IShareTargetActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IShareTargetActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IShareTargetActivatedEventArgs
    };

    // ----- IStartupTaskActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IStartupTaskActivatedEventArgs = "IStartupTaskActivatedEventArgs";

    static PyObject* _new_IStartupTaskActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IStartupTaskActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IStartupTaskActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IStartupTaskActivatedEventArgs_get_TaskId(py::wrapper::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IStartupTaskActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IStartupTaskActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IStartupTaskActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IStartupTaskActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IStartupTaskActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IStartupTaskActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IStartupTaskActivatedEventArgs[] = {
        { const_cast<char*>("task_id"), (getter)IStartupTaskActivatedEventArgs_get_TaskId, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IStartupTaskActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IStartupTaskActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IStartupTaskActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IStartupTaskActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IStartupTaskActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IStartupTaskActivatedEventArgs },
        { Py_tp_methods, _methods_IStartupTaskActivatedEventArgs },
        { Py_tp_getset, _getset_IStartupTaskActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IStartupTaskActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IStartupTaskActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IStartupTaskActivatedEventArgs
    };

    // ----- IToastNotificationActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IToastNotificationActivatedEventArgs = "IToastNotificationActivatedEventArgs";

    static PyObject* _new_IToastNotificationActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IToastNotificationActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IToastNotificationActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IToastNotificationActivatedEventArgs_get_Argument(py::wrapper::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Argument());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IToastNotificationActivatedEventArgs_get_UserInput(py::wrapper::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.UserInput());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IToastNotificationActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IToastNotificationActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IToastNotificationActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IToastNotificationActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IToastNotificationActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IToastNotificationActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IToastNotificationActivatedEventArgs[] = {
        { const_cast<char*>("argument"), (getter)IToastNotificationActivatedEventArgs_get_Argument, nullptr, nullptr, nullptr },
        { const_cast<char*>("user_input"), (getter)IToastNotificationActivatedEventArgs_get_UserInput, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IToastNotificationActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IToastNotificationActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IToastNotificationActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IToastNotificationActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IToastNotificationActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IToastNotificationActivatedEventArgs },
        { Py_tp_methods, _methods_IToastNotificationActivatedEventArgs },
        { Py_tp_getset, _getset_IToastNotificationActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IToastNotificationActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IToastNotificationActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IToastNotificationActivatedEventArgs
    };

    // ----- IUserDataAccountProviderActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IUserDataAccountProviderActivatedEventArgs = "IUserDataAccountProviderActivatedEventArgs";

    static PyObject* _new_IUserDataAccountProviderActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IUserDataAccountProviderActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IUserDataAccountProviderActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IUserDataAccountProviderActivatedEventArgs_get_Operation(py::wrapper::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Operation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IUserDataAccountProviderActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IUserDataAccountProviderActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IUserDataAccountProviderActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IUserDataAccountProviderActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IUserDataAccountProviderActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IUserDataAccountProviderActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IUserDataAccountProviderActivatedEventArgs[] = {
        { const_cast<char*>("operation"), (getter)IUserDataAccountProviderActivatedEventArgs_get_Operation, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IUserDataAccountProviderActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IUserDataAccountProviderActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IUserDataAccountProviderActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IUserDataAccountProviderActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IUserDataAccountProviderActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IUserDataAccountProviderActivatedEventArgs },
        { Py_tp_methods, _methods_IUserDataAccountProviderActivatedEventArgs },
        { Py_tp_getset, _getset_IUserDataAccountProviderActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IUserDataAccountProviderActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IUserDataAccountProviderActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IUserDataAccountProviderActivatedEventArgs
    };

    // ----- IViewSwitcherProvider interface --------------------
    constexpr const char* const _type_name_IViewSwitcherProvider = "IViewSwitcherProvider";

    static PyObject* _new_IViewSwitcherProvider(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IViewSwitcherProvider);
        return nullptr;
    }

    static void _dealloc_IViewSwitcherProvider(py::wrapper::Windows::ApplicationModel::Activation::IViewSwitcherProvider* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IViewSwitcherProvider_get_ViewSwitcher(py::wrapper::Windows::ApplicationModel::Activation::IViewSwitcherProvider* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ViewSwitcher());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IViewSwitcherProvider_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IViewSwitcherProvider* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IViewSwitcherProvider_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IViewSwitcherProvider* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IViewSwitcherProvider_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IViewSwitcherProvider* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IViewSwitcherProvider(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IViewSwitcherProvider>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IViewSwitcherProvider[] = {
        { "_from", (PyCFunction)_from_IViewSwitcherProvider, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IViewSwitcherProvider[] = {
        { const_cast<char*>("view_switcher"), (getter)IViewSwitcherProvider_get_ViewSwitcher, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IViewSwitcherProvider_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IViewSwitcherProvider_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IViewSwitcherProvider_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IViewSwitcherProvider[] = 
    {
        { Py_tp_new, _new_IViewSwitcherProvider },
        { Py_tp_dealloc, _dealloc_IViewSwitcherProvider },
        { Py_tp_methods, _methods_IViewSwitcherProvider },
        { Py_tp_getset, _getset_IViewSwitcherProvider },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IViewSwitcherProvider =
    {
        "_winrt_Windows_ApplicationModel_Activation.IViewSwitcherProvider",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IViewSwitcherProvider),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IViewSwitcherProvider
    };

    // ----- IVoiceCommandActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IVoiceCommandActivatedEventArgs = "IVoiceCommandActivatedEventArgs";

    static PyObject* _new_IVoiceCommandActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IVoiceCommandActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IVoiceCommandActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IVoiceCommandActivatedEventArgs_get_Result(py::wrapper::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Result());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IVoiceCommandActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IVoiceCommandActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IVoiceCommandActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IVoiceCommandActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IVoiceCommandActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IVoiceCommandActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IVoiceCommandActivatedEventArgs[] = {
        { const_cast<char*>("result"), (getter)IVoiceCommandActivatedEventArgs_get_Result, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IVoiceCommandActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IVoiceCommandActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IVoiceCommandActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IVoiceCommandActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IVoiceCommandActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IVoiceCommandActivatedEventArgs },
        { Py_tp_methods, _methods_IVoiceCommandActivatedEventArgs },
        { Py_tp_getset, _getset_IVoiceCommandActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IVoiceCommandActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IVoiceCommandActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IVoiceCommandActivatedEventArgs
    };

    // ----- IWebAccountProviderActivatedEventArgs interface --------------------
    constexpr const char* const _type_name_IWebAccountProviderActivatedEventArgs = "IWebAccountProviderActivatedEventArgs";

    static PyObject* _new_IWebAccountProviderActivatedEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IWebAccountProviderActivatedEventArgs);
        return nullptr;
    }

    static void _dealloc_IWebAccountProviderActivatedEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IWebAccountProviderActivatedEventArgs_get_Operation(py::wrapper::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Operation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IWebAccountProviderActivatedEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IWebAccountProviderActivatedEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IWebAccountProviderActivatedEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IWebAccountProviderActivatedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IWebAccountProviderActivatedEventArgs[] = {
        { "_from", (PyCFunction)_from_IWebAccountProviderActivatedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IWebAccountProviderActivatedEventArgs[] = {
        { const_cast<char*>("operation"), (getter)IWebAccountProviderActivatedEventArgs_get_Operation, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IWebAccountProviderActivatedEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IWebAccountProviderActivatedEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IWebAccountProviderActivatedEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IWebAccountProviderActivatedEventArgs[] = 
    {
        { Py_tp_new, _new_IWebAccountProviderActivatedEventArgs },
        { Py_tp_dealloc, _dealloc_IWebAccountProviderActivatedEventArgs },
        { Py_tp_methods, _methods_IWebAccountProviderActivatedEventArgs },
        { Py_tp_getset, _getset_IWebAccountProviderActivatedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IWebAccountProviderActivatedEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IWebAccountProviderActivatedEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IWebAccountProviderActivatedEventArgs
    };

    // ----- IWebAuthenticationBrokerContinuationEventArgs interface --------------------
    constexpr const char* const _type_name_IWebAuthenticationBrokerContinuationEventArgs = "IWebAuthenticationBrokerContinuationEventArgs";

    static PyObject* _new_IWebAuthenticationBrokerContinuationEventArgs(PyTypeObject* /* unused */, PyObject* /* unused */, PyObject* /* unused */)
    {
        py::set_invalid_activation_error(_type_name_IWebAuthenticationBrokerContinuationEventArgs);
        return nullptr;
    }

    static void _dealloc_IWebAuthenticationBrokerContinuationEventArgs(py::wrapper::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* IWebAuthenticationBrokerContinuationEventArgs_get_WebAuthenticationResult(py::wrapper::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.WebAuthenticationResult());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IWebAuthenticationBrokerContinuationEventArgs_get_ContinuationData(py::wrapper::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ContinuationData());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IWebAuthenticationBrokerContinuationEventArgs_get_Kind(py::wrapper::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Kind());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IWebAuthenticationBrokerContinuationEventArgs_get_PreviousExecutionState(py::wrapper::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreviousExecutionState());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* IWebAuthenticationBrokerContinuationEventArgs_get_SplashScreen(py::wrapper::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SplashScreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_IWebAuthenticationBrokerContinuationEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_IWebAuthenticationBrokerContinuationEventArgs[] = {
        { "_from", (PyCFunction)_from_IWebAuthenticationBrokerContinuationEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_IWebAuthenticationBrokerContinuationEventArgs[] = {
        { const_cast<char*>("web_authentication_result"), (getter)IWebAuthenticationBrokerContinuationEventArgs_get_WebAuthenticationResult, nullptr, nullptr, nullptr },
        { const_cast<char*>("continuation_data"), (getter)IWebAuthenticationBrokerContinuationEventArgs_get_ContinuationData, nullptr, nullptr, nullptr },
        { const_cast<char*>("kind"), (getter)IWebAuthenticationBrokerContinuationEventArgs_get_Kind, nullptr, nullptr, nullptr },
        { const_cast<char*>("previous_execution_state"), (getter)IWebAuthenticationBrokerContinuationEventArgs_get_PreviousExecutionState, nullptr, nullptr, nullptr },
        { const_cast<char*>("splash_screen"), (getter)IWebAuthenticationBrokerContinuationEventArgs_get_SplashScreen, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_IWebAuthenticationBrokerContinuationEventArgs[] = 
    {
        { Py_tp_new, _new_IWebAuthenticationBrokerContinuationEventArgs },
        { Py_tp_dealloc, _dealloc_IWebAuthenticationBrokerContinuationEventArgs },
        { Py_tp_methods, _methods_IWebAuthenticationBrokerContinuationEventArgs },
        { Py_tp_getset, _getset_IWebAuthenticationBrokerContinuationEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_IWebAuthenticationBrokerContinuationEventArgs =
    {
        "_winrt_Windows_ApplicationModel_Activation.IWebAuthenticationBrokerContinuationEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_IWebAuthenticationBrokerContinuationEventArgs
    };

    // ----- Windows.ApplicationModel.Activation Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderAddAppointmentActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_AppointmentsProviderAddAppointmentActivatedEventArgs, &_type_spec_AppointmentsProviderAddAppointmentActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderRemoveAppointmentActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_AppointmentsProviderRemoveAppointmentActivatedEventArgs, &_type_spec_AppointmentsProviderRemoveAppointmentActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderReplaceAppointmentActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_AppointmentsProviderReplaceAppointmentActivatedEventArgs, &_type_spec_AppointmentsProviderReplaceAppointmentActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderShowAppointmentDetailsActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs, &_type_spec_AppointmentsProviderShowAppointmentDetailsActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::AppointmentsProviderShowTimeFrameActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_AppointmentsProviderShowTimeFrameActivatedEventArgs, &_type_spec_AppointmentsProviderShowTimeFrameActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_BackgroundActivatedEventArgs, &_type_spec_BackgroundActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::BarcodeScannerPreviewActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_BarcodeScannerPreviewActivatedEventArgs, &_type_spec_BarcodeScannerPreviewActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::CachedFileUpdaterActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_CachedFileUpdaterActivatedEventArgs, &_type_spec_CachedFileUpdaterActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::CommandLineActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_CommandLineActivatedEventArgs, &_type_spec_CommandLineActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::CommandLineActivationOperation>::python_type = py::register_python_type(module, _type_name_CommandLineActivationOperation, &_type_spec_CommandLineActivationOperation, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ContactPanelActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ContactPanelActivatedEventArgs, &_type_spec_ContactPanelActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::DeviceActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_DeviceActivatedEventArgs, &_type_spec_DeviceActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::DevicePairingActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_DevicePairingActivatedEventArgs, &_type_spec_DevicePairingActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::DialReceiverActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_DialReceiverActivatedEventArgs, &_type_spec_DialReceiverActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_FileActivatedEventArgs, &_type_spec_FileActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileOpenPickerActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_FileOpenPickerActivatedEventArgs, &_type_spec_FileOpenPickerActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileOpenPickerContinuationEventArgs>::python_type = py::register_python_type(module, _type_name_FileOpenPickerContinuationEventArgs, &_type_spec_FileOpenPickerContinuationEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileSavePickerActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_FileSavePickerActivatedEventArgs, &_type_spec_FileSavePickerActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::FileSavePickerContinuationEventArgs>::python_type = py::register_python_type(module, _type_name_FileSavePickerContinuationEventArgs, &_type_spec_FileSavePickerContinuationEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::FolderPickerContinuationEventArgs>::python_type = py::register_python_type(module, _type_name_FolderPickerContinuationEventArgs, &_type_spec_FolderPickerContinuationEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::LaunchActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_LaunchActivatedEventArgs, &_type_spec_LaunchActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::LockScreenActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_LockScreenActivatedEventArgs, &_type_spec_LockScreenActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::LockScreenComponentActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_LockScreenComponentActivatedEventArgs, &_type_spec_LockScreenComponentActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::PhoneCallActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_PhoneCallActivatedEventArgs, &_type_spec_PhoneCallActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::PickerReturnedActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_PickerReturnedActivatedEventArgs, &_type_spec_PickerReturnedActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ProtocolActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ProtocolActivatedEventArgs, &_type_spec_ProtocolActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ProtocolForResultsActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ProtocolForResultsActivatedEventArgs, &_type_spec_ProtocolForResultsActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::RestrictedLaunchActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_RestrictedLaunchActivatedEventArgs, &_type_spec_RestrictedLaunchActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::SearchActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_SearchActivatedEventArgs, &_type_spec_SearchActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ShareTargetActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ShareTargetActivatedEventArgs, &_type_spec_ShareTargetActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::SplashScreen>::python_type = py::register_python_type(module, _type_name_SplashScreen, &_type_spec_SplashScreen, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::StartupTaskActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_StartupTaskActivatedEventArgs, &_type_spec_StartupTaskActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::TileActivatedInfo>::python_type = py::register_python_type(module, _type_name_TileActivatedInfo, &_type_spec_TileActivatedInfo, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ToastNotificationActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ToastNotificationActivatedEventArgs, &_type_spec_ToastNotificationActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::UserDataAccountProviderActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_UserDataAccountProviderActivatedEventArgs, &_type_spec_UserDataAccountProviderActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::VoiceCommandActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_VoiceCommandActivatedEventArgs, &_type_spec_VoiceCommandActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::WebAccountProviderActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_WebAccountProviderActivatedEventArgs, &_type_spec_WebAccountProviderActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::WebAuthenticationBrokerContinuationEventArgs>::python_type = py::register_python_type(module, _type_name_WebAuthenticationBrokerContinuationEventArgs, &_type_spec_WebAuthenticationBrokerContinuationEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IActivatedEventArgs, &_type_spec_IActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser>::python_type = py::register_python_type(module, _type_name_IActivatedEventArgsWithUser, &_type_spec_IActivatedEventArgsWithUser, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IApplicationViewActivatedEventArgs, &_type_spec_IApplicationViewActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IAppointmentsProviderActivatedEventArgs, &_type_spec_IAppointmentsProviderActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IAppointmentsProviderAddAppointmentActivatedEventArgs, &_type_spec_IAppointmentsProviderAddAppointmentActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IAppointmentsProviderRemoveAppointmentActivatedEventArgs, &_type_spec_IAppointmentsProviderRemoveAppointmentActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IAppointmentsProviderReplaceAppointmentActivatedEventArgs, &_type_spec_IAppointmentsProviderReplaceAppointmentActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs, &_type_spec_IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IAppointmentsProviderShowTimeFrameActivatedEventArgs, &_type_spec_IAppointmentsProviderShowTimeFrameActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IBackgroundActivatedEventArgs, &_type_spec_IBackgroundActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IBarcodeScannerPreviewActivatedEventArgs, &_type_spec_IBarcodeScannerPreviewActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ICachedFileUpdaterActivatedEventArgs, &_type_spec_ICachedFileUpdaterActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ICommandLineActivatedEventArgs, &_type_spec_ICommandLineActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IContactPanelActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IContactPanelActivatedEventArgs, &_type_spec_IContactPanelActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IContinuationActivatedEventArgs, &_type_spec_IContinuationActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IDeviceActivatedEventArgs, &_type_spec_IDeviceActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IDevicePairingActivatedEventArgs, &_type_spec_IDevicePairingActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IDialReceiverActivatedEventArgs, &_type_spec_IDialReceiverActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IFileActivatedEventArgs, &_type_spec_IFileActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithCallerPackageFamilyName>::python_type = py::register_python_type(module, _type_name_IFileActivatedEventArgsWithCallerPackageFamilyName, &_type_spec_IFileActivatedEventArgsWithCallerPackageFamilyName, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles>::python_type = py::register_python_type(module, _type_name_IFileActivatedEventArgsWithNeighboringFiles, &_type_spec_IFileActivatedEventArgsWithNeighboringFiles, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IFileOpenPickerActivatedEventArgs, &_type_spec_IFileOpenPickerActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs2>::python_type = py::register_python_type(module, _type_name_IFileOpenPickerActivatedEventArgs2, &_type_spec_IFileOpenPickerActivatedEventArgs2, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs>::python_type = py::register_python_type(module, _type_name_IFileOpenPickerContinuationEventArgs, &_type_spec_IFileOpenPickerContinuationEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IFileSavePickerActivatedEventArgs, &_type_spec_IFileSavePickerActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs2>::python_type = py::register_python_type(module, _type_name_IFileSavePickerActivatedEventArgs2, &_type_spec_IFileSavePickerActivatedEventArgs2, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs>::python_type = py::register_python_type(module, _type_name_IFileSavePickerContinuationEventArgs, &_type_spec_IFileSavePickerContinuationEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs>::python_type = py::register_python_type(module, _type_name_IFolderPickerContinuationEventArgs, &_type_spec_IFolderPickerContinuationEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ILaunchActivatedEventArgs, &_type_spec_ILaunchActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2>::python_type = py::register_python_type(module, _type_name_ILaunchActivatedEventArgs2, &_type_spec_ILaunchActivatedEventArgs2, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ILockScreenActivatedEventArgs, &_type_spec_ILockScreenActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IPhoneCallActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IPhoneCallActivatedEventArgs, &_type_spec_IPhoneCallActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IPickerReturnedActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IPickerReturnedActivatedEventArgs, &_type_spec_IPickerReturnedActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IPrelaunchActivatedEventArgs, &_type_spec_IPrelaunchActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IProtocolActivatedEventArgs, &_type_spec_IProtocolActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData>::python_type = py::register_python_type(module, _type_name_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData, &_type_spec_IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IProtocolForResultsActivatedEventArgs, &_type_spec_IProtocolForResultsActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IRestrictedLaunchActivatedEventArgs, &_type_spec_IRestrictedLaunchActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_ISearchActivatedEventArgs, &_type_spec_ISearchActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::ISearchActivatedEventArgsWithLinguisticDetails>::python_type = py::register_python_type(module, _type_name_ISearchActivatedEventArgsWithLinguisticDetails, &_type_spec_ISearchActivatedEventArgsWithLinguisticDetails, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IShareTargetActivatedEventArgs, &_type_spec_IShareTargetActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IStartupTaskActivatedEventArgs, &_type_spec_IStartupTaskActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IToastNotificationActivatedEventArgs, &_type_spec_IToastNotificationActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IUserDataAccountProviderActivatedEventArgs, &_type_spec_IUserDataAccountProviderActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IViewSwitcherProvider>::python_type = py::register_python_type(module, _type_name_IViewSwitcherProvider, &_type_spec_IViewSwitcherProvider, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IVoiceCommandActivatedEventArgs, &_type_spec_IVoiceCommandActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs>::python_type = py::register_python_type(module, _type_name_IWebAccountProviderActivatedEventArgs, &_type_spec_IWebAccountProviderActivatedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs>::python_type = py::register_python_type(module, _type_name_IWebAuthenticationBrokerContinuationEventArgs, &_type_spec_IWebAuthenticationBrokerContinuationEventArgs, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.ApplicationModel.Activation");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_ApplicationModel_Activation",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::ApplicationModel::Activation

PyMODINIT_FUNC
PyInit__winrt_Windows_ApplicationModel_Activation (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::ApplicationModel::Activation::module_def);
}
