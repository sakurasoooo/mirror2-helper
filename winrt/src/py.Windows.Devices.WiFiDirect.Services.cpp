// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.Devices.WiFiDirect.Services.h"

PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectService>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAutoAcceptSessionConnectedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceProvisioningInfo>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceRemotePortAddedEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionDeferredEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequestedEventArgs>::python_type;

namespace py::cpp::Windows::Devices::WiFiDirect::Services
{
    // ----- WiFiDirectService class --------------------
    constexpr const char* const _type_name_WiFiDirectService = "WiFiDirectService";

    static PyObject* _new_WiFiDirectService(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WiFiDirectService);
        return nullptr;
    }

    static void _dealloc_WiFiDirectService(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectService_ConnectAsync(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ConnectAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                return py::convert(self->obj.ConnectAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectService_FromIdAsync(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                return py::convert(winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectService::FromIdAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectService_GetProvisioningInfoAsync(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceConfigurationMethod>(args, 0);

                return py::convert(self->obj.GetProvisioningInfoAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectService_GetSelector(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                return py::convert(winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectService::GetSelector(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::Windows::Storage::Streams::IBuffer>(args, 1);

                return py::convert(winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectService::GetSelector(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectService_get_SessionInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SessionInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WiFiDirectService_put_SessionInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Storage::Streams::IBuffer>(arg);

            self->obj.SessionInfo(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* WiFiDirectService_get_PreferGroupOwnerMode(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreferGroupOwnerMode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WiFiDirectService_put_PreferGroupOwnerMode(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<bool>(arg);

            self->obj.PreferGroupOwnerMode(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* WiFiDirectService_get_RemoteServiceInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RemoteServiceInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectService_get_ServiceError(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ServiceError());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectService_get_SupportedConfigurationMethods(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SupportedConfigurationMethods());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectService_add_SessionDeferred(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectService, winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionDeferredEventArgs>>(arg);

            return py::convert(self->obj.SessionDeferred(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectService_remove_SessionDeferred(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SessionDeferred(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectService(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectService>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectService[] = {
        { "connect_async", (PyCFunction)WiFiDirectService_ConnectAsync, METH_VARARGS, nullptr },
        { "from_id_async", (PyCFunction)WiFiDirectService_FromIdAsync, METH_VARARGS | METH_STATIC, nullptr },
        { "get_provisioning_info_async", (PyCFunction)WiFiDirectService_GetProvisioningInfoAsync, METH_VARARGS, nullptr },
        { "get_selector", (PyCFunction)WiFiDirectService_GetSelector, METH_VARARGS | METH_STATIC, nullptr },
        { "add_session_deferred", (PyCFunction)WiFiDirectService_add_SessionDeferred, METH_O, nullptr },
        { "remove_session_deferred", (PyCFunction)WiFiDirectService_remove_SessionDeferred, METH_O, nullptr },
        { "_from", (PyCFunction)_from_WiFiDirectService, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectService[] = {
        { const_cast<char*>("session_info"), (getter)WiFiDirectService_get_SessionInfo, (setter)WiFiDirectService_put_SessionInfo, nullptr, nullptr },
        { const_cast<char*>("prefer_group_owner_mode"), (getter)WiFiDirectService_get_PreferGroupOwnerMode, (setter)WiFiDirectService_put_PreferGroupOwnerMode, nullptr, nullptr },
        { const_cast<char*>("remote_service_info"), (getter)WiFiDirectService_get_RemoteServiceInfo, nullptr, nullptr, nullptr },
        { const_cast<char*>("service_error"), (getter)WiFiDirectService_get_ServiceError, nullptr, nullptr, nullptr },
        { const_cast<char*>("supported_configuration_methods"), (getter)WiFiDirectService_get_SupportedConfigurationMethods, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectService[] = 
    {
        { Py_tp_new, _new_WiFiDirectService },
        { Py_tp_dealloc, _dealloc_WiFiDirectService },
        { Py_tp_methods, _methods_WiFiDirectService },
        { Py_tp_getset, _getset_WiFiDirectService },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectService =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectService",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectService),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectService
    };

    // ----- WiFiDirectServiceAdvertiser class --------------------
    constexpr const char* const _type_name_WiFiDirectServiceAdvertiser = "WiFiDirectServiceAdvertiser";

    static PyObject* _new_WiFiDirectServiceAdvertiser(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser instance{ param0 };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_WiFiDirectServiceAdvertiser(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectServiceAdvertiser_ConnectAsync(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Devices::Enumeration::DeviceInformation>(args, 0);

                return py::convert(self->obj.ConnectAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Devices::Enumeration::DeviceInformation>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.ConnectAsync(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_Start(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Start();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_Stop(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Stop();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_ServiceStatus(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ServiceStatus());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WiFiDirectServiceAdvertiser_put_ServiceStatus(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceStatus>(arg);

            self->obj.ServiceStatus(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_ServiceInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ServiceInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WiFiDirectServiceAdvertiser_put_ServiceInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Storage::Streams::IBuffer>(arg);

            self->obj.ServiceInfo(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_PreferGroupOwnerMode(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreferGroupOwnerMode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WiFiDirectServiceAdvertiser_put_PreferGroupOwnerMode(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<bool>(arg);

            self->obj.PreferGroupOwnerMode(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_DeferredSessionInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeferredSessionInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WiFiDirectServiceAdvertiser_put_DeferredSessionInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Storage::Streams::IBuffer>(arg);

            self->obj.DeferredSessionInfo(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_CustomServiceStatusCode(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CustomServiceStatusCode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WiFiDirectServiceAdvertiser_put_CustomServiceStatusCode(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<uint32_t>(arg);

            self->obj.CustomServiceStatusCode(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_AutoAcceptSession(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AutoAcceptSession());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WiFiDirectServiceAdvertiser_put_AutoAcceptSession(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<bool>(arg);

            self->obj.AutoAcceptSession(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_ServiceError(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ServiceError());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_PreferredConfigurationMethods(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PreferredConfigurationMethods());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_ServiceName(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ServiceName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_ServiceNamePrefixes(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ServiceNamePrefixes());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_get_AdvertisementStatus(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AdvertisementStatus());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_add_AdvertisementStatusChanged(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser, winrt::Windows::Foundation::IInspectable>>(arg);

            return py::convert(self->obj.AdvertisementStatusChanged(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_remove_AdvertisementStatusChanged(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.AdvertisementStatusChanged(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_add_AutoAcceptSessionConnected(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser, winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAutoAcceptSessionConnectedEventArgs>>(arg);

            return py::convert(self->obj.AutoAcceptSessionConnected(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_remove_AutoAcceptSessionConnected(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.AutoAcceptSessionConnected(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_add_SessionRequested(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser, winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequestedEventArgs>>(arg);

            return py::convert(self->obj.SessionRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAdvertiser_remove_SessionRequested(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SessionRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectServiceAdvertiser(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectServiceAdvertiser[] = {
        { "connect_async", (PyCFunction)WiFiDirectServiceAdvertiser_ConnectAsync, METH_VARARGS, nullptr },
        { "start", (PyCFunction)WiFiDirectServiceAdvertiser_Start, METH_VARARGS, nullptr },
        { "stop", (PyCFunction)WiFiDirectServiceAdvertiser_Stop, METH_VARARGS, nullptr },
        { "add_advertisement_status_changed", (PyCFunction)WiFiDirectServiceAdvertiser_add_AdvertisementStatusChanged, METH_O, nullptr },
        { "remove_advertisement_status_changed", (PyCFunction)WiFiDirectServiceAdvertiser_remove_AdvertisementStatusChanged, METH_O, nullptr },
        { "add_auto_accept_session_connected", (PyCFunction)WiFiDirectServiceAdvertiser_add_AutoAcceptSessionConnected, METH_O, nullptr },
        { "remove_auto_accept_session_connected", (PyCFunction)WiFiDirectServiceAdvertiser_remove_AutoAcceptSessionConnected, METH_O, nullptr },
        { "add_session_requested", (PyCFunction)WiFiDirectServiceAdvertiser_add_SessionRequested, METH_O, nullptr },
        { "remove_session_requested", (PyCFunction)WiFiDirectServiceAdvertiser_remove_SessionRequested, METH_O, nullptr },
        { "_from", (PyCFunction)_from_WiFiDirectServiceAdvertiser, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectServiceAdvertiser[] = {
        { const_cast<char*>("service_status"), (getter)WiFiDirectServiceAdvertiser_get_ServiceStatus, (setter)WiFiDirectServiceAdvertiser_put_ServiceStatus, nullptr, nullptr },
        { const_cast<char*>("service_info"), (getter)WiFiDirectServiceAdvertiser_get_ServiceInfo, (setter)WiFiDirectServiceAdvertiser_put_ServiceInfo, nullptr, nullptr },
        { const_cast<char*>("prefer_group_owner_mode"), (getter)WiFiDirectServiceAdvertiser_get_PreferGroupOwnerMode, (setter)WiFiDirectServiceAdvertiser_put_PreferGroupOwnerMode, nullptr, nullptr },
        { const_cast<char*>("deferred_session_info"), (getter)WiFiDirectServiceAdvertiser_get_DeferredSessionInfo, (setter)WiFiDirectServiceAdvertiser_put_DeferredSessionInfo, nullptr, nullptr },
        { const_cast<char*>("custom_service_status_code"), (getter)WiFiDirectServiceAdvertiser_get_CustomServiceStatusCode, (setter)WiFiDirectServiceAdvertiser_put_CustomServiceStatusCode, nullptr, nullptr },
        { const_cast<char*>("auto_accept_session"), (getter)WiFiDirectServiceAdvertiser_get_AutoAcceptSession, (setter)WiFiDirectServiceAdvertiser_put_AutoAcceptSession, nullptr, nullptr },
        { const_cast<char*>("service_error"), (getter)WiFiDirectServiceAdvertiser_get_ServiceError, nullptr, nullptr, nullptr },
        { const_cast<char*>("preferred_configuration_methods"), (getter)WiFiDirectServiceAdvertiser_get_PreferredConfigurationMethods, nullptr, nullptr, nullptr },
        { const_cast<char*>("service_name"), (getter)WiFiDirectServiceAdvertiser_get_ServiceName, nullptr, nullptr, nullptr },
        { const_cast<char*>("service_name_prefixes"), (getter)WiFiDirectServiceAdvertiser_get_ServiceNamePrefixes, nullptr, nullptr, nullptr },
        { const_cast<char*>("advertisement_status"), (getter)WiFiDirectServiceAdvertiser_get_AdvertisementStatus, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectServiceAdvertiser[] = 
    {
        { Py_tp_new, _new_WiFiDirectServiceAdvertiser },
        { Py_tp_dealloc, _dealloc_WiFiDirectServiceAdvertiser },
        { Py_tp_methods, _methods_WiFiDirectServiceAdvertiser },
        { Py_tp_getset, _getset_WiFiDirectServiceAdvertiser },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectServiceAdvertiser =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectServiceAdvertiser",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectServiceAdvertiser
    };

    // ----- WiFiDirectServiceAutoAcceptSessionConnectedEventArgs class --------------------
    constexpr const char* const _type_name_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs = "WiFiDirectServiceAutoAcceptSessionConnectedEventArgs";

    static PyObject* _new_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs);
        return nullptr;
    }

    static void _dealloc_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAutoAcceptSessionConnectedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectServiceAutoAcceptSessionConnectedEventArgs_get_Session(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAutoAcceptSessionConnectedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Session());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceAutoAcceptSessionConnectedEventArgs_get_SessionInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAutoAcceptSessionConnectedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SessionInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAutoAcceptSessionConnectedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs[] = {
        { "_from", (PyCFunction)_from_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs[] = {
        { const_cast<char*>("session"), (getter)WiFiDirectServiceAutoAcceptSessionConnectedEventArgs_get_Session, nullptr, nullptr, nullptr },
        { const_cast<char*>("session_info"), (getter)WiFiDirectServiceAutoAcceptSessionConnectedEventArgs_get_SessionInfo, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs[] = 
    {
        { Py_tp_new, _new_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs },
        { Py_tp_dealloc, _dealloc_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs },
        { Py_tp_methods, _methods_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs },
        { Py_tp_getset, _getset_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectServiceAutoAcceptSessionConnectedEventArgs",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAutoAcceptSessionConnectedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs
    };

    // ----- WiFiDirectServiceProvisioningInfo class --------------------
    constexpr const char* const _type_name_WiFiDirectServiceProvisioningInfo = "WiFiDirectServiceProvisioningInfo";

    static PyObject* _new_WiFiDirectServiceProvisioningInfo(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WiFiDirectServiceProvisioningInfo);
        return nullptr;
    }

    static void _dealloc_WiFiDirectServiceProvisioningInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceProvisioningInfo* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectServiceProvisioningInfo_get_IsGroupFormationNeeded(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceProvisioningInfo* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsGroupFormationNeeded());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceProvisioningInfo_get_SelectedConfigurationMethod(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceProvisioningInfo* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectedConfigurationMethod());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectServiceProvisioningInfo(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceProvisioningInfo>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectServiceProvisioningInfo[] = {
        { "_from", (PyCFunction)_from_WiFiDirectServiceProvisioningInfo, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectServiceProvisioningInfo[] = {
        { const_cast<char*>("is_group_formation_needed"), (getter)WiFiDirectServiceProvisioningInfo_get_IsGroupFormationNeeded, nullptr, nullptr, nullptr },
        { const_cast<char*>("selected_configuration_method"), (getter)WiFiDirectServiceProvisioningInfo_get_SelectedConfigurationMethod, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectServiceProvisioningInfo[] = 
    {
        { Py_tp_new, _new_WiFiDirectServiceProvisioningInfo },
        { Py_tp_dealloc, _dealloc_WiFiDirectServiceProvisioningInfo },
        { Py_tp_methods, _methods_WiFiDirectServiceProvisioningInfo },
        { Py_tp_getset, _getset_WiFiDirectServiceProvisioningInfo },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectServiceProvisioningInfo =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectServiceProvisioningInfo",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceProvisioningInfo),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectServiceProvisioningInfo
    };

    // ----- WiFiDirectServiceRemotePortAddedEventArgs class --------------------
    constexpr const char* const _type_name_WiFiDirectServiceRemotePortAddedEventArgs = "WiFiDirectServiceRemotePortAddedEventArgs";

    static PyObject* _new_WiFiDirectServiceRemotePortAddedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WiFiDirectServiceRemotePortAddedEventArgs);
        return nullptr;
    }

    static void _dealloc_WiFiDirectServiceRemotePortAddedEventArgs(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceRemotePortAddedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectServiceRemotePortAddedEventArgs_get_EndpointPairs(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceRemotePortAddedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.EndpointPairs());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceRemotePortAddedEventArgs_get_Protocol(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceRemotePortAddedEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Protocol());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectServiceRemotePortAddedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceRemotePortAddedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectServiceRemotePortAddedEventArgs[] = {
        { "_from", (PyCFunction)_from_WiFiDirectServiceRemotePortAddedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectServiceRemotePortAddedEventArgs[] = {
        { const_cast<char*>("endpoint_pairs"), (getter)WiFiDirectServiceRemotePortAddedEventArgs_get_EndpointPairs, nullptr, nullptr, nullptr },
        { const_cast<char*>("protocol"), (getter)WiFiDirectServiceRemotePortAddedEventArgs_get_Protocol, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectServiceRemotePortAddedEventArgs[] = 
    {
        { Py_tp_new, _new_WiFiDirectServiceRemotePortAddedEventArgs },
        { Py_tp_dealloc, _dealloc_WiFiDirectServiceRemotePortAddedEventArgs },
        { Py_tp_methods, _methods_WiFiDirectServiceRemotePortAddedEventArgs },
        { Py_tp_getset, _getset_WiFiDirectServiceRemotePortAddedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectServiceRemotePortAddedEventArgs =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectServiceRemotePortAddedEventArgs",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceRemotePortAddedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectServiceRemotePortAddedEventArgs
    };

    // ----- WiFiDirectServiceSession class --------------------
    constexpr const char* const _type_name_WiFiDirectServiceSession = "WiFiDirectServiceSession";

    static PyObject* _new_WiFiDirectServiceSession(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WiFiDirectServiceSession);
        return nullptr;
    }

    static void _dealloc_WiFiDirectServiceSession(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectServiceSession_AddDatagramSocketAsync(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Networking::Sockets::DatagramSocket>(args, 0);

                return py::convert(self->obj.AddDatagramSocketAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_AddStreamSocketListenerAsync(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Networking::Sockets::StreamSocketListener>(args, 0);

                return py::convert(self->obj.AddStreamSocketListenerAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_Close(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Close();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_GetConnectionEndpointPairs(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetConnectionEndpointPairs());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_get_AdvertisementId(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AdvertisementId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_get_ErrorStatus(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ErrorStatus());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_get_ServiceAddress(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ServiceAddress());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_get_ServiceName(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ServiceName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_get_SessionAddress(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SessionAddress());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_get_SessionId(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SessionId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_get_Status(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Status());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_add_RemotePortAdded(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession, winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceRemotePortAddedEventArgs>>(arg);

            return py::convert(self->obj.RemotePortAdded(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_remove_RemotePortAdded(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.RemotePortAdded(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_add_SessionStatusChanged(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession, winrt::Windows::Foundation::IInspectable>>(arg);

            return py::convert(self->obj.SessionStatusChanged(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSession_remove_SessionStatusChanged(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SessionStatusChanged(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectServiceSession(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _enter_WiFiDirectServiceSession(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self) noexcept
    {
        Py_INCREF(self);
        return (PyObject*)self;
    }

    static PyObject* _exit_WiFiDirectServiceSession(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession* self) noexcept
    {
        try
        {
            self->obj.Close();
            Py_RETURN_FALSE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectServiceSession[] = {
        { "add_datagram_socket_async", (PyCFunction)WiFiDirectServiceSession_AddDatagramSocketAsync, METH_VARARGS, nullptr },
        { "add_stream_socket_listener_async", (PyCFunction)WiFiDirectServiceSession_AddStreamSocketListenerAsync, METH_VARARGS, nullptr },
        { "close", (PyCFunction)WiFiDirectServiceSession_Close, METH_VARARGS, nullptr },
        { "get_connection_endpoint_pairs", (PyCFunction)WiFiDirectServiceSession_GetConnectionEndpointPairs, METH_VARARGS, nullptr },
        { "add_remote_port_added", (PyCFunction)WiFiDirectServiceSession_add_RemotePortAdded, METH_O, nullptr },
        { "remove_remote_port_added", (PyCFunction)WiFiDirectServiceSession_remove_RemotePortAdded, METH_O, nullptr },
        { "add_session_status_changed", (PyCFunction)WiFiDirectServiceSession_add_SessionStatusChanged, METH_O, nullptr },
        { "remove_session_status_changed", (PyCFunction)WiFiDirectServiceSession_remove_SessionStatusChanged, METH_O, nullptr },
        { "_from", (PyCFunction)_from_WiFiDirectServiceSession, METH_O | METH_STATIC, nullptr },
        { "__enter__", (PyCFunction)_enter_WiFiDirectServiceSession, METH_NOARGS, nullptr },
        { "__exit__",  (PyCFunction)_exit_WiFiDirectServiceSession, METH_VARARGS, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectServiceSession[] = {
        { const_cast<char*>("advertisement_id"), (getter)WiFiDirectServiceSession_get_AdvertisementId, nullptr, nullptr, nullptr },
        { const_cast<char*>("error_status"), (getter)WiFiDirectServiceSession_get_ErrorStatus, nullptr, nullptr, nullptr },
        { const_cast<char*>("service_address"), (getter)WiFiDirectServiceSession_get_ServiceAddress, nullptr, nullptr, nullptr },
        { const_cast<char*>("service_name"), (getter)WiFiDirectServiceSession_get_ServiceName, nullptr, nullptr, nullptr },
        { const_cast<char*>("session_address"), (getter)WiFiDirectServiceSession_get_SessionAddress, nullptr, nullptr, nullptr },
        { const_cast<char*>("session_id"), (getter)WiFiDirectServiceSession_get_SessionId, nullptr, nullptr, nullptr },
        { const_cast<char*>("status"), (getter)WiFiDirectServiceSession_get_Status, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectServiceSession[] = 
    {
        { Py_tp_new, _new_WiFiDirectServiceSession },
        { Py_tp_dealloc, _dealloc_WiFiDirectServiceSession },
        { Py_tp_methods, _methods_WiFiDirectServiceSession },
        { Py_tp_getset, _getset_WiFiDirectServiceSession },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectServiceSession =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectServiceSession",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectServiceSession
    };

    // ----- WiFiDirectServiceSessionDeferredEventArgs class --------------------
    constexpr const char* const _type_name_WiFiDirectServiceSessionDeferredEventArgs = "WiFiDirectServiceSessionDeferredEventArgs";

    static PyObject* _new_WiFiDirectServiceSessionDeferredEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WiFiDirectServiceSessionDeferredEventArgs);
        return nullptr;
    }

    static void _dealloc_WiFiDirectServiceSessionDeferredEventArgs(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionDeferredEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectServiceSessionDeferredEventArgs_get_DeferredSessionInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionDeferredEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeferredSessionInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectServiceSessionDeferredEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionDeferredEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectServiceSessionDeferredEventArgs[] = {
        { "_from", (PyCFunction)_from_WiFiDirectServiceSessionDeferredEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectServiceSessionDeferredEventArgs[] = {
        { const_cast<char*>("deferred_session_info"), (getter)WiFiDirectServiceSessionDeferredEventArgs_get_DeferredSessionInfo, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectServiceSessionDeferredEventArgs[] = 
    {
        { Py_tp_new, _new_WiFiDirectServiceSessionDeferredEventArgs },
        { Py_tp_dealloc, _dealloc_WiFiDirectServiceSessionDeferredEventArgs },
        { Py_tp_methods, _methods_WiFiDirectServiceSessionDeferredEventArgs },
        { Py_tp_getset, _getset_WiFiDirectServiceSessionDeferredEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectServiceSessionDeferredEventArgs =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectServiceSessionDeferredEventArgs",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionDeferredEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectServiceSessionDeferredEventArgs
    };

    // ----- WiFiDirectServiceSessionRequest class --------------------
    constexpr const char* const _type_name_WiFiDirectServiceSessionRequest = "WiFiDirectServiceSessionRequest";

    static PyObject* _new_WiFiDirectServiceSessionRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WiFiDirectServiceSessionRequest);
        return nullptr;
    }

    static void _dealloc_WiFiDirectServiceSessionRequest(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectServiceSessionRequest_Close(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Close();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSessionRequest_get_DeviceInformation(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DeviceInformation());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSessionRequest_get_ProvisioningInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ProvisioningInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WiFiDirectServiceSessionRequest_get_SessionInfo(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SessionInfo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectServiceSessionRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _enter_WiFiDirectServiceSessionRequest(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest* self) noexcept
    {
        Py_INCREF(self);
        return (PyObject*)self;
    }

    static PyObject* _exit_WiFiDirectServiceSessionRequest(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest* self) noexcept
    {
        try
        {
            self->obj.Close();
            Py_RETURN_FALSE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectServiceSessionRequest[] = {
        { "close", (PyCFunction)WiFiDirectServiceSessionRequest_Close, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_WiFiDirectServiceSessionRequest, METH_O | METH_STATIC, nullptr },
        { "__enter__", (PyCFunction)_enter_WiFiDirectServiceSessionRequest, METH_NOARGS, nullptr },
        { "__exit__",  (PyCFunction)_exit_WiFiDirectServiceSessionRequest, METH_VARARGS, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectServiceSessionRequest[] = {
        { const_cast<char*>("device_information"), (getter)WiFiDirectServiceSessionRequest_get_DeviceInformation, nullptr, nullptr, nullptr },
        { const_cast<char*>("provisioning_info"), (getter)WiFiDirectServiceSessionRequest_get_ProvisioningInfo, nullptr, nullptr, nullptr },
        { const_cast<char*>("session_info"), (getter)WiFiDirectServiceSessionRequest_get_SessionInfo, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectServiceSessionRequest[] = 
    {
        { Py_tp_new, _new_WiFiDirectServiceSessionRequest },
        { Py_tp_dealloc, _dealloc_WiFiDirectServiceSessionRequest },
        { Py_tp_methods, _methods_WiFiDirectServiceSessionRequest },
        { Py_tp_getset, _getset_WiFiDirectServiceSessionRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectServiceSessionRequest =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectServiceSessionRequest",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectServiceSessionRequest
    };

    // ----- WiFiDirectServiceSessionRequestedEventArgs class --------------------
    constexpr const char* const _type_name_WiFiDirectServiceSessionRequestedEventArgs = "WiFiDirectServiceSessionRequestedEventArgs";

    static PyObject* _new_WiFiDirectServiceSessionRequestedEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WiFiDirectServiceSessionRequestedEventArgs);
        return nullptr;
    }

    static void _dealloc_WiFiDirectServiceSessionRequestedEventArgs(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequestedEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WiFiDirectServiceSessionRequestedEventArgs_GetSessionRequest(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequestedEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetSessionRequest());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* _from_WiFiDirectServiceSessionRequestedEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequestedEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WiFiDirectServiceSessionRequestedEventArgs[] = {
        { "get_session_request", (PyCFunction)WiFiDirectServiceSessionRequestedEventArgs_GetSessionRequest, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_WiFiDirectServiceSessionRequestedEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WiFiDirectServiceSessionRequestedEventArgs[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_WiFiDirectServiceSessionRequestedEventArgs[] = 
    {
        { Py_tp_new, _new_WiFiDirectServiceSessionRequestedEventArgs },
        { Py_tp_dealloc, _dealloc_WiFiDirectServiceSessionRequestedEventArgs },
        { Py_tp_methods, _methods_WiFiDirectServiceSessionRequestedEventArgs },
        { Py_tp_getset, _getset_WiFiDirectServiceSessionRequestedEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WiFiDirectServiceSessionRequestedEventArgs =
    {
        "_winrt_Windows_Devices_WiFiDirect_Services.WiFiDirectServiceSessionRequestedEventArgs",
        sizeof(py::wrapper::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequestedEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WiFiDirectServiceSessionRequestedEventArgs
    };

    // ----- Windows.Devices.WiFiDirect.Services Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectService>::python_type = py::register_python_type(module, _type_name_WiFiDirectService, &_type_spec_WiFiDirectService, bases.get());
            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAdvertiser>::python_type = py::register_python_type(module, _type_name_WiFiDirectServiceAdvertiser, &_type_spec_WiFiDirectServiceAdvertiser, bases.get());
            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceAutoAcceptSessionConnectedEventArgs>::python_type = py::register_python_type(module, _type_name_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs, &_type_spec_WiFiDirectServiceAutoAcceptSessionConnectedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceProvisioningInfo>::python_type = py::register_python_type(module, _type_name_WiFiDirectServiceProvisioningInfo, &_type_spec_WiFiDirectServiceProvisioningInfo, bases.get());
            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceRemotePortAddedEventArgs>::python_type = py::register_python_type(module, _type_name_WiFiDirectServiceRemotePortAddedEventArgs, &_type_spec_WiFiDirectServiceRemotePortAddedEventArgs, bases.get());
            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSession>::python_type = py::register_python_type(module, _type_name_WiFiDirectServiceSession, &_type_spec_WiFiDirectServiceSession, bases.get());
            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionDeferredEventArgs>::python_type = py::register_python_type(module, _type_name_WiFiDirectServiceSessionDeferredEventArgs, &_type_spec_WiFiDirectServiceSessionDeferredEventArgs, bases.get());
            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequest>::python_type = py::register_python_type(module, _type_name_WiFiDirectServiceSessionRequest, &_type_spec_WiFiDirectServiceSessionRequest, bases.get());
            py::winrt_type<winrt::Windows::Devices::WiFiDirect::Services::WiFiDirectServiceSessionRequestedEventArgs>::python_type = py::register_python_type(module, _type_name_WiFiDirectServiceSessionRequestedEventArgs, &_type_spec_WiFiDirectServiceSessionRequestedEventArgs, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.Devices.WiFiDirect.Services");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_Devices_WiFiDirect_Services",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::Devices::WiFiDirect::Services

PyMODINIT_FUNC
PyInit__winrt_Windows_Devices_WiFiDirect_Services (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::Devices::WiFiDirect::Services::module_def);
}
