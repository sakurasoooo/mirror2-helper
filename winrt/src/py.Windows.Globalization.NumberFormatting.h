// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#include <winrt/Windows.Globalization.NumberFormatting.h>

namespace py::proj::Windows::Globalization::NumberFormatting
{}

namespace py::impl::Windows::Globalization::NumberFormatting
{}

namespace py::wrapper::Windows::Globalization::NumberFormatting
{
    using CurrencyFormatter = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::CurrencyFormatter>;
    using DecimalFormatter = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::DecimalFormatter>;
    using IncrementNumberRounder = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::IncrementNumberRounder>;
    using NumeralSystemTranslator = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::NumeralSystemTranslator>;
    using PercentFormatter = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::PercentFormatter>;
    using PermilleFormatter = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::PermilleFormatter>;
    using SignificantDigitsNumberRounder = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::SignificantDigitsNumberRounder>;
    using INumberFormatter = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::INumberFormatter>;
    using INumberFormatter2 = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::INumberFormatter2>;
    using INumberFormatterOptions = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::INumberFormatterOptions>;
    using INumberParser = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::INumberParser>;
    using INumberRounder = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::INumberRounder>;
    using INumberRounderOption = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::INumberRounderOption>;
    using ISignedZeroOption = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::ISignedZeroOption>;
    using ISignificantDigitsOption = py::winrt_wrapper<winrt::Windows::Globalization::NumberFormatting::ISignificantDigitsOption>;
}

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::CurrencyFormatter>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::DecimalFormatter>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::IncrementNumberRounder>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::NumeralSystemTranslator>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::PercentFormatter>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::PermilleFormatter>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::SignificantDigitsNumberRounder>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::INumberFormatter>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::INumberFormatter2>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::INumberFormatterOptions>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::INumberParser>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::INumberRounder>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::INumberRounderOption>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::ISignedZeroOption>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Globalization::NumberFormatting::ISignificantDigitsOption>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

}
