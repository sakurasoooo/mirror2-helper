// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Foundation.Collections.h")
#include "py.Windows.Foundation.Collections.h"
#endif

#if __has_include("py.Windows.Networking.h")
#include "py.Windows.Networking.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#include <winrt/Windows.Security.Cryptography.Certificates.h>

namespace py::proj::Windows::Security::Cryptography::Certificates
{}

namespace py::impl::Windows::Security::Cryptography::Certificates
{}

namespace py::wrapper::Windows::Security::Cryptography::Certificates
{
    using Certificate = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::Certificate>;
    using CertificateChain = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CertificateChain>;
    using CertificateEnrollmentManager = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CertificateEnrollmentManager>;
    using CertificateExtension = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CertificateExtension>;
    using CertificateKeyUsages = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CertificateKeyUsages>;
    using CertificateQuery = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CertificateQuery>;
    using CertificateRequestProperties = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CertificateRequestProperties>;
    using CertificateStore = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CertificateStore>;
    using CertificateStores = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CertificateStores>;
    using ChainBuildingParameters = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::ChainBuildingParameters>;
    using ChainValidationParameters = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::ChainValidationParameters>;
    using CmsAttachedSignature = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CmsAttachedSignature>;
    using CmsDetachedSignature = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CmsDetachedSignature>;
    using CmsSignerInfo = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CmsSignerInfo>;
    using CmsTimestampInfo = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::CmsTimestampInfo>;
    using KeyAlgorithmNames = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::KeyAlgorithmNames>;
    using KeyAttestationHelper = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::KeyAttestationHelper>;
    using KeyStorageProviderNames = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::KeyStorageProviderNames>;
    using PfxImportParameters = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::PfxImportParameters>;
    using StandardCertificateStoreNames = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::StandardCertificateStoreNames>;
    using SubjectAlternativeNameInfo = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::SubjectAlternativeNameInfo>;
    using UserCertificateEnrollmentManager = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::UserCertificateEnrollmentManager>;
    using UserCertificateStore = py::winrt_wrapper<winrt::Windows::Security::Cryptography::Certificates::UserCertificateStore>;
}

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::Certificate>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CertificateChain>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CertificateEnrollmentManager>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CertificateExtension>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CertificateKeyUsages>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CertificateQuery>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CertificateRequestProperties>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CertificateStore>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CertificateStores>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::ChainBuildingParameters>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::ChainValidationParameters>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CmsAttachedSignature>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CmsDetachedSignature>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CmsSignerInfo>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::CmsTimestampInfo>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::KeyAlgorithmNames>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::KeyAttestationHelper>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::KeyStorageProviderNames>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::PfxImportParameters>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::StandardCertificateStoreNames>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::SubjectAlternativeNameInfo>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::UserCertificateEnrollmentManager>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::Security::Cryptography::Certificates::UserCertificateStore>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

}
