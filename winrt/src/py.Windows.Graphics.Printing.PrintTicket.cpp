// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.Graphics.Printing.PrintTicket.h"

PyTypeObject* py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketOption>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketValue>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicketValidationResult>::python_type;

namespace py::cpp::Windows::Graphics::Printing::PrintTicket
{
    // ----- PrintTicketCapabilities class --------------------
    constexpr const char* const _type_name_PrintTicketCapabilities = "PrintTicketCapabilities";

    static PyObject* _new_PrintTicketCapabilities(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PrintTicketCapabilities);
        return nullptr;
    }

    static void _dealloc_PrintTicketCapabilities(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PrintTicketCapabilities_GetFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetFeature(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_GetParameterDefinition(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetParameterDefinition(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_DocumentBindingFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentBindingFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_DocumentCollateFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentCollateFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_DocumentDuplexFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentDuplexFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_DocumentHolePunchFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentHolePunchFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_DocumentInputBinFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentInputBinFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_DocumentNUpFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentNUpFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_DocumentStapleFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentStapleFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_JobPasscodeFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.JobPasscodeFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_Name(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_PageBorderlessFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageBorderlessFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_PageMediaSizeFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageMediaSizeFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_PageMediaTypeFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageMediaTypeFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_PageOrientationFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageOrientationFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_PageOutputColorFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageOutputColorFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_PageOutputQualityFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageOutputQualityFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_PageResolutionFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageResolutionFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_XmlNamespace(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNamespace());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketCapabilities_get_XmlNode(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PrintTicketCapabilities(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PrintTicketCapabilities[] = {
        { "get_feature", (PyCFunction)PrintTicketCapabilities_GetFeature, METH_VARARGS, nullptr },
        { "get_parameter_definition", (PyCFunction)PrintTicketCapabilities_GetParameterDefinition, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_PrintTicketCapabilities, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PrintTicketCapabilities[] = {
        { const_cast<char*>("document_binding_feature"), (getter)PrintTicketCapabilities_get_DocumentBindingFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_collate_feature"), (getter)PrintTicketCapabilities_get_DocumentCollateFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_duplex_feature"), (getter)PrintTicketCapabilities_get_DocumentDuplexFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_hole_punch_feature"), (getter)PrintTicketCapabilities_get_DocumentHolePunchFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_input_bin_feature"), (getter)PrintTicketCapabilities_get_DocumentInputBinFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_n_up_feature"), (getter)PrintTicketCapabilities_get_DocumentNUpFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_staple_feature"), (getter)PrintTicketCapabilities_get_DocumentStapleFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("job_passcode_feature"), (getter)PrintTicketCapabilities_get_JobPasscodeFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PrintTicketCapabilities_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_borderless_feature"), (getter)PrintTicketCapabilities_get_PageBorderlessFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_media_size_feature"), (getter)PrintTicketCapabilities_get_PageMediaSizeFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_media_type_feature"), (getter)PrintTicketCapabilities_get_PageMediaTypeFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_orientation_feature"), (getter)PrintTicketCapabilities_get_PageOrientationFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_output_color_feature"), (getter)PrintTicketCapabilities_get_PageOutputColorFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_output_quality_feature"), (getter)PrintTicketCapabilities_get_PageOutputQualityFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_resolution_feature"), (getter)PrintTicketCapabilities_get_PageResolutionFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_namespace"), (getter)PrintTicketCapabilities_get_XmlNamespace, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_node"), (getter)PrintTicketCapabilities_get_XmlNode, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PrintTicketCapabilities[] = 
    {
        { Py_tp_new, _new_PrintTicketCapabilities },
        { Py_tp_dealloc, _dealloc_PrintTicketCapabilities },
        { Py_tp_methods, _methods_PrintTicketCapabilities },
        { Py_tp_getset, _getset_PrintTicketCapabilities },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PrintTicketCapabilities =
    {
        "_winrt_Windows_Graphics_Printing_PrintTicket.PrintTicketCapabilities",
        sizeof(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PrintTicketCapabilities
    };

    // ----- PrintTicketFeature class --------------------
    constexpr const char* const _type_name_PrintTicketFeature = "PrintTicketFeature";

    static PyObject* _new_PrintTicketFeature(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PrintTicketFeature);
        return nullptr;
    }

    static void _dealloc_PrintTicketFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PrintTicketFeature_GetOption(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetOption(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketFeature_GetSelectedOption(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetSelectedOption());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketFeature_SetSelectedOption(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketOption>(args, 0);

                self->obj.SetSelectedOption(param0);
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketFeature_get_DisplayName(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DisplayName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketFeature_get_Name(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketFeature_get_Options(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Options());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketFeature_get_SelectionType(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SelectionType());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketFeature_get_XmlNamespace(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNamespace());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketFeature_get_XmlNode(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PrintTicketFeature(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PrintTicketFeature[] = {
        { "get_option", (PyCFunction)PrintTicketFeature_GetOption, METH_VARARGS, nullptr },
        { "get_selected_option", (PyCFunction)PrintTicketFeature_GetSelectedOption, METH_VARARGS, nullptr },
        { "set_selected_option", (PyCFunction)PrintTicketFeature_SetSelectedOption, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_PrintTicketFeature, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PrintTicketFeature[] = {
        { const_cast<char*>("display_name"), (getter)PrintTicketFeature_get_DisplayName, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PrintTicketFeature_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("options"), (getter)PrintTicketFeature_get_Options, nullptr, nullptr, nullptr },
        { const_cast<char*>("selection_type"), (getter)PrintTicketFeature_get_SelectionType, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_namespace"), (getter)PrintTicketFeature_get_XmlNamespace, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_node"), (getter)PrintTicketFeature_get_XmlNode, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PrintTicketFeature[] = 
    {
        { Py_tp_new, _new_PrintTicketFeature },
        { Py_tp_dealloc, _dealloc_PrintTicketFeature },
        { Py_tp_methods, _methods_PrintTicketFeature },
        { Py_tp_getset, _getset_PrintTicketFeature },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PrintTicketFeature =
    {
        "_winrt_Windows_Graphics_Printing_PrintTicket.PrintTicketFeature",
        sizeof(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PrintTicketFeature
    };

    // ----- PrintTicketOption class --------------------
    constexpr const char* const _type_name_PrintTicketOption = "PrintTicketOption";

    static PyObject* _new_PrintTicketOption(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PrintTicketOption);
        return nullptr;
    }

    static void _dealloc_PrintTicketOption(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PrintTicketOption_GetPropertyNode(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetPropertyNode(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketOption_GetPropertyValue(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetPropertyValue(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketOption_GetScoredPropertyNode(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetScoredPropertyNode(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketOption_GetScoredPropertyValue(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetScoredPropertyValue(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketOption_get_DisplayName(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DisplayName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketOption_get_Name(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketOption_get_XmlNamespace(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNamespace());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketOption_get_XmlNode(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PrintTicketOption(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketOption>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PrintTicketOption[] = {
        { "get_property_node", (PyCFunction)PrintTicketOption_GetPropertyNode, METH_VARARGS, nullptr },
        { "get_property_value", (PyCFunction)PrintTicketOption_GetPropertyValue, METH_VARARGS, nullptr },
        { "get_scored_property_node", (PyCFunction)PrintTicketOption_GetScoredPropertyNode, METH_VARARGS, nullptr },
        { "get_scored_property_value", (PyCFunction)PrintTicketOption_GetScoredPropertyValue, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_PrintTicketOption, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PrintTicketOption[] = {
        { const_cast<char*>("display_name"), (getter)PrintTicketOption_get_DisplayName, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PrintTicketOption_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_namespace"), (getter)PrintTicketOption_get_XmlNamespace, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_node"), (getter)PrintTicketOption_get_XmlNode, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PrintTicketOption[] = 
    {
        { Py_tp_new, _new_PrintTicketOption },
        { Py_tp_dealloc, _dealloc_PrintTicketOption },
        { Py_tp_methods, _methods_PrintTicketOption },
        { Py_tp_getset, _getset_PrintTicketOption },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PrintTicketOption =
    {
        "_winrt_Windows_Graphics_Printing_PrintTicket.PrintTicketOption",
        sizeof(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketOption),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PrintTicketOption
    };

    // ----- PrintTicketParameterDefinition class --------------------
    constexpr const char* const _type_name_PrintTicketParameterDefinition = "PrintTicketParameterDefinition";

    static PyObject* _new_PrintTicketParameterDefinition(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PrintTicketParameterDefinition);
        return nullptr;
    }

    static void _dealloc_PrintTicketParameterDefinition(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PrintTicketParameterDefinition_get_DataType(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DataType());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketParameterDefinition_get_Name(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketParameterDefinition_get_RangeMax(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RangeMax());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketParameterDefinition_get_RangeMin(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RangeMin());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketParameterDefinition_get_UnitType(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.UnitType());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketParameterDefinition_get_XmlNamespace(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNamespace());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketParameterDefinition_get_XmlNode(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PrintTicketParameterDefinition(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PrintTicketParameterDefinition[] = {
        { "_from", (PyCFunction)_from_PrintTicketParameterDefinition, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PrintTicketParameterDefinition[] = {
        { const_cast<char*>("data_type"), (getter)PrintTicketParameterDefinition_get_DataType, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PrintTicketParameterDefinition_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("range_max"), (getter)PrintTicketParameterDefinition_get_RangeMax, nullptr, nullptr, nullptr },
        { const_cast<char*>("range_min"), (getter)PrintTicketParameterDefinition_get_RangeMin, nullptr, nullptr, nullptr },
        { const_cast<char*>("unit_type"), (getter)PrintTicketParameterDefinition_get_UnitType, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_namespace"), (getter)PrintTicketParameterDefinition_get_XmlNamespace, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_node"), (getter)PrintTicketParameterDefinition_get_XmlNode, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PrintTicketParameterDefinition[] = 
    {
        { Py_tp_new, _new_PrintTicketParameterDefinition },
        { Py_tp_dealloc, _dealloc_PrintTicketParameterDefinition },
        { Py_tp_methods, _methods_PrintTicketParameterDefinition },
        { Py_tp_getset, _getset_PrintTicketParameterDefinition },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PrintTicketParameterDefinition =
    {
        "_winrt_Windows_Graphics_Printing_PrintTicket.PrintTicketParameterDefinition",
        sizeof(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PrintTicketParameterDefinition
    };

    // ----- PrintTicketParameterInitializer class --------------------
    constexpr const char* const _type_name_PrintTicketParameterInitializer = "PrintTicketParameterInitializer";

    static PyObject* _new_PrintTicketParameterInitializer(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PrintTicketParameterInitializer);
        return nullptr;
    }

    static void _dealloc_PrintTicketParameterInitializer(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PrintTicketParameterInitializer_get_Value(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Value());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int PrintTicketParameterInitializer_put_Value(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketValue>(arg);

            self->obj.Value(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* PrintTicketParameterInitializer_get_Name(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketParameterInitializer_get_XmlNamespace(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNamespace());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* PrintTicketParameterInitializer_get_XmlNode(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PrintTicketParameterInitializer(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PrintTicketParameterInitializer[] = {
        { "_from", (PyCFunction)_from_PrintTicketParameterInitializer, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PrintTicketParameterInitializer[] = {
        { const_cast<char*>("value"), (getter)PrintTicketParameterInitializer_get_Value, (setter)PrintTicketParameterInitializer_put_Value, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)PrintTicketParameterInitializer_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_namespace"), (getter)PrintTicketParameterInitializer_get_XmlNamespace, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_node"), (getter)PrintTicketParameterInitializer_get_XmlNode, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PrintTicketParameterInitializer[] = 
    {
        { Py_tp_new, _new_PrintTicketParameterInitializer },
        { Py_tp_dealloc, _dealloc_PrintTicketParameterInitializer },
        { Py_tp_methods, _methods_PrintTicketParameterInitializer },
        { Py_tp_getset, _getset_PrintTicketParameterInitializer },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PrintTicketParameterInitializer =
    {
        "_winrt_Windows_Graphics_Printing_PrintTicket.PrintTicketParameterInitializer",
        sizeof(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PrintTicketParameterInitializer
    };

    // ----- PrintTicketValue class --------------------
    constexpr const char* const _type_name_PrintTicketValue = "PrintTicketValue";

    static PyObject* _new_PrintTicketValue(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_PrintTicketValue);
        return nullptr;
    }

    static void _dealloc_PrintTicketValue(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketValue* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* PrintTicketValue_GetValueAsInteger(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketValue* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetValueAsInteger());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketValue_GetValueAsString(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketValue* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetValueAsString());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* PrintTicketValue_get_Type(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketValue* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Type());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_PrintTicketValue(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketValue>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_PrintTicketValue[] = {
        { "get_value_as_integer", (PyCFunction)PrintTicketValue_GetValueAsInteger, METH_VARARGS, nullptr },
        { "get_value_as_string", (PyCFunction)PrintTicketValue_GetValueAsString, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_PrintTicketValue, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_PrintTicketValue[] = {
        { const_cast<char*>("type"), (getter)PrintTicketValue_get_Type, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_PrintTicketValue[] = 
    {
        { Py_tp_new, _new_PrintTicketValue },
        { Py_tp_dealloc, _dealloc_PrintTicketValue },
        { Py_tp_methods, _methods_PrintTicketValue },
        { Py_tp_getset, _getset_PrintTicketValue },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_PrintTicketValue =
    {
        "_winrt_Windows_Graphics_Printing_PrintTicket.PrintTicketValue",
        sizeof(py::wrapper::Windows::Graphics::Printing::PrintTicket::PrintTicketValue),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_PrintTicketValue
    };

    // ----- WorkflowPrintTicket class --------------------
    constexpr const char* const _type_name_WorkflowPrintTicket = "WorkflowPrintTicket";

    static PyObject* _new_WorkflowPrintTicket(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WorkflowPrintTicket);
        return nullptr;
    }

    static void _dealloc_WorkflowPrintTicket(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WorkflowPrintTicket_GetCapabilities(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetCapabilities());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_GetFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetFeature(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_GetParameterInitializer(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                return py::convert(self->obj.GetParameterInitializer(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_MergeAndValidateTicket(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket>(args, 0);

                return py::convert(self->obj.MergeAndValidateTicket(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_NotifyXmlChangedAsync(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.NotifyXmlChangedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_SetParameterInitializerAsInteger(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 3)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);
                auto param2 = py::convert_to<int32_t>(args, 2);

                return py::convert(self->obj.SetParameterInitializerAsInteger(param0, param1, param2));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_SetParameterInitializerAsString(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 3)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);
                auto param2 = py::convert_to<winrt::hstring>(args, 2);

                return py::convert(self->obj.SetParameterInitializerAsString(param0, param1, param2));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_ValidateAsync(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ValidateAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_DocumentBindingFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentBindingFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_DocumentCollateFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentCollateFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_DocumentDuplexFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentDuplexFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_DocumentHolePunchFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentHolePunchFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_DocumentInputBinFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentInputBinFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_DocumentNUpFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentNUpFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_DocumentStapleFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DocumentStapleFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_JobPasscodeFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.JobPasscodeFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_Name(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Name());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_PageBorderlessFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageBorderlessFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_PageMediaSizeFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageMediaSizeFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_PageMediaTypeFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageMediaTypeFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_PageOrientationFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageOrientationFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_PageOutputColorFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageOutputColorFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_PageOutputQualityFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageOutputQualityFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_PageResolutionFeature(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PageResolutionFeature());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_XmlNamespace(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNamespace());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicket_get_XmlNode(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.XmlNode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WorkflowPrintTicket(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WorkflowPrintTicket[] = {
        { "get_capabilities", (PyCFunction)WorkflowPrintTicket_GetCapabilities, METH_VARARGS, nullptr },
        { "get_feature", (PyCFunction)WorkflowPrintTicket_GetFeature, METH_VARARGS, nullptr },
        { "get_parameter_initializer", (PyCFunction)WorkflowPrintTicket_GetParameterInitializer, METH_VARARGS, nullptr },
        { "merge_and_validate_ticket", (PyCFunction)WorkflowPrintTicket_MergeAndValidateTicket, METH_VARARGS, nullptr },
        { "notify_xml_changed_async", (PyCFunction)WorkflowPrintTicket_NotifyXmlChangedAsync, METH_VARARGS, nullptr },
        { "set_parameter_initializer_as_integer", (PyCFunction)WorkflowPrintTicket_SetParameterInitializerAsInteger, METH_VARARGS, nullptr },
        { "set_parameter_initializer_as_string", (PyCFunction)WorkflowPrintTicket_SetParameterInitializerAsString, METH_VARARGS, nullptr },
        { "validate_async", (PyCFunction)WorkflowPrintTicket_ValidateAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_WorkflowPrintTicket, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WorkflowPrintTicket[] = {
        { const_cast<char*>("document_binding_feature"), (getter)WorkflowPrintTicket_get_DocumentBindingFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_collate_feature"), (getter)WorkflowPrintTicket_get_DocumentCollateFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_duplex_feature"), (getter)WorkflowPrintTicket_get_DocumentDuplexFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_hole_punch_feature"), (getter)WorkflowPrintTicket_get_DocumentHolePunchFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_input_bin_feature"), (getter)WorkflowPrintTicket_get_DocumentInputBinFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_n_up_feature"), (getter)WorkflowPrintTicket_get_DocumentNUpFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("document_staple_feature"), (getter)WorkflowPrintTicket_get_DocumentStapleFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("job_passcode_feature"), (getter)WorkflowPrintTicket_get_JobPasscodeFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("name"), (getter)WorkflowPrintTicket_get_Name, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_borderless_feature"), (getter)WorkflowPrintTicket_get_PageBorderlessFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_media_size_feature"), (getter)WorkflowPrintTicket_get_PageMediaSizeFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_media_type_feature"), (getter)WorkflowPrintTicket_get_PageMediaTypeFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_orientation_feature"), (getter)WorkflowPrintTicket_get_PageOrientationFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_output_color_feature"), (getter)WorkflowPrintTicket_get_PageOutputColorFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_output_quality_feature"), (getter)WorkflowPrintTicket_get_PageOutputQualityFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("page_resolution_feature"), (getter)WorkflowPrintTicket_get_PageResolutionFeature, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_namespace"), (getter)WorkflowPrintTicket_get_XmlNamespace, nullptr, nullptr, nullptr },
        { const_cast<char*>("xml_node"), (getter)WorkflowPrintTicket_get_XmlNode, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WorkflowPrintTicket[] = 
    {
        { Py_tp_new, _new_WorkflowPrintTicket },
        { Py_tp_dealloc, _dealloc_WorkflowPrintTicket },
        { Py_tp_methods, _methods_WorkflowPrintTicket },
        { Py_tp_getset, _getset_WorkflowPrintTicket },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WorkflowPrintTicket =
    {
        "_winrt_Windows_Graphics_Printing_PrintTicket.WorkflowPrintTicket",
        sizeof(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WorkflowPrintTicket
    };

    // ----- WorkflowPrintTicketValidationResult class --------------------
    constexpr const char* const _type_name_WorkflowPrintTicketValidationResult = "WorkflowPrintTicketValidationResult";

    static PyObject* _new_WorkflowPrintTicketValidationResult(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_WorkflowPrintTicketValidationResult);
        return nullptr;
    }

    static void _dealloc_WorkflowPrintTicketValidationResult(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicketValidationResult* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* WorkflowPrintTicketValidationResult_get_ExtendedError(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicketValidationResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ExtendedError());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* WorkflowPrintTicketValidationResult_get_Validated(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicketValidationResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Validated());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_WorkflowPrintTicketValidationResult(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicketValidationResult>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_WorkflowPrintTicketValidationResult[] = {
        { "_from", (PyCFunction)_from_WorkflowPrintTicketValidationResult, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_WorkflowPrintTicketValidationResult[] = {
        { const_cast<char*>("extended_error"), (getter)WorkflowPrintTicketValidationResult_get_ExtendedError, nullptr, nullptr, nullptr },
        { const_cast<char*>("validated"), (getter)WorkflowPrintTicketValidationResult_get_Validated, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WorkflowPrintTicketValidationResult[] = 
    {
        { Py_tp_new, _new_WorkflowPrintTicketValidationResult },
        { Py_tp_dealloc, _dealloc_WorkflowPrintTicketValidationResult },
        { Py_tp_methods, _methods_WorkflowPrintTicketValidationResult },
        { Py_tp_getset, _getset_WorkflowPrintTicketValidationResult },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WorkflowPrintTicketValidationResult =
    {
        "_winrt_Windows_Graphics_Printing_PrintTicket.WorkflowPrintTicketValidationResult",
        sizeof(py::wrapper::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicketValidationResult),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WorkflowPrintTicketValidationResult
    };

    // ----- Windows.Graphics.Printing.PrintTicket Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketCapabilities>::python_type = py::register_python_type(module, _type_name_PrintTicketCapabilities, &_type_spec_PrintTicketCapabilities, bases.get());
            py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketFeature>::python_type = py::register_python_type(module, _type_name_PrintTicketFeature, &_type_spec_PrintTicketFeature, bases.get());
            py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketOption>::python_type = py::register_python_type(module, _type_name_PrintTicketOption, &_type_spec_PrintTicketOption, bases.get());
            py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterDefinition>::python_type = py::register_python_type(module, _type_name_PrintTicketParameterDefinition, &_type_spec_PrintTicketParameterDefinition, bases.get());
            py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketParameterInitializer>::python_type = py::register_python_type(module, _type_name_PrintTicketParameterInitializer, &_type_spec_PrintTicketParameterInitializer, bases.get());
            py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::PrintTicketValue>::python_type = py::register_python_type(module, _type_name_PrintTicketValue, &_type_spec_PrintTicketValue, bases.get());
            py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicket>::python_type = py::register_python_type(module, _type_name_WorkflowPrintTicket, &_type_spec_WorkflowPrintTicket, bases.get());
            py::winrt_type<winrt::Windows::Graphics::Printing::PrintTicket::WorkflowPrintTicketValidationResult>::python_type = py::register_python_type(module, _type_name_WorkflowPrintTicketValidationResult, &_type_spec_WorkflowPrintTicketValidationResult, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.Graphics.Printing.PrintTicket");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_Graphics_Printing_PrintTicket",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::Graphics::Printing::PrintTicket

PyMODINIT_FUNC
PyInit__winrt_Windows_Graphics_Printing_PrintTicket (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::Graphics::Printing::PrintTicket::module_def);
}
