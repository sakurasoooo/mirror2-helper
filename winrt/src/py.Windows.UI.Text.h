// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#pragma once

#include "pybase.h"

#if __has_include("py.Windows.Foundation.h")
#include "py.Windows.Foundation.h"
#endif

#if __has_include("py.Windows.Storage.Streams.h")
#include "py.Windows.Storage.Streams.h"
#endif

#if __has_include("py.Windows.UI.h")
#include "py.Windows.UI.h"
#endif

#include <winrt/Windows.UI.Text.h>

namespace py::proj::Windows::UI::Text
{}

namespace py::impl::Windows::UI::Text
{}

namespace py::wrapper::Windows::UI::Text
{
    using ContentLinkInfo = py::winrt_wrapper<winrt::Windows::UI::Text::ContentLinkInfo>;
    using FontWeights = py::winrt_wrapper<winrt::Windows::UI::Text::FontWeights>;
    using RichEditTextDocument = py::winrt_wrapper<winrt::Windows::UI::Text::RichEditTextDocument>;
    using RichEditTextRange = py::winrt_wrapper<winrt::Windows::UI::Text::RichEditTextRange>;
    using TextConstants = py::winrt_wrapper<winrt::Windows::UI::Text::TextConstants>;
    using ITextCharacterFormat = py::winrt_wrapper<winrt::Windows::UI::Text::ITextCharacterFormat>;
    using ITextDocument = py::winrt_wrapper<winrt::Windows::UI::Text::ITextDocument>;
    using ITextParagraphFormat = py::winrt_wrapper<winrt::Windows::UI::Text::ITextParagraphFormat>;
    using ITextRange = py::winrt_wrapper<winrt::Windows::UI::Text::ITextRange>;
    using ITextSelection = py::winrt_wrapper<winrt::Windows::UI::Text::ITextSelection>;
    using FontWeight = py::winrt_struct_wrapper<winrt::Windows::UI::Text::FontWeight>;
}

namespace py
{
    template<>
    struct winrt_type<winrt::Windows::UI::Text::ContentLinkInfo>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::FontWeights>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::RichEditTextDocument>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::RichEditTextRange>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::TextConstants>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::ITextCharacterFormat>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::ITextDocument>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::ITextParagraphFormat>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::ITextRange>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::ITextSelection>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct winrt_type<winrt::Windows::UI::Text::FontWeight>
    {
        static PyTypeObject* python_type;
        static PyTypeObject* get_python_type() { return python_type; }
    };

    template<>
    struct converter<winrt::Windows::UI::Text::FontWeight>
    {
        static PyObject* convert(winrt::Windows::UI::Text::FontWeight instance) noexcept;
        static winrt::Windows::UI::Text::FontWeight convert_to(PyObject* obj);
    };

}
