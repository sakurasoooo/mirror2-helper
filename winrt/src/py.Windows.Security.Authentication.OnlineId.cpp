// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.Security.Authentication.OnlineId.h"

PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicket>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticator>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemIdentity>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemTicketResult>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::SignOutUserOperation>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::UserIdentity>::python_type;

namespace py::cpp::Windows::Security::Authentication::OnlineId
{
    // ----- OnlineIdAuthenticator class --------------------
    constexpr const char* const _type_name_OnlineIdAuthenticator = "OnlineIdAuthenticator";

    static PyObject* _new_OnlineIdAuthenticator(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 0)
        {
            try
            {
                winrt::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator instance{  };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_OnlineIdAuthenticator(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* OnlineIdAuthenticator_AuthenticateUserAsync(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest>(args, 0);

                return py::convert(self->obj.AuthenticateUserAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest>>(args, 0);
                auto param1 = py::convert_to<winrt::Windows::Security::Authentication::OnlineId::CredentialPromptType>(args, 1);

                return py::convert(self->obj.AuthenticateUserAsync(param0, param1));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* OnlineIdAuthenticator_SignOutUserAsync(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.SignOutUserAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* OnlineIdAuthenticator_get_ApplicationId(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ApplicationId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int OnlineIdAuthenticator_put_ApplicationId(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::guid>(arg);

            self->obj.ApplicationId(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* OnlineIdAuthenticator_get_AuthenticatedSafeCustomerId(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.AuthenticatedSafeCustomerId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* OnlineIdAuthenticator_get_CanSignOut(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.CanSignOut());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_OnlineIdAuthenticator(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_OnlineIdAuthenticator[] = {
        { "authenticate_user_async", (PyCFunction)OnlineIdAuthenticator_AuthenticateUserAsync, METH_VARARGS, nullptr },
        { "sign_out_user_async", (PyCFunction)OnlineIdAuthenticator_SignOutUserAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_OnlineIdAuthenticator, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_OnlineIdAuthenticator[] = {
        { const_cast<char*>("application_id"), (getter)OnlineIdAuthenticator_get_ApplicationId, (setter)OnlineIdAuthenticator_put_ApplicationId, nullptr, nullptr },
        { const_cast<char*>("authenticated_safe_customer_id"), (getter)OnlineIdAuthenticator_get_AuthenticatedSafeCustomerId, nullptr, nullptr, nullptr },
        { const_cast<char*>("can_sign_out"), (getter)OnlineIdAuthenticator_get_CanSignOut, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_OnlineIdAuthenticator[] = 
    {
        { Py_tp_new, _new_OnlineIdAuthenticator },
        { Py_tp_dealloc, _dealloc_OnlineIdAuthenticator },
        { Py_tp_methods, _methods_OnlineIdAuthenticator },
        { Py_tp_getset, _getset_OnlineIdAuthenticator },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_OnlineIdAuthenticator =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.OnlineIdAuthenticator",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_OnlineIdAuthenticator
    };

    // ----- OnlineIdServiceTicket class --------------------
    constexpr const char* const _type_name_OnlineIdServiceTicket = "OnlineIdServiceTicket";

    static PyObject* _new_OnlineIdServiceTicket(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_OnlineIdServiceTicket);
        return nullptr;
    }

    static void _dealloc_OnlineIdServiceTicket(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicket* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* OnlineIdServiceTicket_get_ErrorCode(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ErrorCode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* OnlineIdServiceTicket_get_Request(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* OnlineIdServiceTicket_get_Value(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicket* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Value());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_OnlineIdServiceTicket(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicket>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_OnlineIdServiceTicket[] = {
        { "_from", (PyCFunction)_from_OnlineIdServiceTicket, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_OnlineIdServiceTicket[] = {
        { const_cast<char*>("error_code"), (getter)OnlineIdServiceTicket_get_ErrorCode, nullptr, nullptr, nullptr },
        { const_cast<char*>("request"), (getter)OnlineIdServiceTicket_get_Request, nullptr, nullptr, nullptr },
        { const_cast<char*>("value"), (getter)OnlineIdServiceTicket_get_Value, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_OnlineIdServiceTicket[] = 
    {
        { Py_tp_new, _new_OnlineIdServiceTicket },
        { Py_tp_dealloc, _dealloc_OnlineIdServiceTicket },
        { Py_tp_methods, _methods_OnlineIdServiceTicket },
        { Py_tp_getset, _getset_OnlineIdServiceTicket },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_OnlineIdServiceTicket =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.OnlineIdServiceTicket",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicket),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_OnlineIdServiceTicket
    };

    // ----- OnlineIdServiceTicketRequest class --------------------
    constexpr const char* const _type_name_OnlineIdServiceTicketRequest = "OnlineIdServiceTicketRequest";

    static PyObject* _new_OnlineIdServiceTicketRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 2)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);
                auto param1 = py::convert_to<winrt::hstring>(args, 1);

                winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest instance{ param0, param1 };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest instance{ param0 };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_OnlineIdServiceTicketRequest(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* OnlineIdServiceTicketRequest_get_Policy(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Policy());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* OnlineIdServiceTicketRequest_get_Service(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Service());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_OnlineIdServiceTicketRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_OnlineIdServiceTicketRequest[] = {
        { "_from", (PyCFunction)_from_OnlineIdServiceTicketRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_OnlineIdServiceTicketRequest[] = {
        { const_cast<char*>("policy"), (getter)OnlineIdServiceTicketRequest_get_Policy, nullptr, nullptr, nullptr },
        { const_cast<char*>("service"), (getter)OnlineIdServiceTicketRequest_get_Service, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_OnlineIdServiceTicketRequest[] = 
    {
        { Py_tp_new, _new_OnlineIdServiceTicketRequest },
        { Py_tp_dealloc, _dealloc_OnlineIdServiceTicketRequest },
        { Py_tp_methods, _methods_OnlineIdServiceTicketRequest },
        { Py_tp_getset, _getset_OnlineIdServiceTicketRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_OnlineIdServiceTicketRequest =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.OnlineIdServiceTicketRequest",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_OnlineIdServiceTicketRequest
    };

    // ----- OnlineIdSystemAuthenticator class --------------------
    constexpr const char* const _type_name_OnlineIdSystemAuthenticator = "OnlineIdSystemAuthenticator";

    static PyObject* _new_OnlineIdSystemAuthenticator(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_OnlineIdSystemAuthenticator);
        return nullptr;
    }

    static PyObject* OnlineIdSystemAuthenticator_GetForUser(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::System::User>(args, 0);

                return py::convert(winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticator::GetForUser(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* OnlineIdSystemAuthenticator_get_Default(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticator::Default());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_OnlineIdSystemAuthenticator[] = {
        { "get_for_user", (PyCFunction)OnlineIdSystemAuthenticator_GetForUser, METH_VARARGS | METH_STATIC, nullptr },
        { "get_default", (PyCFunction)OnlineIdSystemAuthenticator_get_Default, METH_NOARGS | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_OnlineIdSystemAuthenticator[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_OnlineIdSystemAuthenticator[] = 
    {
        { Py_tp_new, _new_OnlineIdSystemAuthenticator },
        { Py_tp_methods, _methods_OnlineIdSystemAuthenticator },
        { Py_tp_getset, _getset_OnlineIdSystemAuthenticator },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_OnlineIdSystemAuthenticator =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.OnlineIdSystemAuthenticator",
        0,
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_OnlineIdSystemAuthenticator
    };

    // ----- OnlineIdSystemAuthenticatorForUser class --------------------
    constexpr const char* const _type_name_OnlineIdSystemAuthenticatorForUser = "OnlineIdSystemAuthenticatorForUser";

    static PyObject* _new_OnlineIdSystemAuthenticatorForUser(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_OnlineIdSystemAuthenticatorForUser);
        return nullptr;
    }

    static void _dealloc_OnlineIdSystemAuthenticatorForUser(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* OnlineIdSystemAuthenticatorForUser_GetTicketAsync(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest>(args, 0);

                return py::convert(self->obj.GetTicketAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* OnlineIdSystemAuthenticatorForUser_get_ApplicationId(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ApplicationId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int OnlineIdSystemAuthenticatorForUser_put_ApplicationId(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::guid>(arg);

            self->obj.ApplicationId(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* OnlineIdSystemAuthenticatorForUser_get_User(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.User());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_OnlineIdSystemAuthenticatorForUser(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_OnlineIdSystemAuthenticatorForUser[] = {
        { "get_ticket_async", (PyCFunction)OnlineIdSystemAuthenticatorForUser_GetTicketAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_OnlineIdSystemAuthenticatorForUser, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_OnlineIdSystemAuthenticatorForUser[] = {
        { const_cast<char*>("application_id"), (getter)OnlineIdSystemAuthenticatorForUser_get_ApplicationId, (setter)OnlineIdSystemAuthenticatorForUser_put_ApplicationId, nullptr, nullptr },
        { const_cast<char*>("user"), (getter)OnlineIdSystemAuthenticatorForUser_get_User, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_OnlineIdSystemAuthenticatorForUser[] = 
    {
        { Py_tp_new, _new_OnlineIdSystemAuthenticatorForUser },
        { Py_tp_dealloc, _dealloc_OnlineIdSystemAuthenticatorForUser },
        { Py_tp_methods, _methods_OnlineIdSystemAuthenticatorForUser },
        { Py_tp_getset, _getset_OnlineIdSystemAuthenticatorForUser },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_OnlineIdSystemAuthenticatorForUser =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.OnlineIdSystemAuthenticatorForUser",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_OnlineIdSystemAuthenticatorForUser
    };

    // ----- OnlineIdSystemIdentity class --------------------
    constexpr const char* const _type_name_OnlineIdSystemIdentity = "OnlineIdSystemIdentity";

    static PyObject* _new_OnlineIdSystemIdentity(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_OnlineIdSystemIdentity);
        return nullptr;
    }

    static void _dealloc_OnlineIdSystemIdentity(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemIdentity* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* OnlineIdSystemIdentity_get_Id(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Id());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* OnlineIdSystemIdentity_get_Ticket(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Ticket());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_OnlineIdSystemIdentity(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemIdentity>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_OnlineIdSystemIdentity[] = {
        { "_from", (PyCFunction)_from_OnlineIdSystemIdentity, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_OnlineIdSystemIdentity[] = {
        { const_cast<char*>("id"), (getter)OnlineIdSystemIdentity_get_Id, nullptr, nullptr, nullptr },
        { const_cast<char*>("ticket"), (getter)OnlineIdSystemIdentity_get_Ticket, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_OnlineIdSystemIdentity[] = 
    {
        { Py_tp_new, _new_OnlineIdSystemIdentity },
        { Py_tp_dealloc, _dealloc_OnlineIdSystemIdentity },
        { Py_tp_methods, _methods_OnlineIdSystemIdentity },
        { Py_tp_getset, _getset_OnlineIdSystemIdentity },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_OnlineIdSystemIdentity =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.OnlineIdSystemIdentity",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemIdentity),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_OnlineIdSystemIdentity
    };

    // ----- OnlineIdSystemTicketResult class --------------------
    constexpr const char* const _type_name_OnlineIdSystemTicketResult = "OnlineIdSystemTicketResult";

    static PyObject* _new_OnlineIdSystemTicketResult(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_OnlineIdSystemTicketResult);
        return nullptr;
    }

    static void _dealloc_OnlineIdSystemTicketResult(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemTicketResult* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* OnlineIdSystemTicketResult_get_ExtendedError(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemTicketResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ExtendedError());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* OnlineIdSystemTicketResult_get_Identity(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemTicketResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Identity());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* OnlineIdSystemTicketResult_get_Status(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemTicketResult* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Status());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_OnlineIdSystemTicketResult(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemTicketResult>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_OnlineIdSystemTicketResult[] = {
        { "_from", (PyCFunction)_from_OnlineIdSystemTicketResult, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_OnlineIdSystemTicketResult[] = {
        { const_cast<char*>("extended_error"), (getter)OnlineIdSystemTicketResult_get_ExtendedError, nullptr, nullptr, nullptr },
        { const_cast<char*>("identity"), (getter)OnlineIdSystemTicketResult_get_Identity, nullptr, nullptr, nullptr },
        { const_cast<char*>("status"), (getter)OnlineIdSystemTicketResult_get_Status, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_OnlineIdSystemTicketResult[] = 
    {
        { Py_tp_new, _new_OnlineIdSystemTicketResult },
        { Py_tp_dealloc, _dealloc_OnlineIdSystemTicketResult },
        { Py_tp_methods, _methods_OnlineIdSystemTicketResult },
        { Py_tp_getset, _getset_OnlineIdSystemTicketResult },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_OnlineIdSystemTicketResult =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.OnlineIdSystemTicketResult",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::OnlineIdSystemTicketResult),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_OnlineIdSystemTicketResult
    };

    // ----- SignOutUserOperation class --------------------
    constexpr const char* const _type_name_SignOutUserOperation = "SignOutUserOperation";

    static PyObject* _new_SignOutUserOperation(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SignOutUserOperation);
        return nullptr;
    }

    static void _dealloc_SignOutUserOperation(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SignOutUserOperation_Cancel(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Cancel();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SignOutUserOperation_Close(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Close();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SignOutUserOperation_GetResults(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.GetResults();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SignOutUserOperation_get_ErrorCode(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ErrorCode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SignOutUserOperation_get_Id(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Id());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SignOutUserOperation_get_Status(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Status());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SignOutUserOperation_get_Completed(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Completed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SignOutUserOperation_put_Completed(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::AsyncActionCompletedHandler>(arg);

            self->obj.Completed(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* _from_SignOutUserOperation(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::SignOutUserOperation>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SignOutUserOperation[] = {
        { "cancel", (PyCFunction)SignOutUserOperation_Cancel, METH_VARARGS, nullptr },
        { "close", (PyCFunction)SignOutUserOperation_Close, METH_VARARGS, nullptr },
        { "get_results", (PyCFunction)SignOutUserOperation_GetResults, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SignOutUserOperation, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SignOutUserOperation[] = {
        { const_cast<char*>("error_code"), (getter)SignOutUserOperation_get_ErrorCode, nullptr, nullptr, nullptr },
        { const_cast<char*>("id"), (getter)SignOutUserOperation_get_Id, nullptr, nullptr, nullptr },
        { const_cast<char*>("status"), (getter)SignOutUserOperation_get_Status, nullptr, nullptr, nullptr },
        { const_cast<char*>("completed"), (getter)SignOutUserOperation_get_Completed, (setter)SignOutUserOperation_put_Completed, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SignOutUserOperation[] = 
    {
        { Py_tp_new, _new_SignOutUserOperation },
        { Py_tp_dealloc, _dealloc_SignOutUserOperation },
        { Py_tp_methods, _methods_SignOutUserOperation },
        { Py_tp_getset, _getset_SignOutUserOperation },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SignOutUserOperation =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.SignOutUserOperation",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::SignOutUserOperation),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SignOutUserOperation
    };

    // ----- UserAuthenticationOperation class --------------------
    constexpr const char* const _type_name_UserAuthenticationOperation = "UserAuthenticationOperation";

    static PyObject* _new_UserAuthenticationOperation(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserAuthenticationOperation);
        return nullptr;
    }

    static void _dealloc_UserAuthenticationOperation(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserAuthenticationOperation_Cancel(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Cancel();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserAuthenticationOperation_Close(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Close();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserAuthenticationOperation_GetResults(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetResults());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserAuthenticationOperation_get_ErrorCode(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ErrorCode());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserAuthenticationOperation_get_Id(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Id());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserAuthenticationOperation_get_Status(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Status());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserAuthenticationOperation_get_Completed(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Completed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int UserAuthenticationOperation_put_Completed(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::AsyncOperationCompletedHandler<winrt::Windows::Security::Authentication::OnlineId::UserIdentity>>(arg);

            self->obj.Completed(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* _from_UserAuthenticationOperation(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserAuthenticationOperation[] = {
        { "cancel", (PyCFunction)UserAuthenticationOperation_Cancel, METH_VARARGS, nullptr },
        { "close", (PyCFunction)UserAuthenticationOperation_Close, METH_VARARGS, nullptr },
        { "get_results", (PyCFunction)UserAuthenticationOperation_GetResults, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserAuthenticationOperation, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserAuthenticationOperation[] = {
        { const_cast<char*>("error_code"), (getter)UserAuthenticationOperation_get_ErrorCode, nullptr, nullptr, nullptr },
        { const_cast<char*>("id"), (getter)UserAuthenticationOperation_get_Id, nullptr, nullptr, nullptr },
        { const_cast<char*>("status"), (getter)UserAuthenticationOperation_get_Status, nullptr, nullptr, nullptr },
        { const_cast<char*>("completed"), (getter)UserAuthenticationOperation_get_Completed, (setter)UserAuthenticationOperation_put_Completed, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserAuthenticationOperation[] = 
    {
        { Py_tp_new, _new_UserAuthenticationOperation },
        { Py_tp_dealloc, _dealloc_UserAuthenticationOperation },
        { Py_tp_methods, _methods_UserAuthenticationOperation },
        { Py_tp_getset, _getset_UserAuthenticationOperation },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserAuthenticationOperation =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.UserAuthenticationOperation",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserAuthenticationOperation
    };

    // ----- UserIdentity class --------------------
    constexpr const char* const _type_name_UserIdentity = "UserIdentity";

    static PyObject* _new_UserIdentity(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserIdentity);
        return nullptr;
    }

    static void _dealloc_UserIdentity(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserIdentity_get_FirstName(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.FirstName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserIdentity_get_Id(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Id());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserIdentity_get_IsBetaAccount(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsBetaAccount());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserIdentity_get_IsConfirmedPC(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.IsConfirmedPC());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserIdentity_get_LastName(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.LastName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserIdentity_get_SafeCustomerId(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SafeCustomerId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserIdentity_get_SignInName(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SignInName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserIdentity_get_Tickets(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Tickets());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserIdentity(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::Security::Authentication::OnlineId::UserIdentity>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserIdentity[] = {
        { "_from", (PyCFunction)_from_UserIdentity, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserIdentity[] = {
        { const_cast<char*>("first_name"), (getter)UserIdentity_get_FirstName, nullptr, nullptr, nullptr },
        { const_cast<char*>("id"), (getter)UserIdentity_get_Id, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_beta_account"), (getter)UserIdentity_get_IsBetaAccount, nullptr, nullptr, nullptr },
        { const_cast<char*>("is_confirmed_p_c"), (getter)UserIdentity_get_IsConfirmedPC, nullptr, nullptr, nullptr },
        { const_cast<char*>("last_name"), (getter)UserIdentity_get_LastName, nullptr, nullptr, nullptr },
        { const_cast<char*>("safe_customer_id"), (getter)UserIdentity_get_SafeCustomerId, nullptr, nullptr, nullptr },
        { const_cast<char*>("sign_in_name"), (getter)UserIdentity_get_SignInName, nullptr, nullptr, nullptr },
        { const_cast<char*>("tickets"), (getter)UserIdentity_get_Tickets, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserIdentity[] = 
    {
        { Py_tp_new, _new_UserIdentity },
        { Py_tp_dealloc, _dealloc_UserIdentity },
        { Py_tp_methods, _methods_UserIdentity },
        { Py_tp_getset, _getset_UserIdentity },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserIdentity =
    {
        "_winrt_Windows_Security_Authentication_OnlineId.UserIdentity",
        sizeof(py::wrapper::Windows::Security::Authentication::OnlineId::UserIdentity),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserIdentity
    };

    // ----- Windows.Security.Authentication.OnlineId Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdAuthenticator>::python_type = py::register_python_type(module, _type_name_OnlineIdAuthenticator, &_type_spec_OnlineIdAuthenticator, bases.get());
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicket>::python_type = py::register_python_type(module, _type_name_OnlineIdServiceTicket, &_type_spec_OnlineIdServiceTicket, bases.get());
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdServiceTicketRequest>::python_type = py::register_python_type(module, _type_name_OnlineIdServiceTicketRequest, &_type_spec_OnlineIdServiceTicketRequest, bases.get());
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticator>::python_type = py::register_python_type(module, _type_name_OnlineIdSystemAuthenticator, &_type_spec_OnlineIdSystemAuthenticator, nullptr);
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemAuthenticatorForUser>::python_type = py::register_python_type(module, _type_name_OnlineIdSystemAuthenticatorForUser, &_type_spec_OnlineIdSystemAuthenticatorForUser, bases.get());
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemIdentity>::python_type = py::register_python_type(module, _type_name_OnlineIdSystemIdentity, &_type_spec_OnlineIdSystemIdentity, bases.get());
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::OnlineIdSystemTicketResult>::python_type = py::register_python_type(module, _type_name_OnlineIdSystemTicketResult, &_type_spec_OnlineIdSystemTicketResult, bases.get());
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::SignOutUserOperation>::python_type = py::register_python_type(module, _type_name_SignOutUserOperation, &_type_spec_SignOutUserOperation, bases.get());
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::UserAuthenticationOperation>::python_type = py::register_python_type(module, _type_name_UserAuthenticationOperation, &_type_spec_UserAuthenticationOperation, bases.get());
            py::winrt_type<winrt::Windows::Security::Authentication::OnlineId::UserIdentity>::python_type = py::register_python_type(module, _type_name_UserIdentity, &_type_spec_UserIdentity, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.Security.Authentication.OnlineId");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_Security_Authentication_OnlineId",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::Security::Authentication::OnlineId

PyMODINIT_FUNC
PyInit__winrt_Windows_Security_Authentication_OnlineId (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::Security::Authentication::OnlineId::module_def);
}
