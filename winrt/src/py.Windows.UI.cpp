// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.UI.h"

PyTypeObject* py::winrt_type<winrt::Windows::UI::ColorHelper>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Colors>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::UIContentRoot>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::UIContext>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::Color>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::UI::WindowId>::python_type;

PyObject* py::converter<winrt::Windows::UI::Color>::convert(winrt::Windows::UI::Color instance) noexcept
{
    return py::wrap_struct(instance, py::get_python_type<winrt::Windows::UI::Color>());
}
winrt::Windows::UI::Color py::converter<winrt::Windows::UI::Color>::convert_to(PyObject* obj)
{
    throw_if_pyobj_null(obj);

    if (Py_TYPE(obj) == py::get_python_type<winrt::Windows::UI::Color>())
    {
        return reinterpret_cast<py::winrt_struct_wrapper<winrt::Windows::UI::Color>*>(obj)->obj;
    }

    if (!PyDict_Check(obj))
    {
        throw winrt::hresult_invalid_argument();
    }

    winrt::Windows::UI::Color return_value{};

    PyObject* py_A = PyDict_GetItemString(obj, "a");
    if (!py_A) { throw winrt::hresult_invalid_argument(); }
    return_value.A = converter<uint8_t>::convert_to(py_A);

    PyObject* py_R = PyDict_GetItemString(obj, "r");
    if (!py_R) { throw winrt::hresult_invalid_argument(); }
    return_value.R = converter<uint8_t>::convert_to(py_R);

    PyObject* py_G = PyDict_GetItemString(obj, "g");
    if (!py_G) { throw winrt::hresult_invalid_argument(); }
    return_value.G = converter<uint8_t>::convert_to(py_G);

    PyObject* py_B = PyDict_GetItemString(obj, "b");
    if (!py_B) { throw winrt::hresult_invalid_argument(); }
    return_value.B = converter<uint8_t>::convert_to(py_B);

    return return_value;
}

PyObject* py::converter<winrt::Windows::UI::WindowId>::convert(winrt::Windows::UI::WindowId instance) noexcept
{
    return py::wrap_struct(instance, py::get_python_type<winrt::Windows::UI::WindowId>());
}
winrt::Windows::UI::WindowId py::converter<winrt::Windows::UI::WindowId>::convert_to(PyObject* obj)
{
    throw_if_pyobj_null(obj);

    if (Py_TYPE(obj) == py::get_python_type<winrt::Windows::UI::WindowId>())
    {
        return reinterpret_cast<py::winrt_struct_wrapper<winrt::Windows::UI::WindowId>*>(obj)->obj;
    }

    if (!PyDict_Check(obj))
    {
        throw winrt::hresult_invalid_argument();
    }

    winrt::Windows::UI::WindowId return_value{};

    PyObject* py_Value = PyDict_GetItemString(obj, "value");
    if (!py_Value) { throw winrt::hresult_invalid_argument(); }
    return_value.Value = converter<uint64_t>::convert_to(py_Value);

    return return_value;
}

namespace py::cpp::Windows::UI
{
    // ----- ColorHelper class --------------------
    constexpr const char* const _type_name_ColorHelper = "ColorHelper";

    static PyObject* _new_ColorHelper(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_ColorHelper);
        return nullptr;
    }

    static void _dealloc_ColorHelper(py::wrapper::Windows::UI::ColorHelper* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* ColorHelper_FromArgb(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 4)
        {
            try
            {
                auto param0 = py::convert_to<uint8_t>(args, 0);
                auto param1 = py::convert_to<uint8_t>(args, 1);
                auto param2 = py::convert_to<uint8_t>(args, 2);
                auto param3 = py::convert_to<uint8_t>(args, 3);

                return py::convert(winrt::Windows::UI::ColorHelper::FromArgb(param0, param1, param2, param3));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* ColorHelper_ToDisplayName(PyObject* /*unused*/, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::UI::Color>(args, 0);

                return py::convert(winrt::Windows::UI::ColorHelper::ToDisplayName(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* _from_ColorHelper(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::ColorHelper>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_ColorHelper[] = {
        { "from_argb", (PyCFunction)ColorHelper_FromArgb, METH_VARARGS | METH_STATIC, nullptr },
        { "to_display_name", (PyCFunction)ColorHelper_ToDisplayName, METH_VARARGS | METH_STATIC, nullptr },
        { "_from", (PyCFunction)_from_ColorHelper, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_ColorHelper[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_ColorHelper[] = 
    {
        { Py_tp_new, _new_ColorHelper },
        { Py_tp_dealloc, _dealloc_ColorHelper },
        { Py_tp_methods, _methods_ColorHelper },
        { Py_tp_getset, _getset_ColorHelper },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_ColorHelper =
    {
        "_winrt_Windows_UI.ColorHelper",
        sizeof(py::wrapper::Windows::UI::ColorHelper),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_ColorHelper
    };

    // ----- Colors class --------------------
    constexpr const char* const _type_name_Colors = "Colors";

    static PyObject* _new_Colors(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_Colors);
        return nullptr;
    }

    static void _dealloc_Colors(py::wrapper::Windows::UI::Colors* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* Colors_get_AliceBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::AliceBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_AntiqueWhite(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::AntiqueWhite());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Aqua(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Aqua());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Aquamarine(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Aquamarine());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Azure(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Azure());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Beige(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Beige());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Bisque(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Bisque());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Black(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Black());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_BlanchedAlmond(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::BlanchedAlmond());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Blue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Blue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_BlueViolet(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::BlueViolet());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Brown(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Brown());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_BurlyWood(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::BurlyWood());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_CadetBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::CadetBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Chartreuse(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Chartreuse());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Chocolate(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Chocolate());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Coral(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Coral());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_CornflowerBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::CornflowerBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Cornsilk(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Cornsilk());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Crimson(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Crimson());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Cyan(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Cyan());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkCyan(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkCyan());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkGoldenrod(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkGoldenrod());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkGray(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkGray());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkKhaki(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkKhaki());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkMagenta(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkMagenta());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkOliveGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkOliveGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkOrange(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkOrange());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkOrchid(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkOrchid());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkRed(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkRed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkSalmon(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkSalmon());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkSeaGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkSeaGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkSlateBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkSlateBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkSlateGray(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkSlateGray());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkTurquoise(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkTurquoise());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DarkViolet(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DarkViolet());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DeepPink(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DeepPink());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DeepSkyBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DeepSkyBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DimGray(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DimGray());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_DodgerBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::DodgerBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Firebrick(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Firebrick());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_FloralWhite(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::FloralWhite());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_ForestGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::ForestGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Fuchsia(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Fuchsia());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Gainsboro(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Gainsboro());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_GhostWhite(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::GhostWhite());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Gold(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Gold());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Goldenrod(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Goldenrod());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Gray(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Gray());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Green(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Green());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_GreenYellow(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::GreenYellow());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Honeydew(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Honeydew());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_HotPink(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::HotPink());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_IndianRed(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::IndianRed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Indigo(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Indigo());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Ivory(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Ivory());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Khaki(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Khaki());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Lavender(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Lavender());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LavenderBlush(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LavenderBlush());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LawnGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LawnGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LemonChiffon(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LemonChiffon());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightCoral(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightCoral());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightCyan(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightCyan());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightGoldenrodYellow(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightGoldenrodYellow());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightGray(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightGray());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightPink(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightPink());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightSalmon(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightSalmon());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightSeaGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightSeaGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightSkyBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightSkyBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightSlateGray(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightSlateGray());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightSteelBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightSteelBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LightYellow(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LightYellow());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Lime(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Lime());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_LimeGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::LimeGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Linen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Linen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Magenta(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Magenta());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Maroon(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Maroon());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumAquamarine(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumAquamarine());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumOrchid(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumOrchid());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumPurple(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumPurple());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumSeaGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumSeaGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumSlateBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumSlateBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumSpringGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumSpringGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumTurquoise(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumTurquoise());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MediumVioletRed(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MediumVioletRed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MidnightBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MidnightBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MintCream(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MintCream());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_MistyRose(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::MistyRose());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Moccasin(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Moccasin());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_NavajoWhite(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::NavajoWhite());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Navy(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Navy());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_OldLace(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::OldLace());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Olive(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Olive());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_OliveDrab(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::OliveDrab());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Orange(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Orange());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_OrangeRed(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::OrangeRed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Orchid(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Orchid());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_PaleGoldenrod(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::PaleGoldenrod());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_PaleGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::PaleGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_PaleTurquoise(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::PaleTurquoise());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_PaleVioletRed(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::PaleVioletRed());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_PapayaWhip(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::PapayaWhip());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_PeachPuff(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::PeachPuff());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Peru(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Peru());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Pink(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Pink());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Plum(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Plum());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_PowderBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::PowderBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Purple(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Purple());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Red(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Red());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_RosyBrown(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::RosyBrown());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_RoyalBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::RoyalBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SaddleBrown(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SaddleBrown());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Salmon(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Salmon());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SandyBrown(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SandyBrown());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SeaGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SeaGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SeaShell(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SeaShell());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Sienna(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Sienna());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Silver(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Silver());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SkyBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SkyBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SlateBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SlateBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SlateGray(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SlateGray());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Snow(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Snow());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SpringGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SpringGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_SteelBlue(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::SteelBlue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Tan(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Tan());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Teal(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Teal());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Thistle(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Thistle());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Tomato(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Tomato());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Transparent(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Transparent());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Turquoise(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Turquoise());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Violet(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Violet());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Wheat(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Wheat());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_White(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::White());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_WhiteSmoke(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::WhiteSmoke());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_Yellow(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::Yellow());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* Colors_get_YellowGreen(PyObject* /*unused*/, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(winrt::Windows::UI::Colors::YellowGreen());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_Colors(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::Colors>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_Colors[] = {
        { "get_alice_blue", (PyCFunction)Colors_get_AliceBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_antique_white", (PyCFunction)Colors_get_AntiqueWhite, METH_NOARGS | METH_STATIC, nullptr },
        { "get_aqua", (PyCFunction)Colors_get_Aqua, METH_NOARGS | METH_STATIC, nullptr },
        { "get_aquamarine", (PyCFunction)Colors_get_Aquamarine, METH_NOARGS | METH_STATIC, nullptr },
        { "get_azure", (PyCFunction)Colors_get_Azure, METH_NOARGS | METH_STATIC, nullptr },
        { "get_beige", (PyCFunction)Colors_get_Beige, METH_NOARGS | METH_STATIC, nullptr },
        { "get_bisque", (PyCFunction)Colors_get_Bisque, METH_NOARGS | METH_STATIC, nullptr },
        { "get_black", (PyCFunction)Colors_get_Black, METH_NOARGS | METH_STATIC, nullptr },
        { "get_blanched_almond", (PyCFunction)Colors_get_BlanchedAlmond, METH_NOARGS | METH_STATIC, nullptr },
        { "get_blue", (PyCFunction)Colors_get_Blue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_blue_violet", (PyCFunction)Colors_get_BlueViolet, METH_NOARGS | METH_STATIC, nullptr },
        { "get_brown", (PyCFunction)Colors_get_Brown, METH_NOARGS | METH_STATIC, nullptr },
        { "get_burly_wood", (PyCFunction)Colors_get_BurlyWood, METH_NOARGS | METH_STATIC, nullptr },
        { "get_cadet_blue", (PyCFunction)Colors_get_CadetBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_chartreuse", (PyCFunction)Colors_get_Chartreuse, METH_NOARGS | METH_STATIC, nullptr },
        { "get_chocolate", (PyCFunction)Colors_get_Chocolate, METH_NOARGS | METH_STATIC, nullptr },
        { "get_coral", (PyCFunction)Colors_get_Coral, METH_NOARGS | METH_STATIC, nullptr },
        { "get_cornflower_blue", (PyCFunction)Colors_get_CornflowerBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_cornsilk", (PyCFunction)Colors_get_Cornsilk, METH_NOARGS | METH_STATIC, nullptr },
        { "get_crimson", (PyCFunction)Colors_get_Crimson, METH_NOARGS | METH_STATIC, nullptr },
        { "get_cyan", (PyCFunction)Colors_get_Cyan, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_blue", (PyCFunction)Colors_get_DarkBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_cyan", (PyCFunction)Colors_get_DarkCyan, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_goldenrod", (PyCFunction)Colors_get_DarkGoldenrod, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_gray", (PyCFunction)Colors_get_DarkGray, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_green", (PyCFunction)Colors_get_DarkGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_khaki", (PyCFunction)Colors_get_DarkKhaki, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_magenta", (PyCFunction)Colors_get_DarkMagenta, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_olive_green", (PyCFunction)Colors_get_DarkOliveGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_orange", (PyCFunction)Colors_get_DarkOrange, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_orchid", (PyCFunction)Colors_get_DarkOrchid, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_red", (PyCFunction)Colors_get_DarkRed, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_salmon", (PyCFunction)Colors_get_DarkSalmon, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_sea_green", (PyCFunction)Colors_get_DarkSeaGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_slate_blue", (PyCFunction)Colors_get_DarkSlateBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_slate_gray", (PyCFunction)Colors_get_DarkSlateGray, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_turquoise", (PyCFunction)Colors_get_DarkTurquoise, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dark_violet", (PyCFunction)Colors_get_DarkViolet, METH_NOARGS | METH_STATIC, nullptr },
        { "get_deep_pink", (PyCFunction)Colors_get_DeepPink, METH_NOARGS | METH_STATIC, nullptr },
        { "get_deep_sky_blue", (PyCFunction)Colors_get_DeepSkyBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dim_gray", (PyCFunction)Colors_get_DimGray, METH_NOARGS | METH_STATIC, nullptr },
        { "get_dodger_blue", (PyCFunction)Colors_get_DodgerBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_firebrick", (PyCFunction)Colors_get_Firebrick, METH_NOARGS | METH_STATIC, nullptr },
        { "get_floral_white", (PyCFunction)Colors_get_FloralWhite, METH_NOARGS | METH_STATIC, nullptr },
        { "get_forest_green", (PyCFunction)Colors_get_ForestGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_fuchsia", (PyCFunction)Colors_get_Fuchsia, METH_NOARGS | METH_STATIC, nullptr },
        { "get_gainsboro", (PyCFunction)Colors_get_Gainsboro, METH_NOARGS | METH_STATIC, nullptr },
        { "get_ghost_white", (PyCFunction)Colors_get_GhostWhite, METH_NOARGS | METH_STATIC, nullptr },
        { "get_gold", (PyCFunction)Colors_get_Gold, METH_NOARGS | METH_STATIC, nullptr },
        { "get_goldenrod", (PyCFunction)Colors_get_Goldenrod, METH_NOARGS | METH_STATIC, nullptr },
        { "get_gray", (PyCFunction)Colors_get_Gray, METH_NOARGS | METH_STATIC, nullptr },
        { "get_green", (PyCFunction)Colors_get_Green, METH_NOARGS | METH_STATIC, nullptr },
        { "get_green_yellow", (PyCFunction)Colors_get_GreenYellow, METH_NOARGS | METH_STATIC, nullptr },
        { "get_honeydew", (PyCFunction)Colors_get_Honeydew, METH_NOARGS | METH_STATIC, nullptr },
        { "get_hot_pink", (PyCFunction)Colors_get_HotPink, METH_NOARGS | METH_STATIC, nullptr },
        { "get_indian_red", (PyCFunction)Colors_get_IndianRed, METH_NOARGS | METH_STATIC, nullptr },
        { "get_indigo", (PyCFunction)Colors_get_Indigo, METH_NOARGS | METH_STATIC, nullptr },
        { "get_ivory", (PyCFunction)Colors_get_Ivory, METH_NOARGS | METH_STATIC, nullptr },
        { "get_khaki", (PyCFunction)Colors_get_Khaki, METH_NOARGS | METH_STATIC, nullptr },
        { "get_lavender", (PyCFunction)Colors_get_Lavender, METH_NOARGS | METH_STATIC, nullptr },
        { "get_lavender_blush", (PyCFunction)Colors_get_LavenderBlush, METH_NOARGS | METH_STATIC, nullptr },
        { "get_lawn_green", (PyCFunction)Colors_get_LawnGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_lemon_chiffon", (PyCFunction)Colors_get_LemonChiffon, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_blue", (PyCFunction)Colors_get_LightBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_coral", (PyCFunction)Colors_get_LightCoral, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_cyan", (PyCFunction)Colors_get_LightCyan, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_goldenrod_yellow", (PyCFunction)Colors_get_LightGoldenrodYellow, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_gray", (PyCFunction)Colors_get_LightGray, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_green", (PyCFunction)Colors_get_LightGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_pink", (PyCFunction)Colors_get_LightPink, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_salmon", (PyCFunction)Colors_get_LightSalmon, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_sea_green", (PyCFunction)Colors_get_LightSeaGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_sky_blue", (PyCFunction)Colors_get_LightSkyBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_slate_gray", (PyCFunction)Colors_get_LightSlateGray, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_steel_blue", (PyCFunction)Colors_get_LightSteelBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_light_yellow", (PyCFunction)Colors_get_LightYellow, METH_NOARGS | METH_STATIC, nullptr },
        { "get_lime", (PyCFunction)Colors_get_Lime, METH_NOARGS | METH_STATIC, nullptr },
        { "get_lime_green", (PyCFunction)Colors_get_LimeGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_linen", (PyCFunction)Colors_get_Linen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_magenta", (PyCFunction)Colors_get_Magenta, METH_NOARGS | METH_STATIC, nullptr },
        { "get_maroon", (PyCFunction)Colors_get_Maroon, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_aquamarine", (PyCFunction)Colors_get_MediumAquamarine, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_blue", (PyCFunction)Colors_get_MediumBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_orchid", (PyCFunction)Colors_get_MediumOrchid, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_purple", (PyCFunction)Colors_get_MediumPurple, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_sea_green", (PyCFunction)Colors_get_MediumSeaGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_slate_blue", (PyCFunction)Colors_get_MediumSlateBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_spring_green", (PyCFunction)Colors_get_MediumSpringGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_turquoise", (PyCFunction)Colors_get_MediumTurquoise, METH_NOARGS | METH_STATIC, nullptr },
        { "get_medium_violet_red", (PyCFunction)Colors_get_MediumVioletRed, METH_NOARGS | METH_STATIC, nullptr },
        { "get_midnight_blue", (PyCFunction)Colors_get_MidnightBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_mint_cream", (PyCFunction)Colors_get_MintCream, METH_NOARGS | METH_STATIC, nullptr },
        { "get_misty_rose", (PyCFunction)Colors_get_MistyRose, METH_NOARGS | METH_STATIC, nullptr },
        { "get_moccasin", (PyCFunction)Colors_get_Moccasin, METH_NOARGS | METH_STATIC, nullptr },
        { "get_navajo_white", (PyCFunction)Colors_get_NavajoWhite, METH_NOARGS | METH_STATIC, nullptr },
        { "get_navy", (PyCFunction)Colors_get_Navy, METH_NOARGS | METH_STATIC, nullptr },
        { "get_old_lace", (PyCFunction)Colors_get_OldLace, METH_NOARGS | METH_STATIC, nullptr },
        { "get_olive", (PyCFunction)Colors_get_Olive, METH_NOARGS | METH_STATIC, nullptr },
        { "get_olive_drab", (PyCFunction)Colors_get_OliveDrab, METH_NOARGS | METH_STATIC, nullptr },
        { "get_orange", (PyCFunction)Colors_get_Orange, METH_NOARGS | METH_STATIC, nullptr },
        { "get_orange_red", (PyCFunction)Colors_get_OrangeRed, METH_NOARGS | METH_STATIC, nullptr },
        { "get_orchid", (PyCFunction)Colors_get_Orchid, METH_NOARGS | METH_STATIC, nullptr },
        { "get_pale_goldenrod", (PyCFunction)Colors_get_PaleGoldenrod, METH_NOARGS | METH_STATIC, nullptr },
        { "get_pale_green", (PyCFunction)Colors_get_PaleGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_pale_turquoise", (PyCFunction)Colors_get_PaleTurquoise, METH_NOARGS | METH_STATIC, nullptr },
        { "get_pale_violet_red", (PyCFunction)Colors_get_PaleVioletRed, METH_NOARGS | METH_STATIC, nullptr },
        { "get_papaya_whip", (PyCFunction)Colors_get_PapayaWhip, METH_NOARGS | METH_STATIC, nullptr },
        { "get_peach_puff", (PyCFunction)Colors_get_PeachPuff, METH_NOARGS | METH_STATIC, nullptr },
        { "get_peru", (PyCFunction)Colors_get_Peru, METH_NOARGS | METH_STATIC, nullptr },
        { "get_pink", (PyCFunction)Colors_get_Pink, METH_NOARGS | METH_STATIC, nullptr },
        { "get_plum", (PyCFunction)Colors_get_Plum, METH_NOARGS | METH_STATIC, nullptr },
        { "get_powder_blue", (PyCFunction)Colors_get_PowderBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_purple", (PyCFunction)Colors_get_Purple, METH_NOARGS | METH_STATIC, nullptr },
        { "get_red", (PyCFunction)Colors_get_Red, METH_NOARGS | METH_STATIC, nullptr },
        { "get_rosy_brown", (PyCFunction)Colors_get_RosyBrown, METH_NOARGS | METH_STATIC, nullptr },
        { "get_royal_blue", (PyCFunction)Colors_get_RoyalBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_saddle_brown", (PyCFunction)Colors_get_SaddleBrown, METH_NOARGS | METH_STATIC, nullptr },
        { "get_salmon", (PyCFunction)Colors_get_Salmon, METH_NOARGS | METH_STATIC, nullptr },
        { "get_sandy_brown", (PyCFunction)Colors_get_SandyBrown, METH_NOARGS | METH_STATIC, nullptr },
        { "get_sea_green", (PyCFunction)Colors_get_SeaGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_sea_shell", (PyCFunction)Colors_get_SeaShell, METH_NOARGS | METH_STATIC, nullptr },
        { "get_sienna", (PyCFunction)Colors_get_Sienna, METH_NOARGS | METH_STATIC, nullptr },
        { "get_silver", (PyCFunction)Colors_get_Silver, METH_NOARGS | METH_STATIC, nullptr },
        { "get_sky_blue", (PyCFunction)Colors_get_SkyBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_slate_blue", (PyCFunction)Colors_get_SlateBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_slate_gray", (PyCFunction)Colors_get_SlateGray, METH_NOARGS | METH_STATIC, nullptr },
        { "get_snow", (PyCFunction)Colors_get_Snow, METH_NOARGS | METH_STATIC, nullptr },
        { "get_spring_green", (PyCFunction)Colors_get_SpringGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "get_steel_blue", (PyCFunction)Colors_get_SteelBlue, METH_NOARGS | METH_STATIC, nullptr },
        { "get_tan", (PyCFunction)Colors_get_Tan, METH_NOARGS | METH_STATIC, nullptr },
        { "get_teal", (PyCFunction)Colors_get_Teal, METH_NOARGS | METH_STATIC, nullptr },
        { "get_thistle", (PyCFunction)Colors_get_Thistle, METH_NOARGS | METH_STATIC, nullptr },
        { "get_tomato", (PyCFunction)Colors_get_Tomato, METH_NOARGS | METH_STATIC, nullptr },
        { "get_transparent", (PyCFunction)Colors_get_Transparent, METH_NOARGS | METH_STATIC, nullptr },
        { "get_turquoise", (PyCFunction)Colors_get_Turquoise, METH_NOARGS | METH_STATIC, nullptr },
        { "get_violet", (PyCFunction)Colors_get_Violet, METH_NOARGS | METH_STATIC, nullptr },
        { "get_wheat", (PyCFunction)Colors_get_Wheat, METH_NOARGS | METH_STATIC, nullptr },
        { "get_white", (PyCFunction)Colors_get_White, METH_NOARGS | METH_STATIC, nullptr },
        { "get_white_smoke", (PyCFunction)Colors_get_WhiteSmoke, METH_NOARGS | METH_STATIC, nullptr },
        { "get_yellow", (PyCFunction)Colors_get_Yellow, METH_NOARGS | METH_STATIC, nullptr },
        { "get_yellow_green", (PyCFunction)Colors_get_YellowGreen, METH_NOARGS | METH_STATIC, nullptr },
        { "_from", (PyCFunction)_from_Colors, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_Colors[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_Colors[] = 
    {
        { Py_tp_new, _new_Colors },
        { Py_tp_dealloc, _dealloc_Colors },
        { Py_tp_methods, _methods_Colors },
        { Py_tp_getset, _getset_Colors },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_Colors =
    {
        "_winrt_Windows_UI.Colors",
        sizeof(py::wrapper::Windows::UI::Colors),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_Colors
    };

    // ----- UIContentRoot class --------------------
    constexpr const char* const _type_name_UIContentRoot = "UIContentRoot";

    static PyObject* _new_UIContentRoot(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UIContentRoot);
        return nullptr;
    }

    static void _dealloc_UIContentRoot(py::wrapper::Windows::UI::UIContentRoot* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UIContentRoot_get_UIContext(py::wrapper::Windows::UI::UIContentRoot* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.UIContext());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UIContentRoot(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::UIContentRoot>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UIContentRoot[] = {
        { "_from", (PyCFunction)_from_UIContentRoot, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UIContentRoot[] = {
        { const_cast<char*>("u_i_context"), (getter)UIContentRoot_get_UIContext, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UIContentRoot[] = 
    {
        { Py_tp_new, _new_UIContentRoot },
        { Py_tp_dealloc, _dealloc_UIContentRoot },
        { Py_tp_methods, _methods_UIContentRoot },
        { Py_tp_getset, _getset_UIContentRoot },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UIContentRoot =
    {
        "_winrt_Windows_UI.UIContentRoot",
        sizeof(py::wrapper::Windows::UI::UIContentRoot),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UIContentRoot
    };

    // ----- UIContext class --------------------
    constexpr const char* const _type_name_UIContext = "UIContext";

    static PyObject* _new_UIContext(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UIContext);
        return nullptr;
    }

    static void _dealloc_UIContext(py::wrapper::Windows::UI::UIContext* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* _from_UIContext(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::UI::UIContext>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UIContext[] = {
        { "_from", (PyCFunction)_from_UIContext, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UIContext[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_UIContext[] = 
    {
        { Py_tp_new, _new_UIContext },
        { Py_tp_dealloc, _dealloc_UIContext },
        { Py_tp_methods, _methods_UIContext },
        { Py_tp_getset, _getset_UIContext },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UIContext =
    {
        "_winrt_Windows_UI.UIContext",
        sizeof(py::wrapper::Windows::UI::UIContext),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UIContext
    };

    // ----- Color struct --------------------
    constexpr const char* const _type_name_Color = "Color";

    PyObject* _new_Color(PyTypeObject* type, PyObject* args, PyObject* kwds)
    {
        auto tuple_size = PyTuple_Size(args);

        if ((tuple_size == 0) && (kwds == nullptr))
        {
            try
            {
                winrt::Windows::UI::Color return_value{};
                return py::convert(return_value);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }

        if ((tuple_size == 1) && (kwds == nullptr))
        {
            auto arg = PyTuple_GetItem(args, 0);
            if (PyDict_Check(arg))
            {
                try
                {
                    auto return_value = py::convert_to<winrt::Windows::UI::Color>(arg);
                    return py::convert(return_value);
                }
                catch (...)
                {
                    py::to_PyErr();
                    return nullptr;
                }
            }
        }

        uint8_t _A{};
        uint8_t _R{};
        uint8_t _G{};
        uint8_t _B{};

        static const char* kwlist[] = {"a", "r", "g", "b", nullptr};
        if (!PyArg_ParseTupleAndKeywords(args, kwds, "y1y1y1y1", const_cast<char**>(kwlist), &_A, &_R, &_G, &_B))
        {
            return nullptr;
        }

        try
        {
            winrt::Windows::UI::Color return_value{ _A, _R, _G, _B };
            return py::convert(return_value);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static void _dealloc_Color(py::wrapper::Windows::UI::Color* self)
    {
    }

    static PyObject* Color_get_A(py::wrapper::Windows::UI::Color* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.A);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int Color_set_A(py::wrapper::Windows::UI::Color* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.A = py::converter<uint8_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* Color_get_R(py::wrapper::Windows::UI::Color* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.R);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int Color_set_R(py::wrapper::Windows::UI::Color* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.R = py::converter<uint8_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* Color_get_G(py::wrapper::Windows::UI::Color* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.G);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int Color_set_G(py::wrapper::Windows::UI::Color* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.G = py::converter<uint8_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* Color_get_B(py::wrapper::Windows::UI::Color* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.B);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int Color_set_B(py::wrapper::Windows::UI::Color* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.B = py::converter<uint8_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyGetSetDef _getset_Color[] = {
        { const_cast<char*>("a"), (getter)Color_get_A, (setter)Color_set_A, nullptr, nullptr },
        { const_cast<char*>("r"), (getter)Color_get_R, (setter)Color_set_R, nullptr, nullptr },
        { const_cast<char*>("g"), (getter)Color_get_G, (setter)Color_set_G, nullptr, nullptr },
        { const_cast<char*>("b"), (getter)Color_get_B, (setter)Color_set_B, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_Color[] = 
    {
        { Py_tp_new, _new_Color },
        { Py_tp_dealloc, _dealloc_Color },
        { Py_tp_getset, _getset_Color },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_Color =
    {
        "_winrt_Windows_UI.Color",
        sizeof(py::wrapper::Windows::UI::Color),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_Color
    };

    // ----- WindowId struct --------------------
    constexpr const char* const _type_name_WindowId = "WindowId";

    PyObject* _new_WindowId(PyTypeObject* type, PyObject* args, PyObject* kwds)
    {
        auto tuple_size = PyTuple_Size(args);

        if ((tuple_size == 0) && (kwds == nullptr))
        {
            try
            {
                winrt::Windows::UI::WindowId return_value{};
                return py::convert(return_value);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }

        if ((tuple_size == 1) && (kwds == nullptr))
        {
            auto arg = PyTuple_GetItem(args, 0);
            if (PyDict_Check(arg))
            {
                try
                {
                    auto return_value = py::convert_to<winrt::Windows::UI::WindowId>(arg);
                    return py::convert(return_value);
                }
                catch (...)
                {
                    py::to_PyErr();
                    return nullptr;
                }
            }
        }

        uint64_t _Value{};

        static const char* kwlist[] = {"value", nullptr};
        if (!PyArg_ParseTupleAndKeywords(args, kwds, "K", const_cast<char**>(kwlist), &_Value))
        {
            return nullptr;
        }

        try
        {
            winrt::Windows::UI::WindowId return_value{ _Value };
            return py::convert(return_value);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static void _dealloc_WindowId(py::wrapper::Windows::UI::WindowId* self)
    {
    }

    static PyObject* WindowId_get_Value(py::wrapper::Windows::UI::WindowId* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Value);
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int WindowId_set_Value(py::wrapper::Windows::UI::WindowId* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            self->obj.Value = py::converter<uint64_t>::convert_to(arg);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyGetSetDef _getset_WindowId[] = {
        { const_cast<char*>("value"), (getter)WindowId_get_Value, (setter)WindowId_set_Value, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_WindowId[] = 
    {
        { Py_tp_new, _new_WindowId },
        { Py_tp_dealloc, _dealloc_WindowId },
        { Py_tp_getset, _getset_WindowId },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_WindowId =
    {
        "_winrt_Windows_UI.WindowId",
        sizeof(py::wrapper::Windows::UI::WindowId),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_WindowId
    };

    // ----- Windows.UI Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::UI::ColorHelper>::python_type = py::register_python_type(module, _type_name_ColorHelper, &_type_spec_ColorHelper, bases.get());
            py::winrt_type<winrt::Windows::UI::Colors>::python_type = py::register_python_type(module, _type_name_Colors, &_type_spec_Colors, bases.get());
            py::winrt_type<winrt::Windows::UI::UIContentRoot>::python_type = py::register_python_type(module, _type_name_UIContentRoot, &_type_spec_UIContentRoot, bases.get());
            py::winrt_type<winrt::Windows::UI::UIContext>::python_type = py::register_python_type(module, _type_name_UIContext, &_type_spec_UIContext, bases.get());
            py::winrt_type<winrt::Windows::UI::Color>::python_type = py::register_python_type(module, _type_name_Color, &_type_spec_Color, bases.get());
            py::winrt_type<winrt::Windows::UI::WindowId>::python_type = py::register_python_type(module, _type_name_WindowId, &_type_spec_WindowId, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.UI");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_UI",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::UI

PyMODINIT_FUNC
PyInit__winrt_Windows_UI (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::UI::module_def);
}
