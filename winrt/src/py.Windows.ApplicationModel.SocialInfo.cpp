// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.ApplicationModel.SocialInfo.h"

PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedContent>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedItem>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialUserInfo>::python_type;

namespace py::cpp::Windows::ApplicationModel::SocialInfo
{
    // ----- SocialFeedChildItem class --------------------
    constexpr const char* const _type_name_SocialFeedChildItem = "SocialFeedChildItem";

    static PyObject* _new_SocialFeedChildItem(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 0)
        {
            try
            {
                winrt::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem instance{  };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_SocialFeedChildItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SocialFeedChildItem_get_Timestamp(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Timestamp());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedChildItem_put_Timestamp(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::DateTime>(arg);

            self->obj.Timestamp(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedChildItem_get_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TargetUri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedChildItem_put_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::Uri>(arg);

            self->obj.TargetUri(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedChildItem_get_SharedItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SharedItem());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedChildItem_put_SharedItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem>(arg);

            self->obj.SharedItem(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedChildItem_get_Author(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Author());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SocialFeedChildItem_get_PrimaryContent(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PrimaryContent());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SocialFeedChildItem_get_SecondaryContent(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SecondaryContent());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SocialFeedChildItem_get_Thumbnails(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Thumbnails());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SocialFeedChildItem(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SocialFeedChildItem[] = {
        { "_from", (PyCFunction)_from_SocialFeedChildItem, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SocialFeedChildItem[] = {
        { const_cast<char*>("timestamp"), (getter)SocialFeedChildItem_get_Timestamp, (setter)SocialFeedChildItem_put_Timestamp, nullptr, nullptr },
        { const_cast<char*>("target_uri"), (getter)SocialFeedChildItem_get_TargetUri, (setter)SocialFeedChildItem_put_TargetUri, nullptr, nullptr },
        { const_cast<char*>("shared_item"), (getter)SocialFeedChildItem_get_SharedItem, (setter)SocialFeedChildItem_put_SharedItem, nullptr, nullptr },
        { const_cast<char*>("author"), (getter)SocialFeedChildItem_get_Author, nullptr, nullptr, nullptr },
        { const_cast<char*>("primary_content"), (getter)SocialFeedChildItem_get_PrimaryContent, nullptr, nullptr, nullptr },
        { const_cast<char*>("secondary_content"), (getter)SocialFeedChildItem_get_SecondaryContent, nullptr, nullptr, nullptr },
        { const_cast<char*>("thumbnails"), (getter)SocialFeedChildItem_get_Thumbnails, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SocialFeedChildItem[] = 
    {
        { Py_tp_new, _new_SocialFeedChildItem },
        { Py_tp_dealloc, _dealloc_SocialFeedChildItem },
        { Py_tp_methods, _methods_SocialFeedChildItem },
        { Py_tp_getset, _getset_SocialFeedChildItem },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SocialFeedChildItem =
    {
        "_winrt_Windows_ApplicationModel_SocialInfo.SocialFeedChildItem",
        sizeof(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SocialFeedChildItem
    };

    // ----- SocialFeedContent class --------------------
    constexpr const char* const _type_name_SocialFeedContent = "SocialFeedContent";

    static PyObject* _new_SocialFeedContent(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SocialFeedContent);
        return nullptr;
    }

    static void _dealloc_SocialFeedContent(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedContent* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SocialFeedContent_get_Title(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedContent* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Title());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedContent_put_Title(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedContent* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::hstring>(arg);

            self->obj.Title(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedContent_get_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedContent* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TargetUri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedContent_put_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedContent* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::Uri>(arg);

            self->obj.TargetUri(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedContent_get_Message(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedContent* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Message());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedContent_put_Message(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedContent* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::hstring>(arg);

            self->obj.Message(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* _from_SocialFeedContent(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedContent>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SocialFeedContent[] = {
        { "_from", (PyCFunction)_from_SocialFeedContent, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SocialFeedContent[] = {
        { const_cast<char*>("title"), (getter)SocialFeedContent_get_Title, (setter)SocialFeedContent_put_Title, nullptr, nullptr },
        { const_cast<char*>("target_uri"), (getter)SocialFeedContent_get_TargetUri, (setter)SocialFeedContent_put_TargetUri, nullptr, nullptr },
        { const_cast<char*>("message"), (getter)SocialFeedContent_get_Message, (setter)SocialFeedContent_put_Message, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SocialFeedContent[] = 
    {
        { Py_tp_new, _new_SocialFeedContent },
        { Py_tp_dealloc, _dealloc_SocialFeedContent },
        { Py_tp_methods, _methods_SocialFeedContent },
        { Py_tp_getset, _getset_SocialFeedContent },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SocialFeedContent =
    {
        "_winrt_Windows_ApplicationModel_SocialInfo.SocialFeedContent",
        sizeof(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedContent),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SocialFeedContent
    };

    // ----- SocialFeedItem class --------------------
    constexpr const char* const _type_name_SocialFeedItem = "SocialFeedItem";

    static PyObject* _new_SocialFeedItem(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 0)
        {
            try
            {
                winrt::Windows::ApplicationModel::SocialInfo::SocialFeedItem instance{  };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_SocialFeedItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SocialFeedItem_get_Timestamp(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Timestamp());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedItem_put_Timestamp(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::DateTime>(arg);

            self->obj.Timestamp(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedItem_get_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TargetUri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedItem_put_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::Uri>(arg);

            self->obj.TargetUri(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedItem_get_Style(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Style());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedItem_put_Style(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedItemStyle>(arg);

            self->obj.Style(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedItem_get_SharedItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SharedItem());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedItem_put_SharedItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem>(arg);

            self->obj.SharedItem(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedItem_get_RemoteId(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RemoteId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedItem_put_RemoteId(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::hstring>(arg);

            self->obj.RemoteId(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedItem_get_ChildItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ChildItem());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedItem_put_ChildItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem>(arg);

            self->obj.ChildItem(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedItem_get_BadgeStyle(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.BadgeStyle());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedItem_put_BadgeStyle(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::ApplicationModel::SocialInfo::SocialItemBadgeStyle>(arg);

            self->obj.BadgeStyle(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedItem_get_BadgeCountValue(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.BadgeCountValue());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedItem_put_BadgeCountValue(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<int32_t>(arg);

            self->obj.BadgeCountValue(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedItem_get_Author(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Author());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SocialFeedItem_get_Thumbnails(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Thumbnails());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SocialFeedItem_get_PrimaryContent(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.PrimaryContent());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* SocialFeedItem_get_SecondaryContent(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.SecondaryContent());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SocialFeedItem(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedItem>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SocialFeedItem[] = {
        { "_from", (PyCFunction)_from_SocialFeedItem, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SocialFeedItem[] = {
        { const_cast<char*>("timestamp"), (getter)SocialFeedItem_get_Timestamp, (setter)SocialFeedItem_put_Timestamp, nullptr, nullptr },
        { const_cast<char*>("target_uri"), (getter)SocialFeedItem_get_TargetUri, (setter)SocialFeedItem_put_TargetUri, nullptr, nullptr },
        { const_cast<char*>("style"), (getter)SocialFeedItem_get_Style, (setter)SocialFeedItem_put_Style, nullptr, nullptr },
        { const_cast<char*>("shared_item"), (getter)SocialFeedItem_get_SharedItem, (setter)SocialFeedItem_put_SharedItem, nullptr, nullptr },
        { const_cast<char*>("remote_id"), (getter)SocialFeedItem_get_RemoteId, (setter)SocialFeedItem_put_RemoteId, nullptr, nullptr },
        { const_cast<char*>("child_item"), (getter)SocialFeedItem_get_ChildItem, (setter)SocialFeedItem_put_ChildItem, nullptr, nullptr },
        { const_cast<char*>("badge_style"), (getter)SocialFeedItem_get_BadgeStyle, (setter)SocialFeedItem_put_BadgeStyle, nullptr, nullptr },
        { const_cast<char*>("badge_count_value"), (getter)SocialFeedItem_get_BadgeCountValue, (setter)SocialFeedItem_put_BadgeCountValue, nullptr, nullptr },
        { const_cast<char*>("author"), (getter)SocialFeedItem_get_Author, nullptr, nullptr, nullptr },
        { const_cast<char*>("thumbnails"), (getter)SocialFeedItem_get_Thumbnails, nullptr, nullptr, nullptr },
        { const_cast<char*>("primary_content"), (getter)SocialFeedItem_get_PrimaryContent, nullptr, nullptr, nullptr },
        { const_cast<char*>("secondary_content"), (getter)SocialFeedItem_get_SecondaryContent, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SocialFeedItem[] = 
    {
        { Py_tp_new, _new_SocialFeedItem },
        { Py_tp_dealloc, _dealloc_SocialFeedItem },
        { Py_tp_methods, _methods_SocialFeedItem },
        { Py_tp_getset, _getset_SocialFeedItem },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SocialFeedItem =
    {
        "_winrt_Windows_ApplicationModel_SocialInfo.SocialFeedItem",
        sizeof(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedItem),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SocialFeedItem
    };

    // ----- SocialFeedSharedItem class --------------------
    constexpr const char* const _type_name_SocialFeedSharedItem = "SocialFeedSharedItem";

    static PyObject* _new_SocialFeedSharedItem(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 0)
        {
            try
            {
                winrt::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem instance{  };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_SocialFeedSharedItem(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SocialFeedSharedItem_get_Timestamp(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Timestamp());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedSharedItem_put_Timestamp(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::DateTime>(arg);

            self->obj.Timestamp(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedSharedItem_get_Thumbnail(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Thumbnail());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedSharedItem_put_Thumbnail(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail>(arg);

            self->obj.Thumbnail(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedSharedItem_get_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TargetUri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedSharedItem_put_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::Uri>(arg);

            self->obj.TargetUri(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedSharedItem_get_OriginalSource(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.OriginalSource());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialFeedSharedItem_put_OriginalSource(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::Uri>(arg);

            self->obj.OriginalSource(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialFeedSharedItem_get_Content(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Content());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_SocialFeedSharedItem(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SocialFeedSharedItem[] = {
        { "_from", (PyCFunction)_from_SocialFeedSharedItem, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SocialFeedSharedItem[] = {
        { const_cast<char*>("timestamp"), (getter)SocialFeedSharedItem_get_Timestamp, (setter)SocialFeedSharedItem_put_Timestamp, nullptr, nullptr },
        { const_cast<char*>("thumbnail"), (getter)SocialFeedSharedItem_get_Thumbnail, (setter)SocialFeedSharedItem_put_Thumbnail, nullptr, nullptr },
        { const_cast<char*>("target_uri"), (getter)SocialFeedSharedItem_get_TargetUri, (setter)SocialFeedSharedItem_put_TargetUri, nullptr, nullptr },
        { const_cast<char*>("original_source"), (getter)SocialFeedSharedItem_get_OriginalSource, (setter)SocialFeedSharedItem_put_OriginalSource, nullptr, nullptr },
        { const_cast<char*>("content"), (getter)SocialFeedSharedItem_get_Content, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SocialFeedSharedItem[] = 
    {
        { Py_tp_new, _new_SocialFeedSharedItem },
        { Py_tp_dealloc, _dealloc_SocialFeedSharedItem },
        { Py_tp_methods, _methods_SocialFeedSharedItem },
        { Py_tp_getset, _getset_SocialFeedSharedItem },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SocialFeedSharedItem =
    {
        "_winrt_Windows_ApplicationModel_SocialInfo.SocialFeedSharedItem",
        sizeof(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SocialFeedSharedItem
    };

    // ----- SocialItemThumbnail class --------------------
    constexpr const char* const _type_name_SocialItemThumbnail = "SocialItemThumbnail";

    static PyObject* _new_SocialItemThumbnail(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        if (kwds != nullptr)
        {
            py::set_invalid_kwd_args_error();
            return nullptr;
        }

        Py_ssize_t arg_count = PyTuple_Size(args);
        if (arg_count == 0)
        {
            try
            {
                winrt::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail instance{  };
                return py::wrap(instance, type);
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static void _dealloc_SocialItemThumbnail(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SocialItemThumbnail_SetImageAsync(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::Storage::Streams::IInputStream>(args, 0);

                return py::convert(self->obj.SetImageAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* SocialItemThumbnail_get_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TargetUri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialItemThumbnail_put_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::Uri>(arg);

            self->obj.TargetUri(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialItemThumbnail_get_ImageUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.ImageUri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialItemThumbnail_put_ImageUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::Uri>(arg);

            self->obj.ImageUri(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialItemThumbnail_get_BitmapSize(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.BitmapSize());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialItemThumbnail_put_BitmapSize(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Graphics::Imaging::BitmapSize>(arg);

            self->obj.BitmapSize(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* _from_SocialItemThumbnail(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SocialItemThumbnail[] = {
        { "set_image_async", (PyCFunction)SocialItemThumbnail_SetImageAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_SocialItemThumbnail, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SocialItemThumbnail[] = {
        { const_cast<char*>("target_uri"), (getter)SocialItemThumbnail_get_TargetUri, (setter)SocialItemThumbnail_put_TargetUri, nullptr, nullptr },
        { const_cast<char*>("image_uri"), (getter)SocialItemThumbnail_get_ImageUri, (setter)SocialItemThumbnail_put_ImageUri, nullptr, nullptr },
        { const_cast<char*>("bitmap_size"), (getter)SocialItemThumbnail_get_BitmapSize, (setter)SocialItemThumbnail_put_BitmapSize, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SocialItemThumbnail[] = 
    {
        { Py_tp_new, _new_SocialItemThumbnail },
        { Py_tp_dealloc, _dealloc_SocialItemThumbnail },
        { Py_tp_methods, _methods_SocialItemThumbnail },
        { Py_tp_getset, _getset_SocialItemThumbnail },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SocialItemThumbnail =
    {
        "_winrt_Windows_ApplicationModel_SocialInfo.SocialItemThumbnail",
        sizeof(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SocialItemThumbnail
    };

    // ----- SocialUserInfo class --------------------
    constexpr const char* const _type_name_SocialUserInfo = "SocialUserInfo";

    static PyObject* _new_SocialUserInfo(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_SocialUserInfo);
        return nullptr;
    }

    static void _dealloc_SocialUserInfo(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* SocialUserInfo_get_UserName(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.UserName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialUserInfo_put_UserName(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::hstring>(arg);

            self->obj.UserName(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialUserInfo_get_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TargetUri());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialUserInfo_put_TargetUri(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::Uri>(arg);

            self->obj.TargetUri(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialUserInfo_get_RemoteId(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.RemoteId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialUserInfo_put_RemoteId(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::hstring>(arg);

            self->obj.RemoteId(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* SocialUserInfo_get_DisplayName(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.DisplayName());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static int SocialUserInfo_put_DisplayName(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo* self, PyObject* arg, void* /*unused*/) noexcept
    {
        if (arg == nullptr)
        {
            PyErr_SetString(PyExc_TypeError, "property delete not supported");
            return -1;
        }

        try
        {
            auto param0 = py::convert_to<winrt::hstring>(arg);

            self->obj.DisplayName(param0);
            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyObject* _from_SocialUserInfo(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::SocialInfo::SocialUserInfo>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_SocialUserInfo[] = {
        { "_from", (PyCFunction)_from_SocialUserInfo, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_SocialUserInfo[] = {
        { const_cast<char*>("user_name"), (getter)SocialUserInfo_get_UserName, (setter)SocialUserInfo_put_UserName, nullptr, nullptr },
        { const_cast<char*>("target_uri"), (getter)SocialUserInfo_get_TargetUri, (setter)SocialUserInfo_put_TargetUri, nullptr, nullptr },
        { const_cast<char*>("remote_id"), (getter)SocialUserInfo_get_RemoteId, (setter)SocialUserInfo_put_RemoteId, nullptr, nullptr },
        { const_cast<char*>("display_name"), (getter)SocialUserInfo_get_DisplayName, (setter)SocialUserInfo_put_DisplayName, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_SocialUserInfo[] = 
    {
        { Py_tp_new, _new_SocialUserInfo },
        { Py_tp_dealloc, _dealloc_SocialUserInfo },
        { Py_tp_methods, _methods_SocialUserInfo },
        { Py_tp_getset, _getset_SocialUserInfo },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_SocialUserInfo =
    {
        "_winrt_Windows_ApplicationModel_SocialInfo.SocialUserInfo",
        sizeof(py::wrapper::Windows::ApplicationModel::SocialInfo::SocialUserInfo),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_SocialUserInfo
    };

    // ----- Windows.ApplicationModel.SocialInfo Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedChildItem>::python_type = py::register_python_type(module, _type_name_SocialFeedChildItem, &_type_spec_SocialFeedChildItem, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedContent>::python_type = py::register_python_type(module, _type_name_SocialFeedContent, &_type_spec_SocialFeedContent, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedItem>::python_type = py::register_python_type(module, _type_name_SocialFeedItem, &_type_spec_SocialFeedItem, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialFeedSharedItem>::python_type = py::register_python_type(module, _type_name_SocialFeedSharedItem, &_type_spec_SocialFeedSharedItem, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialItemThumbnail>::python_type = py::register_python_type(module, _type_name_SocialItemThumbnail, &_type_spec_SocialItemThumbnail, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::SocialInfo::SocialUserInfo>::python_type = py::register_python_type(module, _type_name_SocialUserInfo, &_type_spec_SocialUserInfo, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.ApplicationModel.SocialInfo");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_ApplicationModel_SocialInfo",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::ApplicationModel::SocialInfo

PyMODINIT_FUNC
PyInit__winrt_Windows_ApplicationModel_SocialInfo (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::ApplicationModel::SocialInfo::module_def);
}
