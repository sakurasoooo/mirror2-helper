// WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

#include "pybase.h"
#include "py.Windows.ApplicationModel.UserDataTasks.DataProvider.h"

PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderTriggerDetails>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequestEventArgs>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequest>::python_type;
PyTypeObject* py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequestEventArgs>::python_type;

namespace py::cpp::Windows::ApplicationModel::UserDataTasks::DataProvider
{
    // ----- UserDataTaskDataProviderConnection class --------------------
    constexpr const char* const _type_name_UserDataTaskDataProviderConnection = "UserDataTaskDataProviderConnection";

    static PyObject* _new_UserDataTaskDataProviderConnection(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskDataProviderConnection);
        return nullptr;
    }

    static void _dealloc_UserDataTaskDataProviderConnection(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskDataProviderConnection_Start(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                self->obj.Start();
                Py_RETURN_NONE;
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_add_CompleteTaskRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection, winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequestEventArgs>>(arg);

            return py::convert(self->obj.CompleteTaskRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_remove_CompleteTaskRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.CompleteTaskRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_add_CreateOrUpdateTaskRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection, winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequestEventArgs>>(arg);

            return py::convert(self->obj.CreateOrUpdateTaskRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_remove_CreateOrUpdateTaskRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.CreateOrUpdateTaskRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_add_DeleteTaskRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection, winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequestEventArgs>>(arg);

            return py::convert(self->obj.DeleteTaskRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_remove_DeleteTaskRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.DeleteTaskRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_add_SkipOccurrenceRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection, winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequestEventArgs>>(arg);

            return py::convert(self->obj.SkipOccurrenceRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_remove_SkipOccurrenceRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SkipOccurrenceRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_add_SyncRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::Windows::Foundation::TypedEventHandler<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection, winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequestEventArgs>>(arg);

            return py::convert(self->obj.SyncRequested(param0));
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskDataProviderConnection_remove_SyncRequested(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection* self, PyObject* arg) noexcept
    {
        try
        {
            auto param0 = py::convert_to<winrt::event_token>(arg);

            self->obj.SyncRequested(param0);
            Py_RETURN_NONE;
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskDataProviderConnection(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskDataProviderConnection[] = {
        { "start", (PyCFunction)UserDataTaskDataProviderConnection_Start, METH_VARARGS, nullptr },
        { "add_complete_task_requested", (PyCFunction)UserDataTaskDataProviderConnection_add_CompleteTaskRequested, METH_O, nullptr },
        { "remove_complete_task_requested", (PyCFunction)UserDataTaskDataProviderConnection_remove_CompleteTaskRequested, METH_O, nullptr },
        { "add_create_or_update_task_requested", (PyCFunction)UserDataTaskDataProviderConnection_add_CreateOrUpdateTaskRequested, METH_O, nullptr },
        { "remove_create_or_update_task_requested", (PyCFunction)UserDataTaskDataProviderConnection_remove_CreateOrUpdateTaskRequested, METH_O, nullptr },
        { "add_delete_task_requested", (PyCFunction)UserDataTaskDataProviderConnection_add_DeleteTaskRequested, METH_O, nullptr },
        { "remove_delete_task_requested", (PyCFunction)UserDataTaskDataProviderConnection_remove_DeleteTaskRequested, METH_O, nullptr },
        { "add_skip_occurrence_requested", (PyCFunction)UserDataTaskDataProviderConnection_add_SkipOccurrenceRequested, METH_O, nullptr },
        { "remove_skip_occurrence_requested", (PyCFunction)UserDataTaskDataProviderConnection_remove_SkipOccurrenceRequested, METH_O, nullptr },
        { "add_sync_requested", (PyCFunction)UserDataTaskDataProviderConnection_add_SyncRequested, METH_O, nullptr },
        { "remove_sync_requested", (PyCFunction)UserDataTaskDataProviderConnection_remove_SyncRequested, METH_O, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskDataProviderConnection, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskDataProviderConnection[] = {
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskDataProviderConnection[] = 
    {
        { Py_tp_new, _new_UserDataTaskDataProviderConnection },
        { Py_tp_dealloc, _dealloc_UserDataTaskDataProviderConnection },
        { Py_tp_methods, _methods_UserDataTaskDataProviderConnection },
        { Py_tp_getset, _getset_UserDataTaskDataProviderConnection },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskDataProviderConnection =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskDataProviderConnection",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskDataProviderConnection
    };

    // ----- UserDataTaskDataProviderTriggerDetails class --------------------
    constexpr const char* const _type_name_UserDataTaskDataProviderTriggerDetails = "UserDataTaskDataProviderTriggerDetails";

    static PyObject* _new_UserDataTaskDataProviderTriggerDetails(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskDataProviderTriggerDetails);
        return nullptr;
    }

    static void _dealloc_UserDataTaskDataProviderTriggerDetails(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderTriggerDetails* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskDataProviderTriggerDetails_get_Connection(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderTriggerDetails* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Connection());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskDataProviderTriggerDetails(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderTriggerDetails>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskDataProviderTriggerDetails[] = {
        { "_from", (PyCFunction)_from_UserDataTaskDataProviderTriggerDetails, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskDataProviderTriggerDetails[] = {
        { const_cast<char*>("connection"), (getter)UserDataTaskDataProviderTriggerDetails_get_Connection, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskDataProviderTriggerDetails[] = 
    {
        { Py_tp_new, _new_UserDataTaskDataProviderTriggerDetails },
        { Py_tp_dealloc, _dealloc_UserDataTaskDataProviderTriggerDetails },
        { Py_tp_methods, _methods_UserDataTaskDataProviderTriggerDetails },
        { Py_tp_getset, _getset_UserDataTaskDataProviderTriggerDetails },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskDataProviderTriggerDetails =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskDataProviderTriggerDetails",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderTriggerDetails),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskDataProviderTriggerDetails
    };

    // ----- UserDataTaskListCompleteTaskRequest class --------------------
    constexpr const char* const _type_name_UserDataTaskListCompleteTaskRequest = "UserDataTaskListCompleteTaskRequest";

    static PyObject* _new_UserDataTaskListCompleteTaskRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListCompleteTaskRequest);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListCompleteTaskRequest(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListCompleteTaskRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::hstring>(args, 0);

                return py::convert(self->obj.ReportCompletedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListCompleteTaskRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListCompleteTaskRequest_get_TaskId(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListCompleteTaskRequest_get_TaskListId(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListCompleteTaskRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListCompleteTaskRequest[] = {
        { "report_completed_async", (PyCFunction)UserDataTaskListCompleteTaskRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)UserDataTaskListCompleteTaskRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListCompleteTaskRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListCompleteTaskRequest[] = {
        { const_cast<char*>("task_id"), (getter)UserDataTaskListCompleteTaskRequest_get_TaskId, nullptr, nullptr, nullptr },
        { const_cast<char*>("task_list_id"), (getter)UserDataTaskListCompleteTaskRequest_get_TaskListId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListCompleteTaskRequest[] = 
    {
        { Py_tp_new, _new_UserDataTaskListCompleteTaskRequest },
        { Py_tp_dealloc, _dealloc_UserDataTaskListCompleteTaskRequest },
        { Py_tp_methods, _methods_UserDataTaskListCompleteTaskRequest },
        { Py_tp_getset, _getset_UserDataTaskListCompleteTaskRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListCompleteTaskRequest =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListCompleteTaskRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListCompleteTaskRequest
    };

    // ----- UserDataTaskListCompleteTaskRequestEventArgs class --------------------
    constexpr const char* const _type_name_UserDataTaskListCompleteTaskRequestEventArgs = "UserDataTaskListCompleteTaskRequestEventArgs";

    static PyObject* _new_UserDataTaskListCompleteTaskRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListCompleteTaskRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListCompleteTaskRequestEventArgs(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListCompleteTaskRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListCompleteTaskRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListCompleteTaskRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListCompleteTaskRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)UserDataTaskListCompleteTaskRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListCompleteTaskRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListCompleteTaskRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)UserDataTaskListCompleteTaskRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListCompleteTaskRequestEventArgs[] = 
    {
        { Py_tp_new, _new_UserDataTaskListCompleteTaskRequestEventArgs },
        { Py_tp_dealloc, _dealloc_UserDataTaskListCompleteTaskRequestEventArgs },
        { Py_tp_methods, _methods_UserDataTaskListCompleteTaskRequestEventArgs },
        { Py_tp_getset, _getset_UserDataTaskListCompleteTaskRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListCompleteTaskRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListCompleteTaskRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListCompleteTaskRequestEventArgs
    };

    // ----- UserDataTaskListCreateOrUpdateTaskRequest class --------------------
    constexpr const char* const _type_name_UserDataTaskListCreateOrUpdateTaskRequest = "UserDataTaskListCreateOrUpdateTaskRequest";

    static PyObject* _new_UserDataTaskListCreateOrUpdateTaskRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListCreateOrUpdateTaskRequest);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListCreateOrUpdateTaskRequest(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListCreateOrUpdateTaskRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 1)
        {
            try
            {
                auto param0 = py::convert_to<winrt::Windows::ApplicationModel::UserDataTasks::UserDataTask>(args, 0);

                return py::convert(self->obj.ReportCompletedAsync(param0));
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListCreateOrUpdateTaskRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListCreateOrUpdateTaskRequest_get_Task(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Task());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListCreateOrUpdateTaskRequest_get_TaskListId(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListCreateOrUpdateTaskRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListCreateOrUpdateTaskRequest[] = {
        { "report_completed_async", (PyCFunction)UserDataTaskListCreateOrUpdateTaskRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)UserDataTaskListCreateOrUpdateTaskRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListCreateOrUpdateTaskRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListCreateOrUpdateTaskRequest[] = {
        { const_cast<char*>("task"), (getter)UserDataTaskListCreateOrUpdateTaskRequest_get_Task, nullptr, nullptr, nullptr },
        { const_cast<char*>("task_list_id"), (getter)UserDataTaskListCreateOrUpdateTaskRequest_get_TaskListId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListCreateOrUpdateTaskRequest[] = 
    {
        { Py_tp_new, _new_UserDataTaskListCreateOrUpdateTaskRequest },
        { Py_tp_dealloc, _dealloc_UserDataTaskListCreateOrUpdateTaskRequest },
        { Py_tp_methods, _methods_UserDataTaskListCreateOrUpdateTaskRequest },
        { Py_tp_getset, _getset_UserDataTaskListCreateOrUpdateTaskRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListCreateOrUpdateTaskRequest =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListCreateOrUpdateTaskRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListCreateOrUpdateTaskRequest
    };

    // ----- UserDataTaskListCreateOrUpdateTaskRequestEventArgs class --------------------
    constexpr const char* const _type_name_UserDataTaskListCreateOrUpdateTaskRequestEventArgs = "UserDataTaskListCreateOrUpdateTaskRequestEventArgs";

    static PyObject* _new_UserDataTaskListCreateOrUpdateTaskRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListCreateOrUpdateTaskRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListCreateOrUpdateTaskRequestEventArgs(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListCreateOrUpdateTaskRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListCreateOrUpdateTaskRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListCreateOrUpdateTaskRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListCreateOrUpdateTaskRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)UserDataTaskListCreateOrUpdateTaskRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListCreateOrUpdateTaskRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListCreateOrUpdateTaskRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)UserDataTaskListCreateOrUpdateTaskRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListCreateOrUpdateTaskRequestEventArgs[] = 
    {
        { Py_tp_new, _new_UserDataTaskListCreateOrUpdateTaskRequestEventArgs },
        { Py_tp_dealloc, _dealloc_UserDataTaskListCreateOrUpdateTaskRequestEventArgs },
        { Py_tp_methods, _methods_UserDataTaskListCreateOrUpdateTaskRequestEventArgs },
        { Py_tp_getset, _getset_UserDataTaskListCreateOrUpdateTaskRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListCreateOrUpdateTaskRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListCreateOrUpdateTaskRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListCreateOrUpdateTaskRequestEventArgs
    };

    // ----- UserDataTaskListDeleteTaskRequest class --------------------
    constexpr const char* const _type_name_UserDataTaskListDeleteTaskRequest = "UserDataTaskListDeleteTaskRequest";

    static PyObject* _new_UserDataTaskListDeleteTaskRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListDeleteTaskRequest);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListDeleteTaskRequest(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListDeleteTaskRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListDeleteTaskRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListDeleteTaskRequest_get_TaskId(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListDeleteTaskRequest_get_TaskListId(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListDeleteTaskRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListDeleteTaskRequest[] = {
        { "report_completed_async", (PyCFunction)UserDataTaskListDeleteTaskRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)UserDataTaskListDeleteTaskRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListDeleteTaskRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListDeleteTaskRequest[] = {
        { const_cast<char*>("task_id"), (getter)UserDataTaskListDeleteTaskRequest_get_TaskId, nullptr, nullptr, nullptr },
        { const_cast<char*>("task_list_id"), (getter)UserDataTaskListDeleteTaskRequest_get_TaskListId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListDeleteTaskRequest[] = 
    {
        { Py_tp_new, _new_UserDataTaskListDeleteTaskRequest },
        { Py_tp_dealloc, _dealloc_UserDataTaskListDeleteTaskRequest },
        { Py_tp_methods, _methods_UserDataTaskListDeleteTaskRequest },
        { Py_tp_getset, _getset_UserDataTaskListDeleteTaskRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListDeleteTaskRequest =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListDeleteTaskRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListDeleteTaskRequest
    };

    // ----- UserDataTaskListDeleteTaskRequestEventArgs class --------------------
    constexpr const char* const _type_name_UserDataTaskListDeleteTaskRequestEventArgs = "UserDataTaskListDeleteTaskRequestEventArgs";

    static PyObject* _new_UserDataTaskListDeleteTaskRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListDeleteTaskRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListDeleteTaskRequestEventArgs(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListDeleteTaskRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListDeleteTaskRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListDeleteTaskRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListDeleteTaskRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)UserDataTaskListDeleteTaskRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListDeleteTaskRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListDeleteTaskRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)UserDataTaskListDeleteTaskRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListDeleteTaskRequestEventArgs[] = 
    {
        { Py_tp_new, _new_UserDataTaskListDeleteTaskRequestEventArgs },
        { Py_tp_dealloc, _dealloc_UserDataTaskListDeleteTaskRequestEventArgs },
        { Py_tp_methods, _methods_UserDataTaskListDeleteTaskRequestEventArgs },
        { Py_tp_getset, _getset_UserDataTaskListDeleteTaskRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListDeleteTaskRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListDeleteTaskRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListDeleteTaskRequestEventArgs
    };

    // ----- UserDataTaskListSkipOccurrenceRequest class --------------------
    constexpr const char* const _type_name_UserDataTaskListSkipOccurrenceRequest = "UserDataTaskListSkipOccurrenceRequest";

    static PyObject* _new_UserDataTaskListSkipOccurrenceRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListSkipOccurrenceRequest);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListSkipOccurrenceRequest(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListSkipOccurrenceRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListSkipOccurrenceRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListSkipOccurrenceRequest_get_TaskId(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListSkipOccurrenceRequest_get_TaskListId(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListSkipOccurrenceRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListSkipOccurrenceRequest[] = {
        { "report_completed_async", (PyCFunction)UserDataTaskListSkipOccurrenceRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)UserDataTaskListSkipOccurrenceRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListSkipOccurrenceRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListSkipOccurrenceRequest[] = {
        { const_cast<char*>("task_id"), (getter)UserDataTaskListSkipOccurrenceRequest_get_TaskId, nullptr, nullptr, nullptr },
        { const_cast<char*>("task_list_id"), (getter)UserDataTaskListSkipOccurrenceRequest_get_TaskListId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListSkipOccurrenceRequest[] = 
    {
        { Py_tp_new, _new_UserDataTaskListSkipOccurrenceRequest },
        { Py_tp_dealloc, _dealloc_UserDataTaskListSkipOccurrenceRequest },
        { Py_tp_methods, _methods_UserDataTaskListSkipOccurrenceRequest },
        { Py_tp_getset, _getset_UserDataTaskListSkipOccurrenceRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListSkipOccurrenceRequest =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListSkipOccurrenceRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListSkipOccurrenceRequest
    };

    // ----- UserDataTaskListSkipOccurrenceRequestEventArgs class --------------------
    constexpr const char* const _type_name_UserDataTaskListSkipOccurrenceRequestEventArgs = "UserDataTaskListSkipOccurrenceRequestEventArgs";

    static PyObject* _new_UserDataTaskListSkipOccurrenceRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListSkipOccurrenceRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListSkipOccurrenceRequestEventArgs(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListSkipOccurrenceRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListSkipOccurrenceRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListSkipOccurrenceRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListSkipOccurrenceRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)UserDataTaskListSkipOccurrenceRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListSkipOccurrenceRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListSkipOccurrenceRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)UserDataTaskListSkipOccurrenceRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListSkipOccurrenceRequestEventArgs[] = 
    {
        { Py_tp_new, _new_UserDataTaskListSkipOccurrenceRequestEventArgs },
        { Py_tp_dealloc, _dealloc_UserDataTaskListSkipOccurrenceRequestEventArgs },
        { Py_tp_methods, _methods_UserDataTaskListSkipOccurrenceRequestEventArgs },
        { Py_tp_getset, _getset_UserDataTaskListSkipOccurrenceRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListSkipOccurrenceRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListSkipOccurrenceRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListSkipOccurrenceRequestEventArgs
    };

    // ----- UserDataTaskListSyncManagerSyncRequest class --------------------
    constexpr const char* const _type_name_UserDataTaskListSyncManagerSyncRequest = "UserDataTaskListSyncManagerSyncRequest";

    static PyObject* _new_UserDataTaskListSyncManagerSyncRequest(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListSyncManagerSyncRequest);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListSyncManagerSyncRequest(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequest* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListSyncManagerSyncRequest_ReportCompletedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportCompletedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListSyncManagerSyncRequest_ReportFailedAsync(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequest* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.ReportFailedAsync());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListSyncManagerSyncRequest_get_TaskListId(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequest* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.TaskListId());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListSyncManagerSyncRequest(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequest>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListSyncManagerSyncRequest[] = {
        { "report_completed_async", (PyCFunction)UserDataTaskListSyncManagerSyncRequest_ReportCompletedAsync, METH_VARARGS, nullptr },
        { "report_failed_async", (PyCFunction)UserDataTaskListSyncManagerSyncRequest_ReportFailedAsync, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListSyncManagerSyncRequest, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListSyncManagerSyncRequest[] = {
        { const_cast<char*>("task_list_id"), (getter)UserDataTaskListSyncManagerSyncRequest_get_TaskListId, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListSyncManagerSyncRequest[] = 
    {
        { Py_tp_new, _new_UserDataTaskListSyncManagerSyncRequest },
        { Py_tp_dealloc, _dealloc_UserDataTaskListSyncManagerSyncRequest },
        { Py_tp_methods, _methods_UserDataTaskListSyncManagerSyncRequest },
        { Py_tp_getset, _getset_UserDataTaskListSyncManagerSyncRequest },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListSyncManagerSyncRequest =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListSyncManagerSyncRequest",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequest),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListSyncManagerSyncRequest
    };

    // ----- UserDataTaskListSyncManagerSyncRequestEventArgs class --------------------
    constexpr const char* const _type_name_UserDataTaskListSyncManagerSyncRequestEventArgs = "UserDataTaskListSyncManagerSyncRequestEventArgs";

    static PyObject* _new_UserDataTaskListSyncManagerSyncRequestEventArgs(PyTypeObject* type, PyObject* args, PyObject* kwds) noexcept
    {
        py::set_invalid_activation_error(_type_name_UserDataTaskListSyncManagerSyncRequestEventArgs);
        return nullptr;
    }

    static void _dealloc_UserDataTaskListSyncManagerSyncRequestEventArgs(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequestEventArgs* self)
    {
        auto hash_value = std::hash<winrt::Windows::Foundation::IInspectable>{}(self->obj);
        py::wrapped_instance(hash_value, nullptr);
        self->obj = nullptr;
    }

    static PyObject* UserDataTaskListSyncManagerSyncRequestEventArgs_GetDeferral(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequestEventArgs* self, PyObject* args) noexcept
    {
        Py_ssize_t arg_count = PyTuple_Size(args);

        if (arg_count == 0)
        {
            try
            {
                return py::convert(self->obj.GetDeferral());
            }
            catch (...)
            {
                py::to_PyErr();
                return nullptr;
            }
        }
        else
        {
            py::set_invalid_arg_count_error(arg_count);
            return nullptr;
        }
    }

    static PyObject* UserDataTaskListSyncManagerSyncRequestEventArgs_get_Request(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequestEventArgs* self, void* /*unused*/) noexcept
    {
        try
        {
            return py::convert(self->obj.Request());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyObject* _from_UserDataTaskListSyncManagerSyncRequestEventArgs(PyObject* /*unused*/, PyObject* arg) noexcept
    {
        try
        {
            auto return_value = py::convert_to<winrt::Windows::Foundation::IInspectable>(arg);
            return py::convert(return_value.as<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequestEventArgs>());
        }
        catch (...)
        {
            py::to_PyErr();
            return nullptr;
        }
    }

    static PyMethodDef _methods_UserDataTaskListSyncManagerSyncRequestEventArgs[] = {
        { "get_deferral", (PyCFunction)UserDataTaskListSyncManagerSyncRequestEventArgs_GetDeferral, METH_VARARGS, nullptr },
        { "_from", (PyCFunction)_from_UserDataTaskListSyncManagerSyncRequestEventArgs, METH_O | METH_STATIC, nullptr },
        { nullptr }
    };

    static PyGetSetDef _getset_UserDataTaskListSyncManagerSyncRequestEventArgs[] = {
        { const_cast<char*>("request"), (getter)UserDataTaskListSyncManagerSyncRequestEventArgs_get_Request, nullptr, nullptr, nullptr },
        { nullptr }
    };

    static PyType_Slot _type_slots_UserDataTaskListSyncManagerSyncRequestEventArgs[] = 
    {
        { Py_tp_new, _new_UserDataTaskListSyncManagerSyncRequestEventArgs },
        { Py_tp_dealloc, _dealloc_UserDataTaskListSyncManagerSyncRequestEventArgs },
        { Py_tp_methods, _methods_UserDataTaskListSyncManagerSyncRequestEventArgs },
        { Py_tp_getset, _getset_UserDataTaskListSyncManagerSyncRequestEventArgs },
        { 0, nullptr },
    };

    static PyType_Spec _type_spec_UserDataTaskListSyncManagerSyncRequestEventArgs =
    {
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider.UserDataTaskListSyncManagerSyncRequestEventArgs",
        sizeof(py::wrapper::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequestEventArgs),
        0,
        Py_TPFLAGS_DEFAULT,
        _type_slots_UserDataTaskListSyncManagerSyncRequestEventArgs
    };

    // ----- Windows.ApplicationModel.UserDataTasks.DataProvider Initialization --------------------
    static int module_exec(PyObject* module) noexcept
    {
        try
        {
            py::pyobj_handle bases { PyTuple_Pack(1, py::winrt_type<py::winrt_base>::python_type) };

            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderConnection>::python_type = py::register_python_type(module, _type_name_UserDataTaskDataProviderConnection, &_type_spec_UserDataTaskDataProviderConnection, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskDataProviderTriggerDetails>::python_type = py::register_python_type(module, _type_name_UserDataTaskDataProviderTriggerDetails, &_type_spec_UserDataTaskDataProviderTriggerDetails, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequest>::python_type = py::register_python_type(module, _type_name_UserDataTaskListCompleteTaskRequest, &_type_spec_UserDataTaskListCompleteTaskRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCompleteTaskRequestEventArgs>::python_type = py::register_python_type(module, _type_name_UserDataTaskListCompleteTaskRequestEventArgs, &_type_spec_UserDataTaskListCompleteTaskRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequest>::python_type = py::register_python_type(module, _type_name_UserDataTaskListCreateOrUpdateTaskRequest, &_type_spec_UserDataTaskListCreateOrUpdateTaskRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListCreateOrUpdateTaskRequestEventArgs>::python_type = py::register_python_type(module, _type_name_UserDataTaskListCreateOrUpdateTaskRequestEventArgs, &_type_spec_UserDataTaskListCreateOrUpdateTaskRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequest>::python_type = py::register_python_type(module, _type_name_UserDataTaskListDeleteTaskRequest, &_type_spec_UserDataTaskListDeleteTaskRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListDeleteTaskRequestEventArgs>::python_type = py::register_python_type(module, _type_name_UserDataTaskListDeleteTaskRequestEventArgs, &_type_spec_UserDataTaskListDeleteTaskRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequest>::python_type = py::register_python_type(module, _type_name_UserDataTaskListSkipOccurrenceRequest, &_type_spec_UserDataTaskListSkipOccurrenceRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSkipOccurrenceRequestEventArgs>::python_type = py::register_python_type(module, _type_name_UserDataTaskListSkipOccurrenceRequestEventArgs, &_type_spec_UserDataTaskListSkipOccurrenceRequestEventArgs, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequest>::python_type = py::register_python_type(module, _type_name_UserDataTaskListSyncManagerSyncRequest, &_type_spec_UserDataTaskListSyncManagerSyncRequest, bases.get());
            py::winrt_type<winrt::Windows::ApplicationModel::UserDataTasks::DataProvider::UserDataTaskListSyncManagerSyncRequestEventArgs>::python_type = py::register_python_type(module, _type_name_UserDataTaskListSyncManagerSyncRequestEventArgs, &_type_spec_UserDataTaskListSyncManagerSyncRequestEventArgs, bases.get());

            return 0;
        }
        catch (...)
        {
            py::to_PyErr();
            return -1;
        }
    }

    static PyModuleDef_Slot module_slots[] = {
        {Py_mod_exec, module_exec},
        {0, nullptr}
    };

    PyDoc_STRVAR(module_doc, "Windows.ApplicationModel.UserDataTasks.DataProvider");

    static PyModuleDef module_def = {
        PyModuleDef_HEAD_INIT,
        "_winrt_Windows_ApplicationModel_UserDataTasks_DataProvider",
        module_doc,
        0,
        nullptr,
        module_slots,
        nullptr,
        nullptr,
        nullptr
    };
} // py::cpp::Windows::ApplicationModel::UserDataTasks::DataProvider

PyMODINIT_FUNC
PyInit__winrt_Windows_ApplicationModel_UserDataTasks_DataProvider (void) noexcept
{
    return PyModuleDef_Init(&py::cpp::Windows::ApplicationModel::UserDataTasks::DataProvider::module_def);
}
