# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.gaming.input
except Exception:
    pass

class InjectedInputButtonChangeKind(enum.IntEnum):
    NONE = 0
    FIRST_BUTTON_DOWN = 1
    FIRST_BUTTON_UP = 2
    SECOND_BUTTON_DOWN = 3
    SECOND_BUTTON_UP = 4
    THIRD_BUTTON_DOWN = 5
    THIRD_BUTTON_UP = 6
    FOURTH_BUTTON_DOWN = 7
    FOURTH_BUTTON_UP = 8
    FIFTH_BUTTON_DOWN = 9
    FIFTH_BUTTON_UP = 10

class InjectedInputKeyOptions(enum.IntFlag):
    NONE = 0
    EXTENDED_KEY = 0x1
    KEY_UP = 0x2
    SCAN_CODE = 0x8
    UNICODE = 0x4

class InjectedInputMouseOptions(enum.IntFlag):
    NONE = 0
    MOVE = 0x1
    LEFT_DOWN = 0x2
    LEFT_UP = 0x4
    RIGHT_DOWN = 0x8
    RIGHT_UP = 0x10
    MIDDLE_DOWN = 0x20
    MIDDLE_UP = 0x40
    X_DOWN = 0x80
    X_UP = 0x100
    WHEEL = 0x800
    H_WHEEL = 0x1000
    MOVE_NO_COALESCE = 0x2000
    VIRTUAL_DESK = 0x4000
    ABSOLUTE = 0x8000

class InjectedInputPenButtons(enum.IntFlag):
    NONE = 0
    BARREL = 0x1
    INVERTED = 0x2
    ERASER = 0x4

class InjectedInputPenParameters(enum.IntFlag):
    NONE = 0
    PRESSURE = 0x1
    ROTATION = 0x2
    TILT_X = 0x4
    TILT_Y = 0x8

class InjectedInputPointerOptions(enum.IntFlag):
    NONE = 0
    NEW = 0x1
    IN_RANGE = 0x2
    IN_CONTACT = 0x4
    FIRST_BUTTON = 0x10
    SECOND_BUTTON = 0x20
    PRIMARY = 0x2000
    CONFIDENCE = 0x4000
    CANCELED = 0x8000
    POINTER_DOWN = 0x10000
    UPDATE = 0x20000
    POINTER_UP = 0x40000
    CAPTURE_CHANGED = 0x200000

class InjectedInputShortcut(enum.IntEnum):
    BACK = 0
    START = 1
    SEARCH = 2

class InjectedInputTouchParameters(enum.IntFlag):
    NONE = 0
    CONTACT = 0x1
    ORIENTATION = 0x2
    PRESSURE = 0x4

class InjectedInputVisualizationMode(enum.IntEnum):
    NONE = 0
    DEFAULT = 1
    INDIRECT = 2

class InjectedInputPoint(_winrt.winrt_base):
    ...

class InjectedInputPointerInfo(_winrt.winrt_base):
    ...

class InjectedInputRectangle(_winrt.winrt_base):
    ...

class InjectedInputGamepadInfo(_winrt.winrt_base):
    ...
    right_trigger: float
    right_thumbstick_y: float
    right_thumbstick_x: float
    left_trigger: float
    left_thumbstick_y: float
    left_thumbstick_x: float
    buttons: winrt.windows.gaming.input.GamepadButtons

class InjectedInputKeyboardInfo(_winrt.winrt_base):
    ...
    virtual_key: int
    scan_code: int
    key_options: InjectedInputKeyOptions

class InjectedInputMouseInfo(_winrt.winrt_base):
    ...
    time_offset_in_milliseconds: int
    mouse_options: InjectedInputMouseOptions
    mouse_data: int
    delta_y: int
    delta_x: int

class InjectedInputPenInfo(_winrt.winrt_base):
    ...
    tilt_y: int
    tilt_x: int
    rotation: float
    pressure: float
    pointer_info: InjectedInputPointerInfo
    pen_parameters: InjectedInputPenParameters
    pen_buttons: InjectedInputPenButtons

class InjectedInputTouchInfo(_winrt.winrt_base):
    ...
    touch_parameters: InjectedInputTouchParameters
    pressure: float
    pointer_info: InjectedInputPointerInfo
    orientation: int
    contact: InjectedInputRectangle

class InputInjector(_winrt.winrt_base):
    ...
    def initialize_gamepad_injection() -> None:
        ...
    def initialize_pen_injection(visual_mode: InjectedInputVisualizationMode) -> None:
        ...
    def initialize_touch_injection(visual_mode: InjectedInputVisualizationMode) -> None:
        ...
    def inject_gamepad_input(input: InjectedInputGamepadInfo) -> None:
        ...
    def inject_keyboard_input(input: typing.Iterable[InjectedInputKeyboardInfo]) -> None:
        ...
    def inject_mouse_input(input: typing.Iterable[InjectedInputMouseInfo]) -> None:
        ...
    def inject_pen_input(input: InjectedInputPenInfo) -> None:
        ...
    def inject_shortcut(shortcut: InjectedInputShortcut) -> None:
        ...
    def inject_touch_input(input: typing.Iterable[InjectedInputTouchInfo]) -> None:
        ...
    def try_create() -> InputInjector:
        ...
    def try_create_for_app_broadcast_only() -> InputInjector:
        ...
    def uninitialize_gamepad_injection() -> None:
        ...
    def uninitialize_pen_injection() -> None:
        ...
    def uninitialize_touch_injection() -> None:
        ...

