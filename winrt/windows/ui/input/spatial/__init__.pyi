# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.haptics
except Exception:
    pass

try:
    import winrt.windows.devices.power
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.foundation.numerics
except Exception:
    pass

try:
    import winrt.windows.perception
except Exception:
    pass

try:
    import winrt.windows.perception.people
except Exception:
    pass

try:
    import winrt.windows.perception.spatial
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class SpatialGestureSettings(enum.IntFlag):
    NONE = 0
    TAP = 0x1
    DOUBLE_TAP = 0x2
    HOLD = 0x4
    MANIPULATION_TRANSLATE = 0x8
    NAVIGATION_X = 0x10
    NAVIGATION_Y = 0x20
    NAVIGATION_Z = 0x40
    NAVIGATION_RAILS_X = 0x80
    NAVIGATION_RAILS_Y = 0x100
    NAVIGATION_RAILS_Z = 0x200

class SpatialInteractionPressKind(enum.IntEnum):
    NONE = 0
    SELECT = 1
    MENU = 2
    GRASP = 3
    TOUCHPAD = 4
    THUMBSTICK = 5

class SpatialInteractionSourceHandedness(enum.IntEnum):
    UNSPECIFIED = 0
    LEFT = 1
    RIGHT = 2

class SpatialInteractionSourceKind(enum.IntEnum):
    OTHER = 0
    HAND = 1
    VOICE = 2
    CONTROLLER = 3

class SpatialInteractionSourcePositionAccuracy(enum.IntEnum):
    HIGH = 0
    APPROXIMATE = 1

class SpatialGestureRecognizer(_winrt.winrt_base):
    ...
    gesture_settings: SpatialGestureSettings
    def cancel_pending_gestures() -> None:
        ...
    def capture_interaction(interaction: SpatialInteraction) -> None:
        ...
    def try_set_gesture_settings(settings: SpatialGestureSettings) -> bool:
        ...
    def add_hold_canceled(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialHoldCanceledEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_hold_canceled(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_hold_completed(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialHoldCompletedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_hold_completed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_hold_started(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialHoldStartedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_hold_started(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_manipulation_canceled(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialManipulationCanceledEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_manipulation_canceled(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_manipulation_completed(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialManipulationCompletedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_manipulation_completed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_manipulation_started(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialManipulationStartedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_manipulation_started(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_manipulation_updated(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialManipulationUpdatedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_manipulation_updated(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_navigation_canceled(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialNavigationCanceledEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_navigation_canceled(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_navigation_completed(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialNavigationCompletedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_navigation_completed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_navigation_started(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialNavigationStartedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_navigation_started(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_navigation_updated(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialNavigationUpdatedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_navigation_updated(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_recognition_ended(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialRecognitionEndedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_recognition_ended(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_recognition_started(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialRecognitionStartedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_recognition_started(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_tapped(handler: winrt.windows.foundation.TypedEventHandler[SpatialGestureRecognizer, SpatialTappedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_tapped(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class SpatialHoldCanceledEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind

class SpatialHoldCompletedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind

class SpatialHoldStartedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    def try_get_pointer_pose(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialPointerPose:
        ...

class SpatialInteraction(_winrt.winrt_base):
    ...
    source_state: SpatialInteractionSourceState

class SpatialInteractionController(_winrt.winrt_base):
    ...
    has_thumbstick: bool
    has_touchpad: bool
    product_id: int
    simple_haptics_controller: winrt.windows.devices.haptics.SimpleHapticsController
    vendor_id: int
    version: int
    def try_get_battery_report() -> winrt.windows.devices.power.BatteryReport:
        ...
    def try_get_renderable_model_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.streams.IRandomAccessStreamWithContentType]:
        ...

class SpatialInteractionControllerProperties(_winrt.winrt_base):
    ...
    is_thumbstick_pressed: bool
    is_touchpad_pressed: bool
    is_touchpad_touched: bool
    thumbstick_x: float
    thumbstick_y: float
    touchpad_x: float
    touchpad_y: float

class SpatialInteractionDetectedEventArgs(_winrt.winrt_base):
    ...
    interaction: SpatialInteraction
    interaction_source_kind: SpatialInteractionSourceKind
    interaction_source: SpatialInteractionSource
    def try_get_pointer_pose(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialPointerPose:
        ...

class SpatialInteractionManager(_winrt.winrt_base):
    ...
    def get_detected_sources_at_timestamp(time_stamp: winrt.windows.perception.PerceptionTimestamp) -> winrt.windows.foundation.collections.IVectorView[SpatialInteractionSourceState]:
        ...
    def get_for_current_view() -> SpatialInteractionManager:
        ...
    def is_source_kind_supported(kind: SpatialInteractionSourceKind) -> bool:
        ...
    def add_interaction_detected(handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionDetectedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_interaction_detected(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_detected(handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_detected(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_lost(handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_lost(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_pressed(handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_pressed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_released(handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_released(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_updated(handler: winrt.windows.foundation.TypedEventHandler[SpatialInteractionManager, SpatialInteractionSourceEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_updated(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class SpatialInteractionSource(_winrt.winrt_base):
    ...
    id: int
    kind: SpatialInteractionSourceKind
    controller: SpatialInteractionController
    is_grasp_supported: bool
    is_menu_supported: bool
    is_pointing_supported: bool
    handedness: SpatialInteractionSourceHandedness
    def try_create_hand_mesh_observer() -> winrt.windows.perception.people.HandMeshObserver:
        ...
    def try_create_hand_mesh_observer_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.perception.people.HandMeshObserver]:
        ...
    def try_get_state_at_timestamp(timestamp: winrt.windows.perception.PerceptionTimestamp) -> SpatialInteractionSourceState:
        ...

class SpatialInteractionSourceEventArgs(_winrt.winrt_base):
    ...
    state: SpatialInteractionSourceState
    press_kind: SpatialInteractionPressKind

class SpatialInteractionSourceLocation(_winrt.winrt_base):
    ...
    position: typing.Optional[winrt.windows.foundation.numerics.Vector3]
    velocity: typing.Optional[winrt.windows.foundation.numerics.Vector3]
    orientation: typing.Optional[winrt.windows.foundation.numerics.Quaternion]
    angular_velocity: typing.Optional[winrt.windows.foundation.numerics.Vector3]
    position_accuracy: SpatialInteractionSourcePositionAccuracy
    source_pointer_pose: SpatialPointerInteractionSourcePose

class SpatialInteractionSourceProperties(_winrt.winrt_base):
    ...
    source_loss_risk: float
    def try_get_location(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialInteractionSourceLocation:
        ...
    def try_get_source_loss_mitigation_direction(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> typing.Optional[winrt.windows.foundation.numerics.Vector3]:
        ...

class SpatialInteractionSourceState(_winrt.winrt_base):
    ...
    is_pressed: bool
    properties: SpatialInteractionSourceProperties
    source: SpatialInteractionSource
    timestamp: winrt.windows.perception.PerceptionTimestamp
    controller_properties: SpatialInteractionControllerProperties
    is_grasped: bool
    is_menu_pressed: bool
    is_select_pressed: bool
    select_pressed_value: float
    def try_get_hand_pose() -> winrt.windows.perception.people.HandPose:
        ...
    def try_get_pointer_pose(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialPointerPose:
        ...

class SpatialManipulationCanceledEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind

class SpatialManipulationCompletedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    def try_get_cumulative_delta(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialManipulationDelta:
        ...

class SpatialManipulationDelta(_winrt.winrt_base):
    ...
    translation: winrt.windows.foundation.numerics.Vector3

class SpatialManipulationStartedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    def try_get_pointer_pose(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialPointerPose:
        ...

class SpatialManipulationUpdatedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    def try_get_cumulative_delta(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialManipulationDelta:
        ...

class SpatialNavigationCanceledEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind

class SpatialNavigationCompletedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    normalized_offset: winrt.windows.foundation.numerics.Vector3

class SpatialNavigationStartedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    is_navigating_x: bool
    is_navigating_y: bool
    is_navigating_z: bool
    def try_get_pointer_pose(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialPointerPose:
        ...

class SpatialNavigationUpdatedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    normalized_offset: winrt.windows.foundation.numerics.Vector3

class SpatialPointerInteractionSourcePose(_winrt.winrt_base):
    ...
    forward_direction: winrt.windows.foundation.numerics.Vector3
    position: winrt.windows.foundation.numerics.Vector3
    up_direction: winrt.windows.foundation.numerics.Vector3
    orientation: winrt.windows.foundation.numerics.Quaternion
    position_accuracy: SpatialInteractionSourcePositionAccuracy

class SpatialPointerPose(_winrt.winrt_base):
    ...
    head: winrt.windows.perception.people.HeadPose
    timestamp: winrt.windows.perception.PerceptionTimestamp
    eyes: winrt.windows.perception.people.EyesPose
    is_head_captured_by_system: bool
    def try_get_at_timestamp(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem, timestamp: winrt.windows.perception.PerceptionTimestamp) -> SpatialPointerPose:
        ...
    def try_get_interaction_source_pose(source: SpatialInteractionSource) -> SpatialPointerInteractionSourcePose:
        ...

class SpatialRecognitionEndedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind

class SpatialRecognitionStartedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    def is_gesture_possible(gesture: SpatialGestureSettings) -> bool:
        ...
    def try_get_pointer_pose(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialPointerPose:
        ...

class SpatialTappedEventArgs(_winrt.winrt_base):
    ...
    interaction_source_kind: SpatialInteractionSourceKind
    tap_count: int
    def try_get_pointer_pose(coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> SpatialPointerPose:
        ...

