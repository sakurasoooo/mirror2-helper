# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.ui.notifications
except Exception:
    pass

class UserNotificationListenerAccessStatus(enum.IntEnum):
    UNSPECIFIED = 0
    ALLOWED = 1
    DENIED = 2

class UserNotificationListener(_winrt.winrt_base):
    ...
    current: UserNotificationListener
    def clear_notifications() -> None:
        ...
    def get_access_status() -> UserNotificationListenerAccessStatus:
        ...
    def get_notification(notification_id: int) -> winrt.windows.ui.notifications.UserNotification:
        ...
    def get_notifications_async(kinds: winrt.windows.ui.notifications.NotificationKinds) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[winrt.windows.ui.notifications.UserNotification]]:
        ...
    def remove_notification(notification_id: int) -> None:
        ...
    def request_access_async() -> winrt.windows.foundation.IAsyncOperation[UserNotificationListenerAccessStatus]:
        ...
    def add_notification_changed(handler: winrt.windows.foundation.TypedEventHandler[UserNotificationListener, winrt.windows.ui.notifications.UserNotificationChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_notification_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

