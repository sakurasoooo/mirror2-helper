# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.globalization
except Exception:
    pass

try:
    import winrt.windows.ui.text
except Exception:
    pass

try:
    import winrt.windows.ui.viewmanagement
except Exception:
    pass

class CoreTextFormatUpdatingReason(enum.IntEnum):
    NONE = 0
    COMPOSITION_UNCONVERTED = 1
    COMPOSITION_CONVERTED = 2
    COMPOSITION_TARGET_UNCONVERTED = 3
    COMPOSITION_TARGET_CONVERTED = 4

class CoreTextFormatUpdatingResult(enum.IntEnum):
    SUCCEEDED = 0
    FAILED = 1

class CoreTextInputPaneDisplayPolicy(enum.IntEnum):
    AUTOMATIC = 0
    MANUAL = 1

class CoreTextInputScope(enum.IntEnum):
    DEFAULT = 0
    URL = 1
    FILE_PATH = 2
    FILE_NAME = 3
    EMAIL_USER_NAME = 4
    EMAIL_ADDRESS = 5
    USER_NAME = 6
    PERSONAL_FULL_NAME = 7
    PERSONAL_NAME_PREFIX = 8
    PERSONAL_GIVEN_NAME = 9
    PERSONAL_MIDDLE_NAME = 10
    PERSONAL_SURNAME = 11
    PERSONAL_NAME_SUFFIX = 12
    ADDRESS = 13
    ADDRESS_POSTAL_CODE = 14
    ADDRESS_STREET = 15
    ADDRESS_STATE_OR_PROVINCE = 16
    ADDRESS_CITY = 17
    ADDRESS_COUNTRY_NAME = 18
    ADDRESS_COUNTRY_SHORT_NAME = 19
    CURRENCY_AMOUNT_AND_SYMBOL = 20
    CURRENCY_AMOUNT = 21
    DATE = 22
    DATE_MONTH = 23
    DATE_DAY = 24
    DATE_YEAR = 25
    DATE_MONTH_NAME = 26
    DATE_DAY_NAME = 27
    NUMBER = 29
    SINGLE_CHARACTER = 30
    PASSWORD = 31
    TELEPHONE_NUMBER = 32
    TELEPHONE_COUNTRY_CODE = 33
    TELEPHONE_AREA_CODE = 34
    TELEPHONE_LOCAL_NUMBER = 35
    TIME = 36
    TIME_HOUR = 37
    TIME_MINUTE_OR_SECOND = 38
    NUMBER_FULL_WIDTH = 39
    ALPHANUMERIC_HALF_WIDTH = 40
    ALPHANUMERIC_FULL_WIDTH = 41
    CURRENCY_CHINESE = 42
    BOPOMOFO = 43
    HIRAGANA = 44
    KATAKANA_HALF_WIDTH = 45
    KATAKANA_FULL_WIDTH = 46
    HANJA = 47
    HANGUL_HALF_WIDTH = 48
    HANGUL_FULL_WIDTH = 49
    SEARCH = 50
    FORMULA = 51
    SEARCH_INCREMENTAL = 52
    CHINESE_HALF_WIDTH = 53
    CHINESE_FULL_WIDTH = 54
    NATIVE_SCRIPT = 55
    TEXT = 57
    CHAT = 58
    NAME_OR_PHONE_NUMBER = 59
    EMAIL_USER_NAME_OR_ADDRESS = 60
    PRIVATE = 61
    MAPS = 62
    PASSWORD_NUMERIC = 63
    FORMULA_NUMBER = 67
    CHAT_WITHOUT_EMOJI = 68
    DIGITS = 28
    PIN_NUMERIC = 64
    PIN_ALPHANUMERIC = 65

class CoreTextSelectionUpdatingResult(enum.IntEnum):
    SUCCEEDED = 0
    FAILED = 1

class CoreTextTextUpdatingResult(enum.IntEnum):
    SUCCEEDED = 0
    FAILED = 1

class CoreTextRange(_winrt.winrt_base):
    ...

class CoreTextCompositionCompletedEventArgs(_winrt.winrt_base):
    ...
    composition_segments: winrt.windows.foundation.collections.IVectorView[CoreTextCompositionSegment]
    is_canceled: bool
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class CoreTextCompositionSegment(_winrt.winrt_base):
    ...
    preconversion_string: str
    range: CoreTextRange

class CoreTextCompositionStartedEventArgs(_winrt.winrt_base):
    ...
    is_canceled: bool
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class CoreTextEditContext(_winrt.winrt_base):
    ...
    name: str
    is_read_only: bool
    input_scope: CoreTextInputScope
    input_pane_display_policy: CoreTextInputPaneDisplayPolicy
    def notify_focus_enter() -> None:
        ...
    def notify_focus_leave() -> None:
        ...
    def notify_layout_changed() -> None:
        ...
    def notify_selection_changed(selection: CoreTextRange) -> None:
        ...
    def notify_text_changed(modified_range: CoreTextRange, new_length: int, new_selection: CoreTextRange) -> None:
        ...
    def add_composition_completed(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, CoreTextCompositionCompletedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_composition_completed(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_composition_started(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, CoreTextCompositionStartedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_composition_started(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_focus_removed(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_focus_removed(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_format_updating(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, CoreTextFormatUpdatingEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_format_updating(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_layout_requested(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, CoreTextLayoutRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_layout_requested(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_selection_requested(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, CoreTextSelectionRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_selection_requested(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_selection_updating(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, CoreTextSelectionUpdatingEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_selection_updating(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_text_requested(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, CoreTextTextRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_text_requested(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_text_updating(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, CoreTextTextUpdatingEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_text_updating(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_notify_focus_leave_completed(handler: winrt.windows.foundation.TypedEventHandler[CoreTextEditContext, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_notify_focus_leave_completed(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class CoreTextFormatUpdatingEventArgs(_winrt.winrt_base):
    ...
    result: CoreTextFormatUpdatingResult
    background_color: typing.Optional[winrt.windows.ui.viewmanagement.UIElementType]
    is_canceled: bool
    range: CoreTextRange
    reason: CoreTextFormatUpdatingReason
    text_color: typing.Optional[winrt.windows.ui.viewmanagement.UIElementType]
    underline_color: typing.Optional[winrt.windows.ui.viewmanagement.UIElementType]
    underline_type: typing.Optional[winrt.windows.ui.text.UnderlineType]
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class CoreTextLayoutBounds(_winrt.winrt_base):
    ...
    text_bounds: winrt.windows.foundation.Rect
    control_bounds: winrt.windows.foundation.Rect

class CoreTextLayoutRequest(_winrt.winrt_base):
    ...
    is_canceled: bool
    layout_bounds: CoreTextLayoutBounds
    range: CoreTextRange
    layout_bounds_visual_pixels: CoreTextLayoutBounds
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class CoreTextLayoutRequestedEventArgs(_winrt.winrt_base):
    ...
    request: CoreTextLayoutRequest

class CoreTextSelectionRequest(_winrt.winrt_base):
    ...
    selection: CoreTextRange
    is_canceled: bool
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class CoreTextSelectionRequestedEventArgs(_winrt.winrt_base):
    ...
    request: CoreTextSelectionRequest

class CoreTextSelectionUpdatingEventArgs(_winrt.winrt_base):
    ...
    result: CoreTextSelectionUpdatingResult
    is_canceled: bool
    selection: CoreTextRange
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class CoreTextServicesConstants(_winrt.winrt_base):
    ...
    hidden_character: int

class CoreTextServicesManager(_winrt.winrt_base):
    ...
    input_language: winrt.windows.globalization.Language
    def create_edit_context() -> CoreTextEditContext:
        ...
    def get_for_current_view() -> CoreTextServicesManager:
        ...
    def add_input_language_changed(handler: winrt.windows.foundation.TypedEventHandler[CoreTextServicesManager, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_input_language_changed(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class CoreTextTextRequest(_winrt.winrt_base):
    ...
    text: str
    is_canceled: bool
    range: CoreTextRange
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class CoreTextTextRequestedEventArgs(_winrt.winrt_base):
    ...
    request: CoreTextTextRequest

class CoreTextTextUpdatingEventArgs(_winrt.winrt_base):
    ...
    result: CoreTextTextUpdatingResult
    input_language: winrt.windows.globalization.Language
    is_canceled: bool
    new_selection: CoreTextRange
    range: CoreTextRange
    text: str
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

