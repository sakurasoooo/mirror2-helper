# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.security.credentials
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

try:
    import winrt.windows.ui.popups
except Exception:
    pass

class SupportedWebAccountActions(enum.IntFlag):
    NONE = 0
    RECONNECT = 0x1
    REMOVE = 0x2
    VIEW_DETAILS = 0x4
    MANAGE = 0x8
    MORE = 0x10

class WebAccountAction(enum.IntEnum):
    RECONNECT = 0
    REMOVE = 1
    VIEW_DETAILS = 2
    MANAGE = 3
    MORE = 4

class AccountsSettingsPane(_winrt.winrt_base):
    ...
    def get_for_current_view() -> AccountsSettingsPane:
        ...
    def show() -> None:
        ...
    def show_add_account_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def show_add_account_for_user_async(user: winrt.windows.system.User) -> winrt.windows.foundation.IAsyncAction:
        ...
    def show_manage_accounts_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def show_manage_accounts_for_user_async(user: winrt.windows.system.User) -> winrt.windows.foundation.IAsyncAction:
        ...
    def add_account_commands_requested(handler: winrt.windows.foundation.TypedEventHandler[AccountsSettingsPane, AccountsSettingsPaneCommandsRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_account_commands_requested(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class AccountsSettingsPaneCommandsRequestedEventArgs(_winrt.winrt_base):
    ...
    header_text: str
    commands: winrt.windows.foundation.collections.IVector[SettingsCommand]
    credential_commands: winrt.windows.foundation.collections.IVector[CredentialCommand]
    web_account_commands: winrt.windows.foundation.collections.IVector[WebAccountCommand]
    web_account_provider_commands: winrt.windows.foundation.collections.IVector[WebAccountProviderCommand]
    user: winrt.windows.system.User
    def get_deferral() -> AccountsSettingsPaneEventDeferral:
        ...

class AccountsSettingsPaneEventDeferral(_winrt.winrt_base):
    ...
    def complete() -> None:
        ...

class CredentialCommand(_winrt.winrt_base):
    ...
    credential_deleted: CredentialCommandCredentialDeletedHandler
    password_credential: winrt.windows.security.credentials.PasswordCredential

class SettingsCommand(winrt.windows.ui.popups.IUICommand, _winrt.winrt_base):
    ...
    label: str
    invoked: winrt.windows.ui.popups.UICommandInvokedHandler
    id: _winrt.winrt_base
    accounts_command: SettingsCommand

class WebAccountCommand(_winrt.winrt_base):
    ...
    actions: SupportedWebAccountActions
    invoked: WebAccountCommandInvokedHandler
    web_account: winrt.windows.security.credentials.WebAccount

class WebAccountInvokedArgs(_winrt.winrt_base):
    ...
    action: WebAccountAction

class WebAccountProviderCommand(_winrt.winrt_base):
    ...
    invoked: WebAccountProviderCommandInvokedHandler
    web_account_provider: winrt.windows.security.credentials.WebAccountProvider

CredentialCommandCredentialDeletedHandler = typing.Callable[[CredentialCommand], None]

WebAccountCommandInvokedHandler = typing.Callable[[WebAccountCommand, WebAccountInvokedArgs], None]

WebAccountProviderCommandInvokedHandler = typing.Callable[[WebAccountProviderCommand], None]

