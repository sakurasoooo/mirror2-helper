# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.geolocation
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class PhotoOrientation(enum.IntEnum):
    UNSPECIFIED = 0
    NORMAL = 1
    FLIP_HORIZONTAL = 2
    ROTATE180 = 3
    FLIP_VERTICAL = 4
    TRANSPOSE = 5
    ROTATE270 = 6
    TRANSVERSE = 7
    ROTATE90 = 8

class PropertyPrefetchOptions(enum.IntFlag):
    NONE = 0
    MUSIC_PROPERTIES = 0x1
    VIDEO_PROPERTIES = 0x2
    IMAGE_PROPERTIES = 0x4
    DOCUMENT_PROPERTIES = 0x8
    BASIC_PROPERTIES = 0x10

class ThumbnailMode(enum.IntEnum):
    PICTURES_VIEW = 0
    VIDEOS_VIEW = 1
    MUSIC_VIEW = 2
    DOCUMENTS_VIEW = 3
    LIST_VIEW = 4
    SINGLE_ITEM = 5

class ThumbnailOptions(enum.IntFlag):
    NONE = 0
    RETURN_ONLY_IF_CACHED = 0x1
    RESIZE_THUMBNAIL = 0x2
    USE_CURRENT_SCALE = 0x4

class ThumbnailType(enum.IntEnum):
    IMAGE = 0
    ICON = 1

class VideoOrientation(enum.IntEnum):
    NORMAL = 0
    ROTATE90 = 90
    ROTATE180 = 180
    ROTATE270 = 270

class BasicProperties(IStorageItemExtraProperties, _winrt.winrt_base):
    ...
    date_modified: winrt.windows.foundation.DateTime
    item_date: winrt.windows.foundation.DateTime
    size: int
    def retrieve_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMap[str, _winrt.winrt_base]]:
        ...
    def save_properties_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def save_properties_async(properties_to_save: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, _winrt.winrt_base]]) -> winrt.windows.foundation.IAsyncAction:
        ...

class DocumentProperties(IStorageItemExtraProperties, _winrt.winrt_base):
    ...
    title: str
    comment: str
    author: winrt.windows.foundation.collections.IVector[str]
    keywords: winrt.windows.foundation.collections.IVector[str]
    def retrieve_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMap[str, _winrt.winrt_base]]:
        ...
    def save_properties_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def save_properties_async(properties_to_save: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, _winrt.winrt_base]]) -> winrt.windows.foundation.IAsyncAction:
        ...

class GeotagHelper(_winrt.winrt_base):
    ...
    def get_geotag_async(file: winrt.windows.storage.IStorageFile) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.devices.geolocation.Geopoint]:
        ...
    def set_geotag_async(file: winrt.windows.storage.IStorageFile, geopoint: winrt.windows.devices.geolocation.Geopoint) -> winrt.windows.foundation.IAsyncAction:
        ...
    def set_geotag_from_geolocator_async(file: winrt.windows.storage.IStorageFile, geolocator: winrt.windows.devices.geolocation.Geolocator) -> winrt.windows.foundation.IAsyncAction:
        ...

class ImageProperties(IStorageItemExtraProperties, _winrt.winrt_base):
    ...
    title: str
    rating: int
    date_taken: winrt.windows.foundation.DateTime
    camera_model: str
    camera_manufacturer: str
    height: int
    keywords: winrt.windows.foundation.collections.IVector[str]
    latitude: typing.Optional[float]
    longitude: typing.Optional[float]
    orientation: PhotoOrientation
    people_names: winrt.windows.foundation.collections.IVectorView[str]
    width: int
    def retrieve_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMap[str, _winrt.winrt_base]]:
        ...
    def save_properties_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def save_properties_async(properties_to_save: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, _winrt.winrt_base]]) -> winrt.windows.foundation.IAsyncAction:
        ...

class MusicProperties(IStorageItemExtraProperties, _winrt.winrt_base):
    ...
    year: int
    track_number: int
    title: str
    subtitle: str
    rating: int
    publisher: str
    artist: str
    album_artist: str
    album: str
    bitrate: int
    composers: winrt.windows.foundation.collections.IVector[str]
    conductors: winrt.windows.foundation.collections.IVector[str]
    duration: winrt.windows.foundation.TimeSpan
    genre: winrt.windows.foundation.collections.IVector[str]
    producers: winrt.windows.foundation.collections.IVector[str]
    writers: winrt.windows.foundation.collections.IVector[str]
    def retrieve_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMap[str, _winrt.winrt_base]]:
        ...
    def save_properties_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def save_properties_async(properties_to_save: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, _winrt.winrt_base]]) -> winrt.windows.foundation.IAsyncAction:
        ...

class StorageItemContentProperties(IStorageItemExtraProperties, _winrt.winrt_base):
    ...
    def get_document_properties_async() -> winrt.windows.foundation.IAsyncOperation[DocumentProperties]:
        ...
    def get_image_properties_async() -> winrt.windows.foundation.IAsyncOperation[ImageProperties]:
        ...
    def get_music_properties_async() -> winrt.windows.foundation.IAsyncOperation[MusicProperties]:
        ...
    def get_video_properties_async() -> winrt.windows.foundation.IAsyncOperation[VideoProperties]:
        ...
    def retrieve_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMap[str, _winrt.winrt_base]]:
        ...
    def save_properties_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def save_properties_async(properties_to_save: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, _winrt.winrt_base]]) -> winrt.windows.foundation.IAsyncAction:
        ...

class StorageItemThumbnail(winrt.windows.storage.streams.IRandomAccessStreamWithContentType, winrt.windows.storage.streams.IContentTypeProvider, winrt.windows.storage.streams.IRandomAccessStream, winrt.windows.storage.streams.IOutputStream, winrt.windows.foundation.IClosable, winrt.windows.storage.streams.IInputStream, _winrt.winrt_base):
    ...
    original_height: int
    original_width: int
    returned_smaller_cached_size: bool
    type: ThumbnailType
    content_type: str
    size: int
    can_read: bool
    can_write: bool
    position: int
    def clone_stream() -> winrt.windows.storage.streams.IRandomAccessStream:
        ...
    def close() -> None:
        ...
    def flush_async() -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def get_input_stream_at(position: int) -> winrt.windows.storage.streams.IInputStream:
        ...
    def get_output_stream_at(position: int) -> winrt.windows.storage.streams.IOutputStream:
        ...
    def read_async(buffer: winrt.windows.storage.streams.IBuffer, count: int, options: winrt.windows.storage.streams.InputStreamOptions) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def seek(position: int) -> None:
        ...
    def write_async(buffer: winrt.windows.storage.streams.IBuffer) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class VideoProperties(IStorageItemExtraProperties, _winrt.winrt_base):
    ...
    year: int
    title: str
    subtitle: str
    rating: int
    publisher: str
    bitrate: int
    directors: winrt.windows.foundation.collections.IVector[str]
    duration: winrt.windows.foundation.TimeSpan
    height: int
    keywords: winrt.windows.foundation.collections.IVector[str]
    latitude: typing.Optional[float]
    longitude: typing.Optional[float]
    orientation: VideoOrientation
    producers: winrt.windows.foundation.collections.IVector[str]
    width: int
    writers: winrt.windows.foundation.collections.IVector[str]
    def retrieve_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMap[str, _winrt.winrt_base]]:
        ...
    def save_properties_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def save_properties_async(properties_to_save: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, _winrt.winrt_base]]) -> winrt.windows.foundation.IAsyncAction:
        ...

class IStorageItemExtraProperties(_winrt.winrt_base):
    ...
    def retrieve_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMap[str, _winrt.winrt_base]]:
        ...
    def save_properties_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def save_properties_async(properties_to_save: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, _winrt.winrt_base]]) -> winrt.windows.foundation.IAsyncAction:
        ...

