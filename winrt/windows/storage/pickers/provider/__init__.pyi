# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage
except Exception:
    pass

class AddFileResult(enum.IntEnum):
    ADDED = 0
    ALREADY_ADDED = 1
    NOT_ALLOWED = 2
    UNAVAILABLE = 3

class FileSelectionMode(enum.IntEnum):
    SINGLE = 0
    MULTIPLE = 1

class SetFileNameResult(enum.IntEnum):
    SUCCEEDED = 0
    NOT_ALLOWED = 1
    UNAVAILABLE = 2

class FileOpenPickerUI(_winrt.winrt_base):
    ...
    title: str
    allowed_file_types: winrt.windows.foundation.collections.IVectorView[str]
    selection_mode: FileSelectionMode
    settings_identifier: str
    def add_file(id: str, file: winrt.windows.storage.IStorageFile) -> AddFileResult:
        ...
    def can_add_file(file: winrt.windows.storage.IStorageFile) -> bool:
        ...
    def contains_file(id: str) -> bool:
        ...
    def remove_file(id: str) -> None:
        ...
    def add_closing(handler: winrt.windows.foundation.TypedEventHandler[FileOpenPickerUI, PickerClosingEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_closing(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_file_removed(handler: winrt.windows.foundation.TypedEventHandler[FileOpenPickerUI, FileRemovedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_file_removed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class FileRemovedEventArgs(_winrt.winrt_base):
    ...
    id: str

class FileSavePickerUI(_winrt.winrt_base):
    ...
    title: str
    allowed_file_types: winrt.windows.foundation.collections.IVectorView[str]
    file_name: str
    settings_identifier: str
    def try_set_file_name(value: str) -> SetFileNameResult:
        ...
    def add_file_name_changed(handler: winrt.windows.foundation.TypedEventHandler[FileSavePickerUI, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_file_name_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_target_file_requested(handler: winrt.windows.foundation.TypedEventHandler[FileSavePickerUI, TargetFileRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_target_file_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PickerClosingDeferral(_winrt.winrt_base):
    ...
    def complete() -> None:
        ...

class PickerClosingEventArgs(_winrt.winrt_base):
    ...
    closing_operation: PickerClosingOperation
    is_canceled: bool

class PickerClosingOperation(_winrt.winrt_base):
    ...
    deadline: winrt.windows.foundation.DateTime
    def get_deferral() -> PickerClosingDeferral:
        ...

class TargetFileRequest(_winrt.winrt_base):
    ...
    target_file: winrt.windows.storage.IStorageFile
    def get_deferral() -> TargetFileRequestDeferral:
        ...

class TargetFileRequestDeferral(_winrt.winrt_base):
    ...
    def complete() -> None:
        ...

class TargetFileRequestedEventArgs(_winrt.winrt_base):
    ...
    request: TargetFileRequest

