# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

class AccessCacheOptions(enum.IntFlag):
    NONE = 0
    DISALLOW_USER_INPUT = 0x1
    FAST_LOCATIONS_ONLY = 0x2
    USE_READ_ONLY_CACHED_COPY = 0x4
    SUPPRESS_ACCESS_TIME_UPDATE = 0x8

class RecentStorageItemVisibility(enum.IntEnum):
    APP_ONLY = 0
    APP_AND_SYSTEM = 1

class AccessListEntry(_winrt.winrt_base):
    ...

class AccessListEntryView(winrt.windows.foundation.collections.IVectorView[AccessListEntry], winrt.windows.foundation.collections.IIterable[AccessListEntry], _winrt.winrt_base):
    ...
    size: int
    def first() -> winrt.windows.foundation.collections.IIterator[AccessListEntry]:
        ...
    def get_at(index: int) -> AccessListEntry:
        ...
    def get_many(start_index: int, items_size: int) -> typing.Tuple[int, typing.List[AccessListEntry]]:
        ...
    def index_of(value: AccessListEntry) -> typing.Tuple[bool, int]:
        ...

class ItemRemovedEventArgs(_winrt.winrt_base):
    ...
    removed_entry: AccessListEntry

class StorageApplicationPermissions(_winrt.winrt_base):
    ...
    future_access_list: StorageItemAccessList
    most_recently_used_list: StorageItemMostRecentlyUsedList
    def get_future_access_list_for_user(user: winrt.windows.system.User) -> StorageItemAccessList:
        ...
    def get_most_recently_used_list_for_user(user: winrt.windows.system.User) -> StorageItemMostRecentlyUsedList:
        ...

class StorageItemAccessList(IStorageItemAccessList, _winrt.winrt_base):
    ...
    entries: AccessListEntryView
    maximum_items_allowed: int
    def add(file: winrt.windows.storage.IStorageItem) -> str:
        ...
    def add(file: winrt.windows.storage.IStorageItem, metadata: str) -> str:
        ...
    def add_or_replace(token: str, file: winrt.windows.storage.IStorageItem) -> None:
        ...
    def add_or_replace(token: str, file: winrt.windows.storage.IStorageItem, metadata: str) -> None:
        ...
    def check_access(file: winrt.windows.storage.IStorageItem) -> bool:
        ...
    def clear() -> None:
        ...
    def contains_item(token: str) -> bool:
        ...
    def get_file_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFile]:
        ...
    def get_file_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFile]:
        ...
    def get_folder_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFolder]:
        ...
    def get_folder_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFolder]:
        ...
    def get_item_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.IStorageItem]:
        ...
    def get_item_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.IStorageItem]:
        ...
    def remove(token: str) -> None:
        ...

class StorageItemMostRecentlyUsedList(IStorageItemAccessList, _winrt.winrt_base):
    ...
    entries: AccessListEntryView
    maximum_items_allowed: int
    def add(file: winrt.windows.storage.IStorageItem) -> str:
        ...
    def add(file: winrt.windows.storage.IStorageItem, metadata: str) -> str:
        ...
    def add(file: winrt.windows.storage.IStorageItem, metadata: str, visibility: RecentStorageItemVisibility) -> str:
        ...
    def add_or_replace(token: str, file: winrt.windows.storage.IStorageItem) -> None:
        ...
    def add_or_replace(token: str, file: winrt.windows.storage.IStorageItem, metadata: str) -> None:
        ...
    def add_or_replace(token: str, file: winrt.windows.storage.IStorageItem, metadata: str, visibility: RecentStorageItemVisibility) -> None:
        ...
    def check_access(file: winrt.windows.storage.IStorageItem) -> bool:
        ...
    def clear() -> None:
        ...
    def contains_item(token: str) -> bool:
        ...
    def get_file_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFile]:
        ...
    def get_file_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFile]:
        ...
    def get_folder_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFolder]:
        ...
    def get_folder_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFolder]:
        ...
    def get_item_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.IStorageItem]:
        ...
    def get_item_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.IStorageItem]:
        ...
    def remove(token: str) -> None:
        ...
    def add_item_removed(handler: winrt.windows.foundation.TypedEventHandler[StorageItemMostRecentlyUsedList, ItemRemovedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_item_removed(event_cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class IStorageItemAccessList(_winrt.winrt_base):
    ...
    entries: AccessListEntryView
    maximum_items_allowed: int
    def add(file: winrt.windows.storage.IStorageItem) -> str:
        ...
    def add(file: winrt.windows.storage.IStorageItem, metadata: str) -> str:
        ...
    def add_or_replace(token: str, file: winrt.windows.storage.IStorageItem) -> None:
        ...
    def add_or_replace(token: str, file: winrt.windows.storage.IStorageItem, metadata: str) -> None:
        ...
    def check_access(file: winrt.windows.storage.IStorageItem) -> bool:
        ...
    def clear() -> None:
        ...
    def contains_item(token: str) -> bool:
        ...
    def get_file_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFile]:
        ...
    def get_file_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFile]:
        ...
    def get_folder_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFolder]:
        ...
    def get_folder_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFolder]:
        ...
    def get_item_async(token: str) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.IStorageItem]:
        ...
    def get_item_async(token: str, options: AccessCacheOptions) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.IStorageItem]:
        ...
    def remove(token: str) -> None:
        ...

