# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class CompressAlgorithm(enum.IntEnum):
    INVALID_ALGORITHM = 0
    NULL_ALGORITHM = 1
    MSZIP = 2
    XPRESS = 3
    XPRESS_HUFF = 4
    LZMS = 5

class Compressor(winrt.windows.storage.streams.IOutputStream, winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    def close() -> None:
        ...
    def detach_stream() -> winrt.windows.storage.streams.IOutputStream:
        ...
    def finish_async() -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def flush_async() -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def write_async(buffer: winrt.windows.storage.streams.IBuffer) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class Decompressor(winrt.windows.storage.streams.IInputStream, winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    def close() -> None:
        ...
    def detach_stream() -> winrt.windows.storage.streams.IInputStream:
        ...
    def read_async(buffer: winrt.windows.storage.streams.IBuffer, count: int, options: winrt.windows.storage.streams.InputStreamOptions) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...

