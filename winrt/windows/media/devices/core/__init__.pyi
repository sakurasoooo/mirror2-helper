# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.foundation.numerics
except Exception:
    pass

try:
    import winrt.windows.media.mediaproperties
except Exception:
    pass

try:
    import winrt.windows.perception.spatial
except Exception:
    pass

class FrameFlashMode(enum.IntEnum):
    DISABLE = 0
    ENABLE = 1
    GLOBAL = 2

class CameraIntrinsics(_winrt.winrt_base):
    ...
    focal_length: winrt.windows.foundation.numerics.Vector2
    image_height: int
    image_width: int
    principal_point: winrt.windows.foundation.numerics.Vector2
    radial_distortion: winrt.windows.foundation.numerics.Vector3
    tangential_distortion: winrt.windows.foundation.numerics.Vector2
    undistorted_projection_transform: winrt.windows.foundation.numerics.Matrix4x4
    def distort_point(input: winrt.windows.foundation.Point) -> winrt.windows.foundation.Point:
        ...
    def distort_points(inputs: typing.Sequence[winrt.windows.foundation.Point], results_size: int) -> typing.List[winrt.windows.foundation.Point]:
        ...
    def project_many_onto_frame(coordinates: typing.Sequence[winrt.windows.foundation.numerics.Vector3], results_size: int) -> typing.List[winrt.windows.foundation.Point]:
        ...
    def project_onto_frame(coordinate: winrt.windows.foundation.numerics.Vector3) -> winrt.windows.foundation.Point:
        ...
    def undistort_point(input: winrt.windows.foundation.Point) -> winrt.windows.foundation.Point:
        ...
    def undistort_points(inputs: typing.Sequence[winrt.windows.foundation.Point], results_size: int) -> typing.List[winrt.windows.foundation.Point]:
        ...
    def unproject_at_unit_depth(pixel_coordinate: winrt.windows.foundation.Point) -> winrt.windows.foundation.numerics.Vector2:
        ...
    def unproject_pixels_at_unit_depth(pixel_coordinates: typing.Sequence[winrt.windows.foundation.Point], results_size: int) -> typing.List[winrt.windows.foundation.numerics.Vector2]:
        ...

class DepthCorrelatedCoordinateMapper(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    def close() -> None:
        ...
    def map_point(source_point: winrt.windows.foundation.Point, target_coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem, target_camera_intrinsics: CameraIntrinsics) -> winrt.windows.foundation.Point:
        ...
    def map_points(source_points: typing.Sequence[winrt.windows.foundation.Point], target_coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem, target_camera_intrinsics: CameraIntrinsics, results_size: int) -> typing.List[winrt.windows.foundation.Point]:
        ...
    def unproject_point(source_point: winrt.windows.foundation.Point, target_coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem) -> winrt.windows.foundation.numerics.Vector3:
        ...
    def unproject_points(source_points: typing.Sequence[winrt.windows.foundation.Point], target_coordinate_system: winrt.windows.perception.spatial.SpatialCoordinateSystem, results_size: int) -> typing.List[winrt.windows.foundation.numerics.Vector3]:
        ...

class FrameControlCapabilities(_winrt.winrt_base):
    ...
    exposure: FrameExposureCapabilities
    exposure_compensation: FrameExposureCompensationCapabilities
    focus: FrameFocusCapabilities
    iso_speed: FrameIsoSpeedCapabilities
    photo_confirmation_supported: bool
    flash: FrameFlashCapabilities

class FrameController(_winrt.winrt_base):
    ...
    photo_confirmation_enabled: typing.Optional[bool]
    exposure_compensation_control: FrameExposureCompensationControl
    exposure_control: FrameExposureControl
    focus_control: FrameFocusControl
    iso_speed_control: FrameIsoSpeedControl
    flash_control: FrameFlashControl

class FrameExposureCapabilities(_winrt.winrt_base):
    ...
    max: winrt.windows.foundation.TimeSpan
    min: winrt.windows.foundation.TimeSpan
    step: winrt.windows.foundation.TimeSpan
    supported: bool

class FrameExposureCompensationCapabilities(_winrt.winrt_base):
    ...
    max: float
    min: float
    step: float
    supported: bool

class FrameExposureCompensationControl(_winrt.winrt_base):
    ...
    value: typing.Optional[float]

class FrameExposureControl(_winrt.winrt_base):
    ...
    value: typing.Optional[winrt.windows.foundation.TimeSpan]
    auto: bool

class FrameFlashCapabilities(_winrt.winrt_base):
    ...
    power_supported: bool
    red_eye_reduction_supported: bool
    supported: bool

class FrameFlashControl(_winrt.winrt_base):
    ...
    red_eye_reduction: bool
    power_percent: float
    mode: FrameFlashMode
    auto: bool

class FrameFocusCapabilities(_winrt.winrt_base):
    ...
    max: int
    min: int
    step: int
    supported: bool

class FrameFocusControl(_winrt.winrt_base):
    ...
    value: typing.Optional[int]

class FrameIsoSpeedCapabilities(_winrt.winrt_base):
    ...
    max: int
    min: int
    step: int
    supported: bool

class FrameIsoSpeedControl(_winrt.winrt_base):
    ...
    value: typing.Optional[int]
    auto: bool

class VariablePhotoSequenceController(_winrt.winrt_base):
    ...
    photos_per_second_limit: float
    desired_frame_controllers: winrt.windows.foundation.collections.IVector[FrameController]
    frame_capabilities: FrameControlCapabilities
    max_photos_per_second: float
    supported: bool
    def get_current_frame_rate() -> winrt.windows.media.mediaproperties.MediaRatio:
        ...
    def get_highest_concurrent_frame_rate(capture_properties: winrt.windows.media.mediaproperties.IMediaEncodingProperties) -> winrt.windows.media.mediaproperties.MediaRatio:
        ...

