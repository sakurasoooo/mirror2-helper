# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.globalization
except Exception:
    pass

try:
    import winrt.windows.storage
except Exception:
    pass

class SpeechContinuousRecognitionMode(enum.IntEnum):
    DEFAULT = 0
    PAUSE_ON_RECOGNITION = 1

class SpeechRecognitionAudioProblem(enum.IntEnum):
    NONE = 0
    TOO_NOISY = 1
    NO_SIGNAL = 2
    TOO_LOUD = 3
    TOO_QUIET = 4
    TOO_FAST = 5
    TOO_SLOW = 6

class SpeechRecognitionConfidence(enum.IntEnum):
    HIGH = 0
    MEDIUM = 1
    LOW = 2
    REJECTED = 3

class SpeechRecognitionConstraintProbability(enum.IntEnum):
    DEFAULT = 0
    MIN = 1
    MAX = 2

class SpeechRecognitionConstraintType(enum.IntEnum):
    TOPIC = 0
    LIST = 1
    GRAMMAR = 2
    VOICE_COMMAND_DEFINITION = 3

class SpeechRecognitionResultStatus(enum.IntEnum):
    SUCCESS = 0
    TOPIC_LANGUAGE_NOT_SUPPORTED = 1
    GRAMMAR_LANGUAGE_MISMATCH = 2
    GRAMMAR_COMPILATION_FAILURE = 3
    AUDIO_QUALITY_FAILURE = 4
    USER_CANCELED = 5
    UNKNOWN = 6
    TIMEOUT_EXCEEDED = 7
    PAUSE_LIMIT_EXCEEDED = 8
    NETWORK_FAILURE = 9
    MICROPHONE_UNAVAILABLE = 10

class SpeechRecognitionScenario(enum.IntEnum):
    WEB_SEARCH = 0
    DICTATION = 1
    FORM_FILLING = 2

class SpeechRecognizerState(enum.IntEnum):
    IDLE = 0
    CAPTURING = 1
    PROCESSING = 2
    SOUND_STARTED = 3
    SOUND_ENDED = 4
    SPEECH_DETECTED = 5
    PAUSED = 6

class SpeechContinuousRecognitionCompletedEventArgs(_winrt.winrt_base):
    ...
    status: SpeechRecognitionResultStatus

class SpeechContinuousRecognitionResultGeneratedEventArgs(_winrt.winrt_base):
    ...
    result: SpeechRecognitionResult

class SpeechContinuousRecognitionSession(_winrt.winrt_base):
    ...
    auto_stop_silence_timeout: winrt.windows.foundation.TimeSpan
    def cancel_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def pause_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def resume() -> None:
        ...
    def start_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def start_async(mode: SpeechContinuousRecognitionMode) -> winrt.windows.foundation.IAsyncAction:
        ...
    def stop_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def add_completed(value: winrt.windows.foundation.TypedEventHandler[SpeechContinuousRecognitionSession, SpeechContinuousRecognitionCompletedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_completed(value: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_result_generated(value: winrt.windows.foundation.TypedEventHandler[SpeechContinuousRecognitionSession, SpeechContinuousRecognitionResultGeneratedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_result_generated(value: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class SpeechRecognitionCompilationResult(_winrt.winrt_base):
    ...
    status: SpeechRecognitionResultStatus

class SpeechRecognitionGrammarFileConstraint(ISpeechRecognitionConstraint, _winrt.winrt_base):
    ...
    tag: str
    probability: SpeechRecognitionConstraintProbability
    is_enabled: bool
    type: SpeechRecognitionConstraintType
    grammar_file: winrt.windows.storage.StorageFile

class SpeechRecognitionHypothesis(_winrt.winrt_base):
    ...
    text: str

class SpeechRecognitionHypothesisGeneratedEventArgs(_winrt.winrt_base):
    ...
    hypothesis: SpeechRecognitionHypothesis

class SpeechRecognitionListConstraint(ISpeechRecognitionConstraint, _winrt.winrt_base):
    ...
    tag: str
    probability: SpeechRecognitionConstraintProbability
    is_enabled: bool
    type: SpeechRecognitionConstraintType
    commands: winrt.windows.foundation.collections.IVector[str]

class SpeechRecognitionQualityDegradingEventArgs(_winrt.winrt_base):
    ...
    problem: SpeechRecognitionAudioProblem

class SpeechRecognitionResult(_winrt.winrt_base):
    ...
    confidence: SpeechRecognitionConfidence
    constraint: ISpeechRecognitionConstraint
    raw_confidence: float
    rule_path: winrt.windows.foundation.collections.IVectorView[str]
    semantic_interpretation: SpeechRecognitionSemanticInterpretation
    status: SpeechRecognitionResultStatus
    text: str
    phrase_duration: winrt.windows.foundation.TimeSpan
    phrase_start_time: winrt.windows.foundation.DateTime
    def get_alternates(max_alternates: int) -> winrt.windows.foundation.collections.IVectorView[SpeechRecognitionResult]:
        ...

class SpeechRecognitionSemanticInterpretation(_winrt.winrt_base):
    ...
    properties: winrt.windows.foundation.collections.IMapView[str, winrt.windows.foundation.collections.IVectorView[str]]

class SpeechRecognitionTopicConstraint(ISpeechRecognitionConstraint, _winrt.winrt_base):
    ...
    tag: str
    probability: SpeechRecognitionConstraintProbability
    is_enabled: bool
    type: SpeechRecognitionConstraintType
    scenario: SpeechRecognitionScenario
    topic_hint: str

class SpeechRecognitionVoiceCommandDefinitionConstraint(ISpeechRecognitionConstraint, _winrt.winrt_base):
    ...
    tag: str
    probability: SpeechRecognitionConstraintProbability
    is_enabled: bool
    type: SpeechRecognitionConstraintType

class SpeechRecognizer(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    constraints: winrt.windows.foundation.collections.IVector[ISpeechRecognitionConstraint]
    current_language: winrt.windows.globalization.Language
    timeouts: SpeechRecognizerTimeouts
    u_i_options: SpeechRecognizerUIOptions
    continuous_recognition_session: SpeechContinuousRecognitionSession
    state: SpeechRecognizerState
    supported_grammar_languages: winrt.windows.foundation.collections.IVectorView[winrt.windows.globalization.Language]
    supported_topic_languages: winrt.windows.foundation.collections.IVectorView[winrt.windows.globalization.Language]
    system_speech_language: winrt.windows.globalization.Language
    def close() -> None:
        ...
    def compile_constraints_async() -> winrt.windows.foundation.IAsyncOperation[SpeechRecognitionCompilationResult]:
        ...
    def recognize_async() -> winrt.windows.foundation.IAsyncOperation[SpeechRecognitionResult]:
        ...
    def recognize_with_u_i_async() -> winrt.windows.foundation.IAsyncOperation[SpeechRecognitionResult]:
        ...
    def stop_recognition_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def try_set_system_speech_language_async(speech_language: winrt.windows.globalization.Language) -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def add_recognition_quality_degrading(speech_recognition_quality_degrading_handler: winrt.windows.foundation.TypedEventHandler[SpeechRecognizer, SpeechRecognitionQualityDegradingEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_recognition_quality_degrading(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_state_changed(state_changed_handler: winrt.windows.foundation.TypedEventHandler[SpeechRecognizer, SpeechRecognizerStateChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_state_changed(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_hypothesis_generated(value: winrt.windows.foundation.TypedEventHandler[SpeechRecognizer, SpeechRecognitionHypothesisGeneratedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_hypothesis_generated(value: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class SpeechRecognizerStateChangedEventArgs(_winrt.winrt_base):
    ...
    state: SpeechRecognizerState

class SpeechRecognizerTimeouts(_winrt.winrt_base):
    ...
    initial_silence_timeout: winrt.windows.foundation.TimeSpan
    end_silence_timeout: winrt.windows.foundation.TimeSpan
    babble_timeout: winrt.windows.foundation.TimeSpan

class SpeechRecognizerUIOptions(_winrt.winrt_base):
    ...
    show_confirmation: bool
    is_read_back_enabled: bool
    example_text: str
    audible_prompt: str

class ISpeechRecognitionConstraint(_winrt.winrt_base):
    ...
    is_enabled: bool
    probability: SpeechRecognitionConstraintProbability
    tag: str
    type: SpeechRecognitionConstraintType

