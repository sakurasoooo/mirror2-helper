# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.enumeration
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

try:
    import winrt.windows.ui.popups
except Exception:
    pass

class DialAppLaunchResult(enum.IntEnum):
    LAUNCHED = 0
    FAILED_TO_LAUNCH = 1
    NOT_FOUND = 2
    NETWORK_FAILURE = 3

class DialAppState(enum.IntEnum):
    UNKNOWN = 0
    STOPPED = 1
    RUNNING = 2
    NETWORK_FAILURE = 3

class DialAppStopResult(enum.IntEnum):
    STOPPED = 0
    STOP_FAILED = 1
    OPERATION_NOT_SUPPORTED = 2
    NETWORK_FAILURE = 3

class DialDeviceDisplayStatus(enum.IntEnum):
    NONE = 0
    CONNECTING = 1
    CONNECTED = 2
    DISCONNECTING = 3
    DISCONNECTED = 4
    ERROR = 5

class DialApp(_winrt.winrt_base):
    ...
    app_name: str
    def get_app_state_async() -> winrt.windows.foundation.IAsyncOperation[DialAppStateDetails]:
        ...
    def request_launch_async(app_argument: str) -> winrt.windows.foundation.IAsyncOperation[DialAppLaunchResult]:
        ...
    def stop_async() -> winrt.windows.foundation.IAsyncOperation[DialAppStopResult]:
        ...

class DialAppStateDetails(_winrt.winrt_base):
    ...
    full_xml: str
    state: DialAppState

class DialDevice(_winrt.winrt_base):
    ...
    id: str
    friendly_name: str
    thumbnail: winrt.windows.storage.streams.IRandomAccessStreamReference
    def device_info_supports_dial_async(device: winrt.windows.devices.enumeration.DeviceInformation) -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def from_id_async(value: str) -> winrt.windows.foundation.IAsyncOperation[DialDevice]:
        ...
    def get_device_selector(app_name: str) -> str:
        ...
    def get_dial_app(app_name: str) -> DialApp:
        ...

class DialDevicePicker(_winrt.winrt_base):
    ...
    appearance: winrt.windows.devices.enumeration.DevicePickerAppearance
    filter: DialDevicePickerFilter
    def hide() -> None:
        ...
    def pick_single_dial_device_async(selection: winrt.windows.foundation.Rect) -> winrt.windows.foundation.IAsyncOperation[DialDevice]:
        ...
    def pick_single_dial_device_async(selection: winrt.windows.foundation.Rect, preferred_placement: winrt.windows.ui.popups.Placement) -> winrt.windows.foundation.IAsyncOperation[DialDevice]:
        ...
    def set_display_status(device: DialDevice, status: DialDeviceDisplayStatus) -> None:
        ...
    def show(selection: winrt.windows.foundation.Rect) -> None:
        ...
    def show(selection: winrt.windows.foundation.Rect, preferred_placement: winrt.windows.ui.popups.Placement) -> None:
        ...
    def add_dial_device_picker_dismissed(handler: winrt.windows.foundation.TypedEventHandler[DialDevicePicker, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_dial_device_picker_dismissed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_dial_device_selected(handler: winrt.windows.foundation.TypedEventHandler[DialDevicePicker, DialDeviceSelectedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_dial_device_selected(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_disconnect_button_clicked(handler: winrt.windows.foundation.TypedEventHandler[DialDevicePicker, DialDisconnectButtonClickedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_disconnect_button_clicked(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class DialDevicePickerFilter(_winrt.winrt_base):
    ...
    supported_app_names: winrt.windows.foundation.collections.IVector[str]

class DialDeviceSelectedEventArgs(_winrt.winrt_base):
    ...
    selected_dial_device: DialDevice

class DialDisconnectButtonClickedEventArgs(_winrt.winrt_base):
    ...
    device: DialDevice

class DialReceiverApp(_winrt.winrt_base):
    ...
    current: DialReceiverApp
    def get_additional_data_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMap[str, str]]:
        ...
    def get_unique_device_name_async() -> winrt.windows.foundation.IAsyncOperation[str]:
        ...
    def set_additional_data_async(additional_data: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, str]]) -> winrt.windows.foundation.IAsyncAction:
        ...

