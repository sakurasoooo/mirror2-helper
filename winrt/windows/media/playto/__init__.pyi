# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class PlayToConnectionError(enum.IntEnum):
    NONE = 0
    DEVICE_NOT_RESPONDING = 1
    DEVICE_ERROR = 2
    DEVICE_LOCKED = 3
    PROTECTED_PLAYBACK_FAILED = 4

class PlayToConnectionState(enum.IntEnum):
    DISCONNECTED = 0
    CONNECTED = 1
    RENDERING = 2

class CurrentTimeChangeRequestedEventArgs(_winrt.winrt_base):
    ...
    time: winrt.windows.foundation.TimeSpan

class MuteChangeRequestedEventArgs(_winrt.winrt_base):
    ...
    mute: bool

class PlayToConnection(_winrt.winrt_base):
    ...
    state: PlayToConnectionState
    def add_error(handler: winrt.windows.foundation.TypedEventHandler[PlayToConnection, PlayToConnectionErrorEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_error(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_state_changed(handler: winrt.windows.foundation.TypedEventHandler[PlayToConnection, PlayToConnectionStateChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_state_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_transferred(handler: winrt.windows.foundation.TypedEventHandler[PlayToConnection, PlayToConnectionTransferredEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_transferred(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PlayToConnectionErrorEventArgs(_winrt.winrt_base):
    ...
    code: PlayToConnectionError
    message: str

class PlayToConnectionStateChangedEventArgs(_winrt.winrt_base):
    ...
    current_state: PlayToConnectionState
    previous_state: PlayToConnectionState

class PlayToConnectionTransferredEventArgs(_winrt.winrt_base):
    ...
    current_source: PlayToSource
    previous_source: PlayToSource

class PlayToManager(_winrt.winrt_base):
    ...
    default_source_selection: bool
    def get_for_current_view() -> PlayToManager:
        ...
    def show_play_to_u_i() -> None:
        ...
    def add_source_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToManager, PlayToSourceRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_selected(handler: winrt.windows.foundation.TypedEventHandler[PlayToManager, PlayToSourceSelectedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_selected(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PlayToReceiver(_winrt.winrt_base):
    ...
    supports_video: bool
    supports_image: bool
    supports_audio: bool
    friendly_name: str
    properties: winrt.windows.foundation.collections.IPropertySet
    def notify_duration_change(duration: winrt.windows.foundation.TimeSpan) -> None:
        ...
    def notify_ended() -> None:
        ...
    def notify_error() -> None:
        ...
    def notify_loaded_metadata() -> None:
        ...
    def notify_paused() -> None:
        ...
    def notify_playing() -> None:
        ...
    def notify_rate_change(rate: float) -> None:
        ...
    def notify_seeked() -> None:
        ...
    def notify_seeking() -> None:
        ...
    def notify_stopped() -> None:
        ...
    def notify_time_update(current_time: winrt.windows.foundation.TimeSpan) -> None:
        ...
    def notify_volume_change(volume: float, mute: bool) -> None:
        ...
    def start_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def stop_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def add_current_time_change_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, CurrentTimeChangeRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_current_time_change_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_mute_change_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, MuteChangeRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_mute_change_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pause_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_pause_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_play_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_play_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_playback_rate_change_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, PlaybackRateChangeRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_playback_rate_change_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_change_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, SourceChangeRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_change_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stop_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_stop_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_time_update_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_time_update_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_volume_change_requested(handler: winrt.windows.foundation.TypedEventHandler[PlayToReceiver, VolumeChangeRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_volume_change_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PlayToSource(_winrt.winrt_base):
    ...
    next: PlayToSource
    connection: PlayToConnection
    preferred_source_uri: winrt.windows.foundation.Uri
    def play_next() -> None:
        ...

class PlayToSourceDeferral(_winrt.winrt_base):
    ...
    def complete() -> None:
        ...

class PlayToSourceRequest(_winrt.winrt_base):
    ...
    deadline: winrt.windows.foundation.DateTime
    def display_error_string(error_string: str) -> None:
        ...
    def get_deferral() -> PlayToSourceDeferral:
        ...
    def set_source(value: PlayToSource) -> None:
        ...

class PlayToSourceRequestedEventArgs(_winrt.winrt_base):
    ...
    source_request: PlayToSourceRequest

class PlayToSourceSelectedEventArgs(_winrt.winrt_base):
    ...
    friendly_name: str
    icon: winrt.windows.storage.streams.IRandomAccessStreamWithContentType
    supports_audio: bool
    supports_image: bool
    supports_video: bool

class PlaybackRateChangeRequestedEventArgs(_winrt.winrt_base):
    ...
    rate: float

class SourceChangeRequestedEventArgs(_winrt.winrt_base):
    ...
    album: str
    author: str
    date: typing.Optional[winrt.windows.foundation.DateTime]
    description: str
    genre: str
    properties: winrt.windows.foundation.collections.IMapView[str, _winrt.winrt_base]
    rating: typing.Optional[int]
    stream: winrt.windows.storage.streams.IRandomAccessStreamWithContentType
    thumbnail: winrt.windows.storage.streams.IRandomAccessStreamReference
    title: str

class VolumeChangeRequestedEventArgs(_winrt.winrt_base):
    ...
    volume: float

