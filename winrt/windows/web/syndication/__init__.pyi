# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.data.xml.dom
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.security.credentials
except Exception:
    pass

class SyndicationErrorStatus(enum.IntEnum):
    UNKNOWN = 0
    MISSING_REQUIRED_ELEMENT = 1
    MISSING_REQUIRED_ATTRIBUTE = 2
    INVALID_XML = 3
    UNEXPECTED_CONTENT = 4
    UNSUPPORTED_FORMAT = 5

class SyndicationFormat(enum.IntEnum):
    ATOM10 = 0
    RSS20 = 1
    RSS10 = 2
    RSS092 = 3
    RSS091 = 4
    ATOM03 = 5

class SyndicationTextType(enum.IntEnum):
    TEXT = 0
    HTML = 1
    XHTML = 2

class RetrievalProgress(_winrt.winrt_base):
    ...

class TransferProgress(_winrt.winrt_base):
    ...

class SyndicationAttribute(_winrt.winrt_base):
    ...
    value: str
    namespace: str
    name: str

class SyndicationCategory(ISyndicationNode, _winrt.winrt_base):
    ...
    term: str
    scheme: str
    label: str
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class SyndicationClient(ISyndicationClient, _winrt.winrt_base):
    ...
    timeout: int
    server_credential: winrt.windows.security.credentials.PasswordCredential
    proxy_credential: winrt.windows.security.credentials.PasswordCredential
    max_response_buffer_size: int
    bypass_cache_on_retrieve: bool
    def retrieve_feed_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[SyndicationFeed, RetrievalProgress]:
        ...
    def set_request_header(name: str, value: str) -> None:
        ...

class SyndicationContent(ISyndicationText, ISyndicationNode, _winrt.winrt_base):
    ...
    source_uri: winrt.windows.foundation.Uri
    node_value: str
    base_uri: winrt.windows.foundation.Uri
    language: str
    node_name: str
    node_namespace: str
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    text: str
    type: str
    xml: winrt.windows.data.xml.dom.XmlDocument
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class SyndicationError(_winrt.winrt_base):
    ...
    def get_status(hresult: int) -> SyndicationErrorStatus:
        ...

class SyndicationFeed(ISyndicationNode, _winrt.winrt_base):
    ...
    title: ISyndicationText
    subtitle: ISyndicationText
    rights: ISyndicationText
    generator: SyndicationGenerator
    last_updated_time: winrt.windows.foundation.DateTime
    image_uri: winrt.windows.foundation.Uri
    icon_uri: winrt.windows.foundation.Uri
    id: str
    first_uri: winrt.windows.foundation.Uri
    items: winrt.windows.foundation.collections.IVector[SyndicationItem]
    last_uri: winrt.windows.foundation.Uri
    links: winrt.windows.foundation.collections.IVector[SyndicationLink]
    next_uri: winrt.windows.foundation.Uri
    previous_uri: winrt.windows.foundation.Uri
    categories: winrt.windows.foundation.collections.IVector[SyndicationCategory]
    source_format: SyndicationFormat
    contributors: winrt.windows.foundation.collections.IVector[SyndicationPerson]
    authors: winrt.windows.foundation.collections.IVector[SyndicationPerson]
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...
    def load(feed: str) -> None:
        ...
    def load_from_xml(feed_document: winrt.windows.data.xml.dom.XmlDocument) -> None:
        ...

class SyndicationGenerator(ISyndicationNode, _winrt.winrt_base):
    ...
    version: str
    uri: winrt.windows.foundation.Uri
    text: str
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class SyndicationItem(ISyndicationNode, _winrt.winrt_base):
    ...
    title: ISyndicationText
    source: SyndicationFeed
    rights: ISyndicationText
    summary: ISyndicationText
    published_date: winrt.windows.foundation.DateTime
    comments_uri: winrt.windows.foundation.Uri
    id: str
    last_updated_time: winrt.windows.foundation.DateTime
    content: SyndicationContent
    edit_uri: winrt.windows.foundation.Uri
    links: winrt.windows.foundation.collections.IVector[SyndicationLink]
    authors: winrt.windows.foundation.collections.IVector[SyndicationPerson]
    categories: winrt.windows.foundation.collections.IVector[SyndicationCategory]
    contributors: winrt.windows.foundation.collections.IVector[SyndicationPerson]
    item_uri: winrt.windows.foundation.Uri
    e_tag: str
    edit_media_uri: winrt.windows.foundation.Uri
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...
    def load(item: str) -> None:
        ...
    def load_from_xml(item_document: winrt.windows.data.xml.dom.XmlDocument) -> None:
        ...

class SyndicationLink(ISyndicationNode, _winrt.winrt_base):
    ...
    uri: winrt.windows.foundation.Uri
    title: str
    resource_language: str
    relationship: str
    media_type: str
    length: int
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class SyndicationNode(ISyndicationNode, _winrt.winrt_base):
    ...
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class SyndicationPerson(ISyndicationNode, _winrt.winrt_base):
    ...
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    uri: winrt.windows.foundation.Uri
    name: str
    email: str
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class SyndicationText(ISyndicationText, ISyndicationNode, _winrt.winrt_base):
    ...
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    xml: winrt.windows.data.xml.dom.XmlDocument
    type: str
    text: str
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class ISyndicationClient(_winrt.winrt_base):
    ...
    bypass_cache_on_retrieve: bool
    max_response_buffer_size: int
    proxy_credential: winrt.windows.security.credentials.PasswordCredential
    server_credential: winrt.windows.security.credentials.PasswordCredential
    timeout: int
    def retrieve_feed_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[SyndicationFeed, RetrievalProgress]:
        ...
    def set_request_header(name: str, value: str) -> None:
        ...

class ISyndicationNode(_winrt.winrt_base):
    ...
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    base_uri: winrt.windows.foundation.Uri
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    language: str
    node_name: str
    node_namespace: str
    node_value: str
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class ISyndicationText(ISyndicationNode, _winrt.winrt_base):
    ...
    text: str
    type: str
    xml: winrt.windows.data.xml.dom.XmlDocument
    attribute_extensions: winrt.windows.foundation.collections.IVector[SyndicationAttribute]
    base_uri: winrt.windows.foundation.Uri
    element_extensions: winrt.windows.foundation.collections.IVector[ISyndicationNode]
    language: str
    node_name: str
    node_namespace: str
    node_value: str
    def get_xml_document(format: SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

