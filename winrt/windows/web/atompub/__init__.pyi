# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.data.xml.dom
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.security.credentials
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

try:
    import winrt.windows.web.syndication
except Exception:
    pass

class AtomPubClient(winrt.windows.web.syndication.ISyndicationClient, _winrt.winrt_base):
    ...
    timeout: int
    server_credential: winrt.windows.security.credentials.PasswordCredential
    proxy_credential: winrt.windows.security.credentials.PasswordCredential
    max_response_buffer_size: int
    bypass_cache_on_retrieve: bool
    def cancel_async_operations() -> None:
        ...
    def create_media_resource_async(uri: winrt.windows.foundation.Uri, media_type: str, description: str, media_stream: winrt.windows.storage.streams.IInputStream) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.web.syndication.SyndicationItem, winrt.windows.web.syndication.TransferProgress]:
        ...
    def create_resource_async(uri: winrt.windows.foundation.Uri, description: str, item: winrt.windows.web.syndication.SyndicationItem) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.web.syndication.SyndicationItem, winrt.windows.web.syndication.TransferProgress]:
        ...
    def delete_resource_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncActionWithProgress[winrt.windows.web.syndication.TransferProgress]:
        ...
    def delete_resource_item_async(item: winrt.windows.web.syndication.SyndicationItem) -> winrt.windows.foundation.IAsyncActionWithProgress[winrt.windows.web.syndication.TransferProgress]:
        ...
    def retrieve_feed_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.web.syndication.SyndicationFeed, winrt.windows.web.syndication.RetrievalProgress]:
        ...
    def retrieve_media_resource_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, winrt.windows.web.syndication.RetrievalProgress]:
        ...
    def retrieve_resource_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.web.syndication.SyndicationItem, winrt.windows.web.syndication.RetrievalProgress]:
        ...
    def retrieve_service_document_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[ServiceDocument, winrt.windows.web.syndication.RetrievalProgress]:
        ...
    def set_request_header(name: str, value: str) -> None:
        ...
    def update_media_resource_async(uri: winrt.windows.foundation.Uri, media_type: str, media_stream: winrt.windows.storage.streams.IInputStream) -> winrt.windows.foundation.IAsyncActionWithProgress[winrt.windows.web.syndication.TransferProgress]:
        ...
    def update_resource_async(uri: winrt.windows.foundation.Uri, item: winrt.windows.web.syndication.SyndicationItem) -> winrt.windows.foundation.IAsyncActionWithProgress[winrt.windows.web.syndication.TransferProgress]:
        ...
    def update_resource_item_async(item: winrt.windows.web.syndication.SyndicationItem) -> winrt.windows.foundation.IAsyncActionWithProgress[winrt.windows.web.syndication.TransferProgress]:
        ...

class ResourceCollection(winrt.windows.web.syndication.ISyndicationNode, _winrt.winrt_base):
    ...
    accepts: winrt.windows.foundation.collections.IVectorView[str]
    categories: winrt.windows.foundation.collections.IVectorView[winrt.windows.web.syndication.SyndicationCategory]
    title: winrt.windows.web.syndication.ISyndicationText
    uri: winrt.windows.foundation.Uri
    base_uri: winrt.windows.foundation.Uri
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    attribute_extensions: winrt.windows.foundation.collections.IVector[winrt.windows.web.syndication.SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[winrt.windows.web.syndication.ISyndicationNode]
    def get_xml_document(format: winrt.windows.web.syndication.SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class ServiceDocument(winrt.windows.web.syndication.ISyndicationNode, _winrt.winrt_base):
    ...
    workspaces: winrt.windows.foundation.collections.IVectorView[Workspace]
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[winrt.windows.web.syndication.SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[winrt.windows.web.syndication.ISyndicationNode]
    def get_xml_document(format: winrt.windows.web.syndication.SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

class Workspace(winrt.windows.web.syndication.ISyndicationNode, _winrt.winrt_base):
    ...
    collections: winrt.windows.foundation.collections.IVectorView[ResourceCollection]
    title: winrt.windows.web.syndication.ISyndicationText
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winrt.windows.foundation.Uri
    attribute_extensions: winrt.windows.foundation.collections.IVector[winrt.windows.web.syndication.SyndicationAttribute]
    element_extensions: winrt.windows.foundation.collections.IVector[winrt.windows.web.syndication.ISyndicationNode]
    def get_xml_document(format: winrt.windows.web.syndication.SyndicationFormat) -> winrt.windows.data.xml.dom.XmlDocument:
        ...

