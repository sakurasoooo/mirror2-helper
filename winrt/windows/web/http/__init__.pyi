# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.networking.sockets
except Exception:
    pass

try:
    import winrt.windows.security.cryptography.certificates
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

try:
    import winrt.windows.web.http.filters
except Exception:
    pass

try:
    import winrt.windows.web.http.headers
except Exception:
    pass

class HttpCompletionOption(enum.IntEnum):
    RESPONSE_CONTENT_READ = 0
    RESPONSE_HEADERS_READ = 1

class HttpProgressStage(enum.IntEnum):
    NONE = 0
    DETECTING_PROXY = 10
    RESOLVING_NAME = 20
    CONNECTING_TO_SERVER = 30
    NEGOTIATING_SSL = 40
    SENDING_HEADERS = 50
    SENDING_CONTENT = 60
    WAITING_FOR_RESPONSE = 70
    RECEIVING_HEADERS = 80
    RECEIVING_CONTENT = 90

class HttpResponseMessageSource(enum.IntEnum):
    NONE = 0
    CACHE = 1
    NETWORK = 2

class HttpStatusCode(enum.IntEnum):
    NONE = 0
    CONTINUE = 100
    SWITCHING_PROTOCOLS = 101
    PROCESSING = 102
    OK = 200
    CREATED = 201
    ACCEPTED = 202
    NON_AUTHORITATIVE_INFORMATION = 203
    NO_CONTENT = 204
    RESET_CONTENT = 205
    PARTIAL_CONTENT = 206
    MULTI_STATUS = 207
    ALREADY_REPORTED = 208
    I_M_USED = 226
    MULTIPLE_CHOICES = 300
    MOVED_PERMANENTLY = 301
    FOUND = 302
    SEE_OTHER = 303
    NOT_MODIFIED = 304
    USE_PROXY = 305
    TEMPORARY_REDIRECT = 307
    PERMANENT_REDIRECT = 308
    BAD_REQUEST = 400
    UNAUTHORIZED = 401
    PAYMENT_REQUIRED = 402
    FORBIDDEN = 403
    NOT_FOUND = 404
    METHOD_NOT_ALLOWED = 405
    NOT_ACCEPTABLE = 406
    PROXY_AUTHENTICATION_REQUIRED = 407
    REQUEST_TIMEOUT = 408
    CONFLICT = 409
    GONE = 410
    LENGTH_REQUIRED = 411
    PRECONDITION_FAILED = 412
    REQUEST_ENTITY_TOO_LARGE = 413
    REQUEST_URI_TOO_LONG = 414
    UNSUPPORTED_MEDIA_TYPE = 415
    REQUESTED_RANGE_NOT_SATISFIABLE = 416
    EXPECTATION_FAILED = 417
    UNPROCESSABLE_ENTITY = 422
    LOCKED = 423
    FAILED_DEPENDENCY = 424
    UPGRADE_REQUIRED = 426
    PRECONDITION_REQUIRED = 428
    TOO_MANY_REQUESTS = 429
    REQUEST_HEADER_FIELDS_TOO_LARGE = 431
    INTERNAL_SERVER_ERROR = 500
    NOT_IMPLEMENTED = 501
    BAD_GATEWAY = 502
    SERVICE_UNAVAILABLE = 503
    GATEWAY_TIMEOUT = 504
    HTTP_VERSION_NOT_SUPPORTED = 505
    VARIANT_ALSO_NEGOTIATES = 506
    INSUFFICIENT_STORAGE = 507
    LOOP_DETECTED = 508
    NOT_EXTENDED = 510
    NETWORK_AUTHENTICATION_REQUIRED = 511

class HttpVersion(enum.IntEnum):
    NONE = 0
    HTTP10 = 1
    HTTP11 = 2
    HTTP20 = 3

class HttpProgress(_winrt.winrt_base):
    ...

class HttpBufferContent(IHttpContent, winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    headers: winrt.windows.web.http.headers.HttpContentHeaderCollection
    def buffer_all_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...
    def close() -> None:
        ...
    def read_as_buffer_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def read_as_input_stream_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, int]:
        ...
    def read_as_string_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[str, int]:
        ...
    def to_string() -> str:
        ...
    def try_compute_length() -> typing.Tuple[bool, int]:
        ...
    def write_to_stream_async(output_stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class HttpClient(winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    default_request_headers: winrt.windows.web.http.headers.HttpRequestHeaderCollection
    def close() -> None:
        ...
    def delete_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]:
        ...
    def get_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]:
        ...
    def get_async(uri: winrt.windows.foundation.Uri, completion_option: HttpCompletionOption) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]:
        ...
    def get_buffer_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, HttpProgress]:
        ...
    def get_input_stream_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, HttpProgress]:
        ...
    def get_string_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[str, HttpProgress]:
        ...
    def post_async(uri: winrt.windows.foundation.Uri, content: IHttpContent) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]:
        ...
    def put_async(uri: winrt.windows.foundation.Uri, content: IHttpContent) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]:
        ...
    def send_request_async(request: HttpRequestMessage) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]:
        ...
    def send_request_async(request: HttpRequestMessage, completion_option: HttpCompletionOption) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]:
        ...
    def to_string() -> str:
        ...
    def try_delete_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]:
        ...
    def try_get_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]:
        ...
    def try_get_async(uri: winrt.windows.foundation.Uri, completion_option: HttpCompletionOption) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]:
        ...
    def try_get_buffer_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpGetBufferResult, HttpProgress]:
        ...
    def try_get_input_stream_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpGetInputStreamResult, HttpProgress]:
        ...
    def try_get_string_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpGetStringResult, HttpProgress]:
        ...
    def try_post_async(uri: winrt.windows.foundation.Uri, content: IHttpContent) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]:
        ...
    def try_put_async(uri: winrt.windows.foundation.Uri, content: IHttpContent) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]:
        ...
    def try_send_request_async(request: HttpRequestMessage) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]:
        ...
    def try_send_request_async(request: HttpRequestMessage, completion_option: HttpCompletionOption) -> winrt.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]:
        ...

class HttpCookie(winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    value: str
    secure: bool
    http_only: bool
    expires: typing.Optional[winrt.windows.foundation.DateTime]
    domain: str
    name: str
    path: str
    def to_string() -> str:
        ...

class HttpCookieCollection(winrt.windows.foundation.collections.IVectorView[HttpCookie], winrt.windows.foundation.collections.IIterable[HttpCookie], _winrt.winrt_base):
    ...
    size: int
    def first() -> winrt.windows.foundation.collections.IIterator[HttpCookie]:
        ...
    def get_at(index: int) -> HttpCookie:
        ...
    def get_many(start_index: int, items_size: int) -> typing.Tuple[int, typing.List[HttpCookie]]:
        ...
    def index_of(value: HttpCookie) -> typing.Tuple[bool, int]:
        ...

class HttpCookieManager(_winrt.winrt_base):
    ...
    def delete_cookie(cookie: HttpCookie) -> None:
        ...
    def get_cookies(uri: winrt.windows.foundation.Uri) -> HttpCookieCollection:
        ...
    def set_cookie(cookie: HttpCookie) -> bool:
        ...
    def set_cookie(cookie: HttpCookie, third_party: bool) -> bool:
        ...

class HttpFormUrlEncodedContent(IHttpContent, winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    headers: winrt.windows.web.http.headers.HttpContentHeaderCollection
    def buffer_all_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...
    def close() -> None:
        ...
    def read_as_buffer_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def read_as_input_stream_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, int]:
        ...
    def read_as_string_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[str, int]:
        ...
    def to_string() -> str:
        ...
    def try_compute_length() -> typing.Tuple[bool, int]:
        ...
    def write_to_stream_async(output_stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class HttpGetBufferResult(winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    extended_error: winrt.windows.foundation.HResult
    request_message: HttpRequestMessage
    response_message: HttpResponseMessage
    succeeded: bool
    value: winrt.windows.storage.streams.IBuffer
    def close() -> None:
        ...
    def to_string() -> str:
        ...

class HttpGetInputStreamResult(winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    extended_error: winrt.windows.foundation.HResult
    request_message: HttpRequestMessage
    response_message: HttpResponseMessage
    succeeded: bool
    value: winrt.windows.storage.streams.IInputStream
    def close() -> None:
        ...
    def to_string() -> str:
        ...

class HttpGetStringResult(winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    extended_error: winrt.windows.foundation.HResult
    request_message: HttpRequestMessage
    response_message: HttpResponseMessage
    succeeded: bool
    value: str
    def close() -> None:
        ...
    def to_string() -> str:
        ...

class HttpMethod(winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    method: str
    delete: HttpMethod
    get: HttpMethod
    head: HttpMethod
    options: HttpMethod
    patch: HttpMethod
    post: HttpMethod
    put: HttpMethod
    def to_string() -> str:
        ...

class HttpMultipartContent(IHttpContent, winrt.windows.foundation.IClosable, winrt.windows.foundation.collections.IIterable[IHttpContent], winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    headers: winrt.windows.web.http.headers.HttpContentHeaderCollection
    def add(content: IHttpContent) -> None:
        ...
    def buffer_all_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...
    def close() -> None:
        ...
    def first() -> winrt.windows.foundation.collections.IIterator[IHttpContent]:
        ...
    def read_as_buffer_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def read_as_input_stream_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, int]:
        ...
    def read_as_string_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[str, int]:
        ...
    def to_string() -> str:
        ...
    def try_compute_length() -> typing.Tuple[bool, int]:
        ...
    def write_to_stream_async(output_stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class HttpMultipartFormDataContent(IHttpContent, winrt.windows.foundation.IClosable, winrt.windows.foundation.collections.IIterable[IHttpContent], winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    headers: winrt.windows.web.http.headers.HttpContentHeaderCollection
    def add(content: IHttpContent) -> None:
        ...
    def add(content: IHttpContent, name: str) -> None:
        ...
    def add(content: IHttpContent, name: str, file_name: str) -> None:
        ...
    def buffer_all_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...
    def close() -> None:
        ...
    def first() -> winrt.windows.foundation.collections.IIterator[IHttpContent]:
        ...
    def read_as_buffer_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def read_as_input_stream_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, int]:
        ...
    def read_as_string_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[str, int]:
        ...
    def to_string() -> str:
        ...
    def try_compute_length() -> typing.Tuple[bool, int]:
        ...
    def write_to_stream_async(output_stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class HttpRequestMessage(winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    request_uri: winrt.windows.foundation.Uri
    method: HttpMethod
    content: IHttpContent
    headers: winrt.windows.web.http.headers.HttpRequestHeaderCollection
    properties: winrt.windows.foundation.collections.IMap[str, _winrt.winrt_base]
    transport_information: HttpTransportInformation
    def close() -> None:
        ...
    def to_string() -> str:
        ...

class HttpRequestResult(winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    extended_error: winrt.windows.foundation.HResult
    request_message: HttpRequestMessage
    response_message: HttpResponseMessage
    succeeded: bool
    def close() -> None:
        ...
    def to_string() -> str:
        ...

class HttpResponseMessage(winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    version: HttpVersion
    status_code: HttpStatusCode
    source: HttpResponseMessageSource
    request_message: HttpRequestMessage
    reason_phrase: str
    content: IHttpContent
    headers: winrt.windows.web.http.headers.HttpResponseHeaderCollection
    is_success_status_code: bool
    def close() -> None:
        ...
    def ensure_success_status_code() -> HttpResponseMessage:
        ...
    def to_string() -> str:
        ...

class HttpStreamContent(IHttpContent, winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    headers: winrt.windows.web.http.headers.HttpContentHeaderCollection
    def buffer_all_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...
    def close() -> None:
        ...
    def read_as_buffer_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def read_as_input_stream_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, int]:
        ...
    def read_as_string_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[str, int]:
        ...
    def to_string() -> str:
        ...
    def try_compute_length() -> typing.Tuple[bool, int]:
        ...
    def write_to_stream_async(output_stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class HttpStringContent(IHttpContent, winrt.windows.foundation.IClosable, winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    headers: winrt.windows.web.http.headers.HttpContentHeaderCollection
    def buffer_all_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...
    def close() -> None:
        ...
    def read_as_buffer_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def read_as_input_stream_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, int]:
        ...
    def read_as_string_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[str, int]:
        ...
    def to_string() -> str:
        ...
    def try_compute_length() -> typing.Tuple[bool, int]:
        ...
    def write_to_stream_async(output_stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class HttpTransportInformation(winrt.windows.foundation.IStringable, _winrt.winrt_base):
    ...
    server_certificate: winrt.windows.security.cryptography.certificates.Certificate
    server_certificate_error_severity: winrt.windows.networking.sockets.SocketSslErrorSeverity
    server_certificate_errors: winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.ChainValidationResult]
    server_intermediate_certificates: winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.Certificate]
    def to_string() -> str:
        ...

class IHttpContent(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    headers: winrt.windows.web.http.headers.HttpContentHeaderCollection
    def buffer_all_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...
    def read_as_buffer_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def read_as_input_stream_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IInputStream, int]:
        ...
    def read_as_string_async() -> winrt.windows.foundation.IAsyncOperationWithProgress[str, int]:
        ...
    def try_compute_length() -> typing.Tuple[bool, int]:
        ...
    def write_to_stream_async(output_stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...
    def close() -> None:
        ...

