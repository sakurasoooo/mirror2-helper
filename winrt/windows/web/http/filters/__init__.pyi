# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.networking.sockets
except Exception:
    pass

try:
    import winrt.windows.security.credentials
except Exception:
    pass

try:
    import winrt.windows.security.cryptography.certificates
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

try:
    import winrt.windows.web.http
except Exception:
    pass

class HttpCacheReadBehavior(enum.IntEnum):
    DEFAULT = 0
    MOST_RECENT = 1
    ONLY_FROM_CACHE = 2
    NO_CACHE = 3

class HttpCacheWriteBehavior(enum.IntEnum):
    DEFAULT = 0
    NO_CACHE = 1

class HttpCookieUsageBehavior(enum.IntEnum):
    DEFAULT = 0
    NO_COOKIES = 1

class HttpBaseProtocolFilter(IHttpFilter, winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    use_proxy: bool
    server_credential: winrt.windows.security.credentials.PasswordCredential
    proxy_credential: winrt.windows.security.credentials.PasswordCredential
    max_connections_per_server: int
    client_certificate: winrt.windows.security.cryptography.certificates.Certificate
    automatic_decompression: bool
    allow_u_i: bool
    allow_auto_redirect: bool
    cache_control: HttpCacheControl
    cookie_manager: winrt.windows.web.http.HttpCookieManager
    ignorable_server_certificate_errors: winrt.windows.foundation.collections.IVector[winrt.windows.security.cryptography.certificates.ChainValidationResult]
    max_version: winrt.windows.web.http.HttpVersion
    cookie_usage_behavior: HttpCookieUsageBehavior
    user: winrt.windows.system.User
    def clear_authentication_cache() -> None:
        ...
    def close() -> None:
        ...
    def create_for_user(user: winrt.windows.system.User) -> HttpBaseProtocolFilter:
        ...
    def send_request_async(request: winrt.windows.web.http.HttpRequestMessage) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.web.http.HttpResponseMessage, winrt.windows.web.http.HttpProgress]:
        ...
    def add_server_custom_validation_requested(handler: winrt.windows.foundation.TypedEventHandler[HttpBaseProtocolFilter, HttpServerCustomValidationRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_server_custom_validation_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class HttpCacheControl(_winrt.winrt_base):
    ...
    write_behavior: HttpCacheWriteBehavior
    read_behavior: HttpCacheReadBehavior

class HttpServerCustomValidationRequestedEventArgs(_winrt.winrt_base):
    ...
    request_message: winrt.windows.web.http.HttpRequestMessage
    server_certificate: winrt.windows.security.cryptography.certificates.Certificate
    server_certificate_error_severity: winrt.windows.networking.sockets.SocketSslErrorSeverity
    server_certificate_errors: winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.ChainValidationResult]
    server_intermediate_certificates: winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.Certificate]
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...
    def reject() -> None:
        ...

class IHttpFilter(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    def send_request_async(request: winrt.windows.web.http.HttpRequestMessage) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.web.http.HttpResponseMessage, winrt.windows.web.http.HttpProgress]:
        ...
    def close() -> None:
        ...

