# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

class DayFormat(enum.IntEnum):
    NONE = 0
    DEFAULT = 1

class DayOfWeekFormat(enum.IntEnum):
    NONE = 0
    DEFAULT = 1
    ABBREVIATED = 2
    FULL = 3

class HourFormat(enum.IntEnum):
    NONE = 0
    DEFAULT = 1

class MinuteFormat(enum.IntEnum):
    NONE = 0
    DEFAULT = 1

class MonthFormat(enum.IntEnum):
    NONE = 0
    DEFAULT = 1
    ABBREVIATED = 2
    FULL = 3
    NUMERIC = 4

class SecondFormat(enum.IntEnum):
    NONE = 0
    DEFAULT = 1

class YearFormat(enum.IntEnum):
    NONE = 0
    DEFAULT = 1
    ABBREVIATED = 2
    FULL = 3

class DateTimeFormatter(_winrt.winrt_base):
    ...
    numeral_system: str
    clock: str
    geographic_region: str
    include_day: DayFormat
    include_day_of_week: DayOfWeekFormat
    include_hour: HourFormat
    include_minute: MinuteFormat
    include_month: MonthFormat
    include_second: SecondFormat
    include_year: YearFormat
    languages: winrt.windows.foundation.collections.IVectorView[str]
    calendar: str
    patterns: winrt.windows.foundation.collections.IVectorView[str]
    resolved_geographic_region: str
    resolved_language: str
    template: str
    long_date: DateTimeFormatter
    long_time: DateTimeFormatter
    short_date: DateTimeFormatter
    short_time: DateTimeFormatter
    def format(value: winrt.windows.foundation.DateTime) -> str:
        ...
    def format(datetime: winrt.windows.foundation.DateTime, time_zone_id: str) -> str:
        ...

