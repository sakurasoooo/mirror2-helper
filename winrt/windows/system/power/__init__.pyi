# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

class BatteryStatus(enum.IntEnum):
    NOT_PRESENT = 0
    DISCHARGING = 1
    IDLE = 2
    CHARGING = 3

class EnergySaverStatus(enum.IntEnum):
    DISABLED = 0
    OFF = 1
    ON = 2

class PowerSupplyStatus(enum.IntEnum):
    NOT_PRESENT = 0
    INADEQUATE = 1
    ADEQUATE = 2

class BackgroundEnergyManager(_winrt.winrt_base):
    ...
    excessive_usage_level: int
    low_usage_level: int
    max_acceptable_usage_level: int
    near_max_acceptable_usage_level: int
    near_termination_usage_level: int
    recent_energy_usage: int
    recent_energy_usage_level: int
    termination_usage_level: int
    def add_recent_energy_usage_increased(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_recent_energy_usage_increased(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_recent_energy_usage_returned_to_low(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_recent_energy_usage_returned_to_low(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class ForegroundEnergyManager(_winrt.winrt_base):
    ...
    excessive_usage_level: int
    low_usage_level: int
    max_acceptable_usage_level: int
    near_max_acceptable_usage_level: int
    recent_energy_usage: int
    recent_energy_usage_level: int
    def add_recent_energy_usage_increased(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_recent_energy_usage_increased(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_recent_energy_usage_returned_to_low(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_recent_energy_usage_returned_to_low(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PowerManager(_winrt.winrt_base):
    ...
    battery_status: BatteryStatus
    energy_saver_status: EnergySaverStatus
    power_supply_status: PowerSupplyStatus
    remaining_charge_percent: int
    remaining_discharge_time: winrt.windows.foundation.TimeSpan
    def add_battery_status_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_battery_status_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_energy_saver_status_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_energy_saver_status_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_power_supply_status_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_power_supply_status_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_remaining_charge_percent_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_remaining_charge_percent_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_remaining_discharge_time_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_remaining_discharge_time_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

