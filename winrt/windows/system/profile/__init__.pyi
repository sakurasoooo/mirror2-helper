# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

class PlatformDataCollectionLevel(enum.IntEnum):
    SECURITY = 0
    BASIC = 1
    ENHANCED = 2
    FULL = 3

class SystemIdentificationSource(enum.IntEnum):
    NONE = 0
    TPM = 1
    UEFI = 2
    REGISTRY = 3

class SystemOutOfBoxExperienceState(enum.IntEnum):
    NOT_STARTED = 0
    IN_PROGRESS = 1
    COMPLETED = 2

class UnsupportedAppRequirementReasons(enum.IntFlag):
    UNKNOWN = 0
    DENIED_BY_SYSTEM = 0x1

class AnalyticsInfo(_winrt.winrt_base):
    ...
    device_form: str
    version_info: AnalyticsVersionInfo
    def get_system_properties_async(attribute_names: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMapView[str, str]]:
        ...

class AnalyticsVersionInfo(_winrt.winrt_base):
    ...
    device_family: str
    device_family_version: str
    product_name: str

class AppApplicability(_winrt.winrt_base):
    ...
    def get_unsupported_app_requirements(capabilities: typing.Iterable[str]) -> winrt.windows.foundation.collections.IVectorView[UnsupportedAppRequirement]:
        ...

class EducationSettings(_winrt.winrt_base):
    ...
    is_education_environment: bool

class HardwareIdentification(_winrt.winrt_base):
    ...
    def get_package_specific_token(nonce: winrt.windows.storage.streams.IBuffer) -> HardwareToken:
        ...

class HardwareToken(_winrt.winrt_base):
    ...
    certificate: winrt.windows.storage.streams.IBuffer
    id: winrt.windows.storage.streams.IBuffer
    signature: winrt.windows.storage.streams.IBuffer

class KnownRetailInfoProperties(_winrt.winrt_base):
    ...
    battery_life_description: str
    display_description: str
    display_model_name: str
    form_factor: str
    front_camera_description: str
    graphics_description: str
    has_nfc: str
    has_optical_drive: str
    has_sd_slot: str
    is_featured: str
    is_office_installed: str
    manufacturer_name: str
    memory: str
    model_name: str
    price: str
    processor_description: str
    rear_camera_description: str
    retail_access_code: str
    screen_size: str
    storage_description: str
    weight: str
    windows_edition: str

class PlatformDiagnosticsAndUsageDataSettings(_winrt.winrt_base):
    ...
    collection_level: PlatformDataCollectionLevel
    def can_collect_diagnostics(level: PlatformDataCollectionLevel) -> bool:
        ...
    def add_collection_level_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_collection_level_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class RetailInfo(_winrt.winrt_base):
    ...
    is_demo_mode_enabled: bool
    properties: winrt.windows.foundation.collections.IMapView[str, _winrt.winrt_base]

class SharedModeSettings(_winrt.winrt_base):
    ...
    is_enabled: bool
    should_avoid_local_storage: bool

class SystemIdentification(_winrt.winrt_base):
    ...
    def get_system_id_for_publisher() -> SystemIdentificationInfo:
        ...
    def get_system_id_for_user(user: winrt.windows.system.User) -> SystemIdentificationInfo:
        ...

class SystemIdentificationInfo(_winrt.winrt_base):
    ...
    id: winrt.windows.storage.streams.IBuffer
    source: SystemIdentificationSource

class SystemSetupInfo(_winrt.winrt_base):
    ...
    out_of_box_experience_state: SystemOutOfBoxExperienceState
    def add_out_of_box_experience_state_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_out_of_box_experience_state_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class UnsupportedAppRequirement(_winrt.winrt_base):
    ...
    reasons: UnsupportedAppRequirementReasons
    requirement: str

class WindowsIntegrityPolicy(_winrt.winrt_base):
    ...
    can_disable: bool
    is_disable_supported: bool
    is_enabled: bool
    is_enabled_for_trial: bool
    def add_policy_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_policy_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

