# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

class WorkItemOptions(enum.IntFlag):
    NONE = 0
    TIME_SLICED = 0x1

class WorkItemPriority(enum.IntEnum):
    LOW = -1
    NORMAL = 0
    HIGH = 1

class ThreadPool(_winrt.winrt_base):
    ...
    def run_async(handler: WorkItemHandler) -> winrt.windows.foundation.IAsyncAction:
        ...
    def run_async(handler: WorkItemHandler, priority: WorkItemPriority) -> winrt.windows.foundation.IAsyncAction:
        ...
    def run_async(handler: WorkItemHandler, priority: WorkItemPriority, options: WorkItemOptions) -> winrt.windows.foundation.IAsyncAction:
        ...

class ThreadPoolTimer(_winrt.winrt_base):
    ...
    delay: winrt.windows.foundation.TimeSpan
    period: winrt.windows.foundation.TimeSpan
    def cancel() -> None:
        ...
    def create_periodic_timer(handler: TimerElapsedHandler, period: winrt.windows.foundation.TimeSpan) -> ThreadPoolTimer:
        ...
    def create_periodic_timer(handler: TimerElapsedHandler, period: winrt.windows.foundation.TimeSpan, destroyed: TimerDestroyedHandler) -> ThreadPoolTimer:
        ...
    def create_timer(handler: TimerElapsedHandler, delay: winrt.windows.foundation.TimeSpan) -> ThreadPoolTimer:
        ...
    def create_timer(handler: TimerElapsedHandler, delay: winrt.windows.foundation.TimeSpan, destroyed: TimerDestroyedHandler) -> ThreadPoolTimer:
        ...

TimerDestroyedHandler = typing.Callable[[ThreadPoolTimer], None]

TimerElapsedHandler = typing.Callable[[ThreadPoolTimer], None]

WorkItemHandler = typing.Callable[[winrt.windows.foundation.IAsyncAction], None]

