# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

class SystemUpdateAttentionRequiredReason(enum.IntEnum):
    NONE = 0
    NETWORK_REQUIRED = 1
    INSUFFICIENT_DISK_SPACE = 2
    INSUFFICIENT_BATTERY = 3
    UPDATE_BLOCKED = 4

class SystemUpdateItemState(enum.IntEnum):
    NOT_STARTED = 0
    INITIALIZING = 1
    PREPARING = 2
    CALCULATING = 3
    DOWNLOADING = 4
    INSTALLING = 5
    COMPLETED = 6
    REBOOT_REQUIRED = 7
    ERROR = 8

class SystemUpdateManagerState(enum.IntEnum):
    IDLE = 0
    DETECTING = 1
    READY_TO_DOWNLOAD = 2
    DOWNLOADING = 3
    READY_TO_INSTALL = 4
    INSTALLING = 5
    REBOOT_REQUIRED = 6
    READY_TO_FINALIZE = 7
    FINALIZING = 8
    COMPLETED = 9
    ATTENTION_REQUIRED = 10
    ERROR = 11

class SystemUpdateStartInstallAction(enum.IntEnum):
    UP_TO_REBOOT = 0
    ALLOW_REBOOT = 1

class SystemUpdateItem(_winrt.winrt_base):
    ...
    description: str
    download_progress: float
    extended_error: winrt.windows.foundation.HResult
    id: str
    install_progress: float
    revision: int
    state: SystemUpdateItemState
    title: str

class SystemUpdateLastErrorInfo(_winrt.winrt_base):
    ...
    extended_error: winrt.windows.foundation.HResult
    is_interactive: bool
    state: SystemUpdateManagerState

class SystemUpdateManager(_winrt.winrt_base):
    ...
    attention_required_reason: SystemUpdateAttentionRequiredReason
    download_progress: float
    extended_error: winrt.windows.foundation.HResult
    install_progress: float
    last_error_info: SystemUpdateLastErrorInfo
    last_update_check_time: winrt.windows.foundation.DateTime
    last_update_install_time: winrt.windows.foundation.DateTime
    state: SystemUpdateManagerState
    user_active_hours_end: winrt.windows.foundation.TimeSpan
    user_active_hours_max: int
    user_active_hours_start: winrt.windows.foundation.TimeSpan
    def block_automatic_reboot_async(lock_id: str) -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def get_automatic_reboot_block_ids() -> winrt.windows.foundation.collections.IVectorView[str]:
        ...
    def get_flight_ring() -> str:
        ...
    def get_update_items() -> winrt.windows.foundation.collections.IVectorView[SystemUpdateItem]:
        ...
    def is_supported() -> bool:
        ...
    def reboot_to_complete_install() -> None:
        ...
    def set_flight_ring(flight_ring: str) -> bool:
        ...
    def start_cancel_updates() -> None:
        ...
    def start_install(action: SystemUpdateStartInstallAction) -> None:
        ...
    def try_set_user_active_hours(start: winrt.windows.foundation.TimeSpan, end: winrt.windows.foundation.TimeSpan) -> bool:
        ...
    def unblock_automatic_reboot_async(lock_id: str) -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def add_state_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_state_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

