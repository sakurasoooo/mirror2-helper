# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.geolocation
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

try:
    import winrt.windows.ui
except Exception:
    pass

class WalletBarcodeSymbology(enum.IntEnum):
    INVALID = 0
    UPCA = 1
    UPCE = 2
    EAN13 = 3
    EAN8 = 4
    ITF = 5
    CODE39 = 6
    CODE128 = 7
    QR = 8
    PDF417 = 9
    AZTEC = 10
    CUSTOM = 100000

class WalletDetailViewPosition(enum.IntEnum):
    HIDDEN = 0
    HEADER_FIELD1 = 1
    HEADER_FIELD2 = 2
    PRIMARY_FIELD1 = 3
    PRIMARY_FIELD2 = 4
    SECONDARY_FIELD1 = 5
    SECONDARY_FIELD2 = 6
    SECONDARY_FIELD3 = 7
    SECONDARY_FIELD4 = 8
    SECONDARY_FIELD5 = 9
    CENTER_FIELD1 = 10
    FOOTER_FIELD1 = 11
    FOOTER_FIELD2 = 12
    FOOTER_FIELD3 = 13
    FOOTER_FIELD4 = 14

class WalletItemKind(enum.IntEnum):
    INVALID = 0
    DEAL = 1
    GENERAL = 2
    PAYMENT_INSTRUMENT = 3
    TICKET = 4
    BOARDING_PASS = 5
    MEMBERSHIP_CARD = 6

class WalletSummaryViewPosition(enum.IntEnum):
    HIDDEN = 0
    FIELD1 = 1
    FIELD2 = 2

class WalletBarcode(_winrt.winrt_base):
    ...
    symbology: WalletBarcodeSymbology
    value: str
    def get_image_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.streams.IRandomAccessStreamReference]:
        ...

class WalletItem(_winrt.winrt_base):
    ...
    display_name: str
    display_message: str
    logo_text: str
    body_font_color: winrt.windows.ui.Color
    body_color: winrt.windows.ui.Color
    body_background_image: winrt.windows.storage.streams.IRandomAccessStreamReference
    is_display_message_launchable: bool
    is_acknowledged: bool
    is_more_transaction_history_launchable: bool
    header_font_color: winrt.windows.ui.Color
    header_color: winrt.windows.ui.Color
    header_background_image: winrt.windows.storage.streams.IRandomAccessStreamReference
    expiration_date: typing.Optional[winrt.windows.foundation.DateTime]
    logo99x99: winrt.windows.storage.streams.IRandomAccessStreamReference
    logo_image: winrt.windows.storage.streams.IRandomAccessStreamReference
    promotional_image: winrt.windows.storage.streams.IRandomAccessStreamReference
    logo159x159: winrt.windows.storage.streams.IRandomAccessStreamReference
    last_updated: typing.Optional[winrt.windows.foundation.DateTime]
    issuer_display_name: str
    barcode: WalletBarcode
    relevant_date_display_message: str
    relevant_date: typing.Optional[winrt.windows.foundation.DateTime]
    logo336x336: winrt.windows.storage.streams.IRandomAccessStreamReference
    kind: WalletItemKind
    display_properties: winrt.windows.foundation.collections.IMap[str, WalletItemCustomProperty]
    id: str
    relevant_locations: winrt.windows.foundation.collections.IMap[str, WalletRelevantLocation]
    transaction_history: winrt.windows.foundation.collections.IMap[str, WalletTransaction]
    verbs: winrt.windows.foundation.collections.IMap[str, WalletVerb]

class WalletItemCustomProperty(_winrt.winrt_base):
    ...
    value: str
    summary_view_position: WalletSummaryViewPosition
    name: str
    detail_view_position: WalletDetailViewPosition
    auto_detect_links: bool

class WalletItemStore(_winrt.winrt_base):
    ...
    def add_async(id: str, item: WalletItem) -> winrt.windows.foundation.IAsyncAction:
        ...
    def clear_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def delete_async(id: str) -> winrt.windows.foundation.IAsyncAction:
        ...
    def get_items_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[WalletItem]]:
        ...
    def get_items_async(kind: WalletItemKind) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[WalletItem]]:
        ...
    def get_wallet_item_async(id: str) -> winrt.windows.foundation.IAsyncOperation[WalletItem]:
        ...
    def import_item_async(stream: winrt.windows.storage.streams.IRandomAccessStreamReference) -> winrt.windows.foundation.IAsyncOperation[WalletItem]:
        ...
    def show_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def show_async(id: str) -> winrt.windows.foundation.IAsyncAction:
        ...
    def update_async(item: WalletItem) -> winrt.windows.foundation.IAsyncAction:
        ...

class WalletManager(_winrt.winrt_base):
    ...
    def request_store_async() -> winrt.windows.foundation.IAsyncOperation[WalletItemStore]:
        ...

class WalletRelevantLocation(_winrt.winrt_base):
    ...
    position: winrt.windows.devices.geolocation.BasicGeoposition
    display_message: str

class WalletTransaction(_winrt.winrt_base):
    ...
    transaction_date: typing.Optional[winrt.windows.foundation.DateTime]
    is_launchable: bool
    ignore_time_of_day: bool
    display_location: str
    display_amount: str
    description: str

class WalletVerb(_winrt.winrt_base):
    ...
    name: str

