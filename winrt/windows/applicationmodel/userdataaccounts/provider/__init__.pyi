# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.applicationmodel.userdataaccounts
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

class UserDataAccountProviderOperationKind(enum.IntEnum):
    ADD_ACCOUNT = 0
    SETTINGS = 1
    RESOLVE_ERRORS = 2

class UserDataAccountProviderPartnerAccountKind(enum.IntEnum):
    EXCHANGE = 0
    POP_OR_IMAP = 1

class UserDataAccountPartnerAccountInfo(_winrt.winrt_base):
    ...
    account_kind: UserDataAccountProviderPartnerAccountKind
    display_name: str
    priority: int

class UserDataAccountProviderAddAccountOperation(IUserDataAccountProviderOperation, _winrt.winrt_base):
    ...
    content_kinds: winrt.windows.applicationmodel.userdataaccounts.UserDataAccountContentKinds
    partner_account_infos: winrt.windows.foundation.collections.IVectorView[UserDataAccountPartnerAccountInfo]
    kind: UserDataAccountProviderOperationKind
    def report_completed(user_data_account_id: str) -> None:
        ...

class UserDataAccountProviderResolveErrorsOperation(IUserDataAccountProviderOperation, _winrt.winrt_base):
    ...
    kind: UserDataAccountProviderOperationKind
    user_data_account_id: str
    def report_completed() -> None:
        ...

class UserDataAccountProviderSettingsOperation(IUserDataAccountProviderOperation, _winrt.winrt_base):
    ...
    kind: UserDataAccountProviderOperationKind
    user_data_account_id: str
    def report_completed() -> None:
        ...

class IUserDataAccountProviderOperation(_winrt.winrt_base):
    ...
    kind: UserDataAccountProviderOperationKind

