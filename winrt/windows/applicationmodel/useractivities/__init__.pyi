# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.security.credentials
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

try:
    import winrt.windows.ui
except Exception:
    pass

try:
    import winrt.windows.ui.shell
except Exception:
    pass

class UserActivityState(enum.IntEnum):
    NEW = 0
    PUBLISHED = 1

class UserActivity(_winrt.winrt_base):
    ...
    fallback_uri: winrt.windows.foundation.Uri
    content_uri: winrt.windows.foundation.Uri
    content_type: str
    content_info: IUserActivityContentInfo
    activation_uri: winrt.windows.foundation.Uri
    activity_id: str
    state: UserActivityState
    visual_elements: UserActivityVisualElements
    is_roamable: bool
    def create_session() -> UserActivitySession:
        ...
    def save_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def to_json() -> str:
        ...
    def to_json_array(activities: typing.Iterable[UserActivity]) -> str:
        ...
    def try_parse_from_json(json: str) -> UserActivity:
        ...
    def try_parse_from_json_array(json: str) -> winrt.windows.foundation.collections.IVector[UserActivity]:
        ...

class UserActivityAttribution(_winrt.winrt_base):
    ...
    icon_uri: winrt.windows.foundation.Uri
    alternate_text: str
    add_image_query: bool

class UserActivityChannel(_winrt.winrt_base):
    ...
    def delete_activity_async(activity_id: str) -> winrt.windows.foundation.IAsyncAction:
        ...
    def delete_all_activities_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def disable_auto_session_creation() -> None:
        ...
    def get_default() -> UserActivityChannel:
        ...
    def get_for_user(user: winrt.windows.system.User) -> UserActivityChannel:
        ...
    def get_or_create_user_activity_async(activity_id: str) -> winrt.windows.foundation.IAsyncOperation[UserActivity]:
        ...
    def get_recent_user_activities_async(max_unique_activities: int) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVector[UserActivitySessionHistoryItem]]:
        ...
    def get_session_history_items_for_user_activity_async(activity_id: str, start_time: winrt.windows.foundation.DateTime) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVector[UserActivitySessionHistoryItem]]:
        ...
    def try_get_for_web_account(account: winrt.windows.security.credentials.WebAccount) -> UserActivityChannel:
        ...

class UserActivityContentInfo(IUserActivityContentInfo, _winrt.winrt_base):
    ...
    def from_json(value: str) -> UserActivityContentInfo:
        ...
    def to_json() -> str:
        ...

class UserActivityRequest(_winrt.winrt_base):
    ...
    def set_user_activity(activity: UserActivity) -> None:
        ...

class UserActivityRequestManager(_winrt.winrt_base):
    ...
    def get_for_current_view() -> UserActivityRequestManager:
        ...
    def add_user_activity_requested(handler: winrt.windows.foundation.TypedEventHandler[UserActivityRequestManager, UserActivityRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_user_activity_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class UserActivityRequestedEventArgs(_winrt.winrt_base):
    ...
    request: UserActivityRequest
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class UserActivitySession(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    activity_id: str
    def close() -> None:
        ...

class UserActivitySessionHistoryItem(_winrt.winrt_base):
    ...
    end_time: typing.Optional[winrt.windows.foundation.DateTime]
    start_time: winrt.windows.foundation.DateTime
    user_activity: UserActivity

class UserActivityVisualElements(_winrt.winrt_base):
    ...
    display_text: str
    description: str
    content: winrt.windows.ui.shell.IAdaptiveCard
    background_color: winrt.windows.ui.Color
    attribution: UserActivityAttribution
    attribution_display_text: str

class IUserActivityContentInfo(_winrt.winrt_base):
    ...
    def to_json() -> str:
        ...

