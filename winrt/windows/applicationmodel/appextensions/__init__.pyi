# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.applicationmodel
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage
except Exception:
    pass

class AppExtension(_winrt.winrt_base):
    ...
    app_info: winrt.windows.applicationmodel.AppInfo
    description: str
    display_name: str
    id: str
    package: winrt.windows.applicationmodel.Package
    app_user_model_id: str
    def get_extension_properties_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IPropertySet]:
        ...
    def get_public_folder_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.StorageFolder]:
        ...

class AppExtensionCatalog(_winrt.winrt_base):
    ...
    def find_all_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[AppExtension]]:
        ...
    def open(app_extension_name: str) -> AppExtensionCatalog:
        ...
    def request_remove_package_async(package_full_name: str) -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def add_package_installed(handler: winrt.windows.foundation.TypedEventHandler[AppExtensionCatalog, AppExtensionPackageInstalledEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_package_installed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_package_status_changed(handler: winrt.windows.foundation.TypedEventHandler[AppExtensionCatalog, AppExtensionPackageStatusChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_package_status_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_package_uninstalling(handler: winrt.windows.foundation.TypedEventHandler[AppExtensionCatalog, AppExtensionPackageUninstallingEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_package_uninstalling(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_package_updated(handler: winrt.windows.foundation.TypedEventHandler[AppExtensionCatalog, AppExtensionPackageUpdatedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_package_updated(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_package_updating(handler: winrt.windows.foundation.TypedEventHandler[AppExtensionCatalog, AppExtensionPackageUpdatingEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_package_updating(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class AppExtensionPackageInstalledEventArgs(_winrt.winrt_base):
    ...
    app_extension_name: str
    extensions: winrt.windows.foundation.collections.IVectorView[AppExtension]
    package: winrt.windows.applicationmodel.Package

class AppExtensionPackageStatusChangedEventArgs(_winrt.winrt_base):
    ...
    app_extension_name: str
    package: winrt.windows.applicationmodel.Package

class AppExtensionPackageUninstallingEventArgs(_winrt.winrt_base):
    ...
    app_extension_name: str
    package: winrt.windows.applicationmodel.Package

class AppExtensionPackageUpdatedEventArgs(_winrt.winrt_base):
    ...
    app_extension_name: str
    extensions: winrt.windows.foundation.collections.IVectorView[AppExtension]
    package: winrt.windows.applicationmodel.Package

class AppExtensionPackageUpdatingEventArgs(_winrt.winrt_base):
    ...
    app_extension_name: str
    package: winrt.windows.applicationmodel.Package

