# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

class AppCapabilityAccessStatus(enum.IntEnum):
    DENIED_BY_SYSTEM = 0
    NOT_DECLARED_BY_APP = 1
    DENIED_BY_USER = 2
    USER_PROMPT_REQUIRED = 3
    ALLOWED = 4

class AppCapability(_winrt.winrt_base):
    ...
    capability_name: str
    user: winrt.windows.system.User
    def check_access() -> AppCapabilityAccessStatus:
        ...
    def create(capability_name: str) -> AppCapability:
        ...
    def create_with_process_id_for_user(user: winrt.windows.system.User, capability_name: str, pid: int) -> AppCapability:
        ...
    def request_access_async() -> winrt.windows.foundation.IAsyncOperation[AppCapabilityAccessStatus]:
        ...
    def request_access_for_capabilities_async(capability_names: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMapView[str, AppCapabilityAccessStatus]]:
        ...
    def request_access_for_capabilities_for_user_async(user: winrt.windows.system.User, capability_names: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMapView[str, AppCapabilityAccessStatus]]:
        ...
    def add_access_changed(handler: winrt.windows.foundation.TypedEventHandler[AppCapability, AppCapabilityAccessChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_access_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class AppCapabilityAccessChangedEventArgs(_winrt.winrt_base):
    ...

