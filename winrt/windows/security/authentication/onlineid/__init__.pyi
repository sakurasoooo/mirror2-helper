# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

class CredentialPromptType(enum.IntEnum):
    PROMPT_IF_NEEDED = 0
    RETYPE_CREDENTIALS = 1
    DO_NOT_PROMPT = 2

class OnlineIdSystemTicketStatus(enum.IntEnum):
    SUCCESS = 0
    ERROR = 1
    SERVICE_CONNECTION_ERROR = 2

class OnlineIdAuthenticator(_winrt.winrt_base):
    ...
    application_id: uuid.UUID
    authenticated_safe_customer_id: str
    can_sign_out: bool
    def authenticate_user_async(request: OnlineIdServiceTicketRequest) -> UserAuthenticationOperation:
        ...
    def authenticate_user_async(requests: typing.Iterable[OnlineIdServiceTicketRequest], credential_prompt_type: CredentialPromptType) -> UserAuthenticationOperation:
        ...
    def sign_out_user_async() -> SignOutUserOperation:
        ...

class OnlineIdServiceTicket(_winrt.winrt_base):
    ...
    error_code: int
    request: OnlineIdServiceTicketRequest
    value: str

class OnlineIdServiceTicketRequest(_winrt.winrt_base):
    ...
    policy: str
    service: str

class OnlineIdSystemAuthenticator(_winrt.winrt_base):
    ...
    default: OnlineIdSystemAuthenticatorForUser
    def get_for_user(user: winrt.windows.system.User) -> OnlineIdSystemAuthenticatorForUser:
        ...

class OnlineIdSystemAuthenticatorForUser(_winrt.winrt_base):
    ...
    application_id: uuid.UUID
    user: winrt.windows.system.User
    def get_ticket_async(request: OnlineIdServiceTicketRequest) -> winrt.windows.foundation.IAsyncOperation[OnlineIdSystemTicketResult]:
        ...

class OnlineIdSystemIdentity(_winrt.winrt_base):
    ...
    id: str
    ticket: OnlineIdServiceTicket

class OnlineIdSystemTicketResult(_winrt.winrt_base):
    ...
    extended_error: winrt.windows.foundation.HResult
    identity: OnlineIdSystemIdentity
    status: OnlineIdSystemTicketStatus

class SignOutUserOperation(winrt.windows.foundation.IAsyncAction, winrt.windows.foundation.IAsyncInfo, _winrt.winrt_base):
    ...
    error_code: winrt.windows.foundation.HResult
    id: int
    status: winrt.windows.foundation.AsyncStatus
    completed: winrt.windows.foundation.AsyncActionCompletedHandler
    def cancel() -> None:
        ...
    def close() -> None:
        ...
    def get_results() -> None:
        ...

class UserAuthenticationOperation(winrt.windows.foundation.IAsyncOperation[UserIdentity], winrt.windows.foundation.IAsyncInfo, _winrt.winrt_base):
    ...
    error_code: winrt.windows.foundation.HResult
    id: int
    status: winrt.windows.foundation.AsyncStatus
    completed: winrt.windows.foundation.AsyncOperationCompletedHandler[UserIdentity]
    def cancel() -> None:
        ...
    def close() -> None:
        ...
    def get_results() -> UserIdentity:
        ...

class UserIdentity(_winrt.winrt_base):
    ...
    first_name: str
    id: str
    is_beta_account: bool
    is_confirmed_p_c: bool
    last_name: str
    safe_customer_id: str
    sign_in_name: str
    tickets: winrt.windows.foundation.collections.IVectorView[OnlineIdServiceTicket]

