# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.storage
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

class UserDataAvailability(enum.IntEnum):
    ALWAYS = 0
    AFTER_FIRST_UNLOCK = 1
    WHILE_UNLOCKED = 2

class UserDataBufferUnprotectStatus(enum.IntEnum):
    SUCCEEDED = 0
    UNAVAILABLE = 1

class UserDataStorageItemProtectionStatus(enum.IntEnum):
    SUCCEEDED = 0
    NOT_PROTECTABLE = 1
    DATA_UNAVAILABLE = 2

class UserDataAvailabilityStateChangedEventArgs(_winrt.winrt_base):
    ...
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class UserDataBufferUnprotectResult(_winrt.winrt_base):
    ...
    status: UserDataBufferUnprotectStatus
    unprotected_buffer: winrt.windows.storage.streams.IBuffer

class UserDataProtectionManager(_winrt.winrt_base):
    ...
    def get_storage_item_protection_info_async(storage_item: winrt.windows.storage.IStorageItem) -> winrt.windows.foundation.IAsyncOperation[UserDataStorageItemProtectionInfo]:
        ...
    def is_continued_data_availability_expected(availability: UserDataAvailability) -> bool:
        ...
    def protect_buffer_async(unprotected_buffer: winrt.windows.storage.streams.IBuffer, availability: UserDataAvailability) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.streams.IBuffer]:
        ...
    def protect_storage_item_async(storage_item: winrt.windows.storage.IStorageItem, availability: UserDataAvailability) -> winrt.windows.foundation.IAsyncOperation[UserDataStorageItemProtectionStatus]:
        ...
    def try_get_default() -> UserDataProtectionManager:
        ...
    def try_get_for_user(user: winrt.windows.system.User) -> UserDataProtectionManager:
        ...
    def unprotect_buffer_async(protected_buffer: winrt.windows.storage.streams.IBuffer) -> winrt.windows.foundation.IAsyncOperation[UserDataBufferUnprotectResult]:
        ...
    def add_data_availability_state_changed(handler: winrt.windows.foundation.TypedEventHandler[UserDataProtectionManager, UserDataAvailabilityStateChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_data_availability_state_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class UserDataStorageItemProtectionInfo(_winrt.winrt_base):
    ...
    availability: UserDataAvailability

