# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class AuthenticationProtocol(enum.IntEnum):
    BASIC = 0
    DIGEST = 1
    NTLM = 2
    KERBEROS = 3
    NEGOTIATE = 4
    CRED_SSP = 5
    CUSTOM = 6

class CredentialSaveOption(enum.IntEnum):
    UNSELECTED = 0
    SELECTED = 1
    HIDDEN = 2

class UserConsentVerificationResult(enum.IntEnum):
    VERIFIED = 0
    DEVICE_NOT_PRESENT = 1
    NOT_CONFIGURED_FOR_USER = 2
    DISABLED_BY_POLICY = 3
    DEVICE_BUSY = 4
    RETRIES_EXHAUSTED = 5
    CANCELED = 6

class UserConsentVerifierAvailability(enum.IntEnum):
    AVAILABLE = 0
    DEVICE_NOT_PRESENT = 1
    NOT_CONFIGURED_FOR_USER = 2
    DISABLED_BY_POLICY = 3
    DEVICE_BUSY = 4

class CredentialPicker(_winrt.winrt_base):
    ...
    def pick_async(options: CredentialPickerOptions) -> winrt.windows.foundation.IAsyncOperation[CredentialPickerResults]:
        ...
    def pick_async(target_name: str, message: str) -> winrt.windows.foundation.IAsyncOperation[CredentialPickerResults]:
        ...
    def pick_async(target_name: str, message: str, caption: str) -> winrt.windows.foundation.IAsyncOperation[CredentialPickerResults]:
        ...

class CredentialPickerOptions(_winrt.winrt_base):
    ...
    target_name: str
    previous_credential: winrt.windows.storage.streams.IBuffer
    message: str
    error_code: int
    custom_authentication_protocol: str
    credential_save_option: CredentialSaveOption
    caption: str
    caller_saves_credential: bool
    authentication_protocol: AuthenticationProtocol
    always_display_dialog: bool

class CredentialPickerResults(_winrt.winrt_base):
    ...
    credential: winrt.windows.storage.streams.IBuffer
    credential_domain_name: str
    credential_password: str
    credential_save_option: CredentialSaveOption
    credential_saved: bool
    credential_user_name: str
    error_code: int

class UserConsentVerifier(_winrt.winrt_base):
    ...
    def check_availability_async() -> winrt.windows.foundation.IAsyncOperation[UserConsentVerifierAvailability]:
        ...
    def request_verification_async(message: str) -> winrt.windows.foundation.IAsyncOperation[UserConsentVerificationResult]:
        ...

