# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.graphics.directx.direct3d11
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class BitmapAlphaMode(enum.IntEnum):
    PREMULTIPLIED = 0
    STRAIGHT = 1
    IGNORE = 2

class BitmapBufferAccessMode(enum.IntEnum):
    READ = 0
    READ_WRITE = 1
    WRITE = 2

class BitmapFlip(enum.IntEnum):
    NONE = 0
    HORIZONTAL = 1
    VERTICAL = 2

class BitmapInterpolationMode(enum.IntEnum):
    NEAREST_NEIGHBOR = 0
    LINEAR = 1
    CUBIC = 2
    FANT = 3

class BitmapPixelFormat(enum.IntEnum):
    UNKNOWN = 0
    RGBA16 = 12
    RGBA8 = 30
    GRAY16 = 57
    GRAY8 = 62
    BGRA8 = 87
    NV12 = 103
    P010 = 104
    YUY2 = 107

class BitmapRotation(enum.IntEnum):
    NONE = 0
    CLOCKWISE90_DEGREES = 1
    CLOCKWISE180_DEGREES = 2
    CLOCKWISE270_DEGREES = 3

class ColorManagementMode(enum.IntEnum):
    DO_NOT_COLOR_MANAGE = 0
    COLOR_MANAGE_TO_S_RGB = 1

class ExifOrientationMode(enum.IntEnum):
    IGNORE_EXIF_ORIENTATION = 0
    RESPECT_EXIF_ORIENTATION = 1

class JpegSubsamplingMode(enum.IntEnum):
    DEFAULT = 0
    Y4_CB2_CR0 = 1
    Y4_CB2_CR2 = 2
    Y4_CB4_CR4 = 3

class PngFilterMode(enum.IntEnum):
    AUTOMATIC = 0
    NONE = 1
    SUB = 2
    UP = 3
    AVERAGE = 4
    PAETH = 5
    ADAPTIVE = 6

class TiffCompressionMode(enum.IntEnum):
    AUTOMATIC = 0
    NONE = 1
    CCITT3 = 2
    CCITT4 = 3
    LZW = 4
    RLE = 5
    ZIP = 6
    LZWH_DIFFERENCING = 7

class BitmapBounds(_winrt.winrt_base):
    ...

class BitmapPlaneDescription(_winrt.winrt_base):
    ...

class BitmapSize(_winrt.winrt_base):
    ...

class BitmapBuffer(winrt.windows.foundation.IMemoryBuffer, winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    def close() -> None:
        ...
    def create_reference() -> winrt.windows.foundation.IMemoryBufferReference:
        ...
    def get_plane_count() -> int:
        ...
    def get_plane_description(index: int) -> BitmapPlaneDescription:
        ...

class BitmapCodecInformation(_winrt.winrt_base):
    ...
    codec_id: uuid.UUID
    file_extensions: winrt.windows.foundation.collections.IVectorView[str]
    friendly_name: str
    mime_types: winrt.windows.foundation.collections.IVectorView[str]

class BitmapDecoder(IBitmapFrame, IBitmapFrameWithSoftwareBitmap, _winrt.winrt_base):
    ...
    bitmap_container_properties: BitmapPropertiesView
    decoder_information: BitmapCodecInformation
    frame_count: int
    bitmap_alpha_mode: BitmapAlphaMode
    bitmap_pixel_format: BitmapPixelFormat
    bitmap_properties: BitmapPropertiesView
    dpi_x: float
    dpi_y: float
    oriented_pixel_height: int
    oriented_pixel_width: int
    pixel_height: int
    pixel_width: int
    bmp_decoder_id: uuid.UUID
    gif_decoder_id: uuid.UUID
    ico_decoder_id: uuid.UUID
    jpeg_decoder_id: uuid.UUID
    jpeg_x_r_decoder_id: uuid.UUID
    png_decoder_id: uuid.UUID
    tiff_decoder_id: uuid.UUID
    heif_decoder_id: uuid.UUID
    webp_decoder_id: uuid.UUID
    def create_async(stream: winrt.windows.storage.streams.IRandomAccessStream) -> winrt.windows.foundation.IAsyncOperation[BitmapDecoder]:
        ...
    def create_async(decoder_id: uuid.UUID, stream: winrt.windows.storage.streams.IRandomAccessStream) -> winrt.windows.foundation.IAsyncOperation[BitmapDecoder]:
        ...
    def get_decoder_information_enumerator() -> winrt.windows.foundation.collections.IVectorView[BitmapCodecInformation]:
        ...
    def get_frame_async(frame_index: int) -> winrt.windows.foundation.IAsyncOperation[BitmapFrame]:
        ...
    def get_pixel_data_async() -> winrt.windows.foundation.IAsyncOperation[PixelDataProvider]:
        ...
    def get_pixel_data_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode, transform: BitmapTransform, exif_orientation_mode: ExifOrientationMode, color_management_mode: ColorManagementMode) -> winrt.windows.foundation.IAsyncOperation[PixelDataProvider]:
        ...
    def get_preview_async() -> winrt.windows.foundation.IAsyncOperation[ImageStream]:
        ...
    def get_software_bitmap_async() -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_software_bitmap_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode) -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_software_bitmap_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode, transform: BitmapTransform, exif_orientation_mode: ExifOrientationMode, color_management_mode: ColorManagementMode) -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_thumbnail_async() -> winrt.windows.foundation.IAsyncOperation[ImageStream]:
        ...

class BitmapEncoder(_winrt.winrt_base):
    ...
    is_thumbnail_generated: bool
    generated_thumbnail_width: int
    generated_thumbnail_height: int
    bitmap_container_properties: BitmapProperties
    bitmap_properties: BitmapProperties
    bitmap_transform: BitmapTransform
    encoder_information: BitmapCodecInformation
    bmp_encoder_id: uuid.UUID
    gif_encoder_id: uuid.UUID
    jpeg_encoder_id: uuid.UUID
    jpeg_x_r_encoder_id: uuid.UUID
    png_encoder_id: uuid.UUID
    tiff_encoder_id: uuid.UUID
    heif_encoder_id: uuid.UUID
    def create_async(encoder_id: uuid.UUID, stream: winrt.windows.storage.streams.IRandomAccessStream) -> winrt.windows.foundation.IAsyncOperation[BitmapEncoder]:
        ...
    def create_async(encoder_id: uuid.UUID, stream: winrt.windows.storage.streams.IRandomAccessStream, encoding_options: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, BitmapTypedValue]]) -> winrt.windows.foundation.IAsyncOperation[BitmapEncoder]:
        ...
    def create_for_in_place_property_encoding_async(bitmap_decoder: BitmapDecoder) -> winrt.windows.foundation.IAsyncOperation[BitmapEncoder]:
        ...
    def create_for_transcoding_async(stream: winrt.windows.storage.streams.IRandomAccessStream, bitmap_decoder: BitmapDecoder) -> winrt.windows.foundation.IAsyncOperation[BitmapEncoder]:
        ...
    def flush_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def get_encoder_information_enumerator() -> winrt.windows.foundation.collections.IVectorView[BitmapCodecInformation]:
        ...
    def go_to_next_frame_async() -> winrt.windows.foundation.IAsyncAction:
        ...
    def go_to_next_frame_async(encoding_options: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, BitmapTypedValue]]) -> winrt.windows.foundation.IAsyncAction:
        ...
    def set_pixel_data(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode, width: int, height: int, dpi_x: float, dpi_y: float, pixels: typing.Sequence[int]) -> None:
        ...
    def set_software_bitmap(bitmap: SoftwareBitmap) -> None:
        ...

class BitmapFrame(IBitmapFrame, IBitmapFrameWithSoftwareBitmap, _winrt.winrt_base):
    ...
    bitmap_alpha_mode: BitmapAlphaMode
    bitmap_pixel_format: BitmapPixelFormat
    bitmap_properties: BitmapPropertiesView
    dpi_x: float
    dpi_y: float
    oriented_pixel_height: int
    oriented_pixel_width: int
    pixel_height: int
    pixel_width: int
    def get_pixel_data_async() -> winrt.windows.foundation.IAsyncOperation[PixelDataProvider]:
        ...
    def get_pixel_data_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode, transform: BitmapTransform, exif_orientation_mode: ExifOrientationMode, color_management_mode: ColorManagementMode) -> winrt.windows.foundation.IAsyncOperation[PixelDataProvider]:
        ...
    def get_software_bitmap_async() -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_software_bitmap_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode) -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_software_bitmap_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode, transform: BitmapTransform, exif_orientation_mode: ExifOrientationMode, color_management_mode: ColorManagementMode) -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_thumbnail_async() -> winrt.windows.foundation.IAsyncOperation[ImageStream]:
        ...

class BitmapProperties(IBitmapPropertiesView, _winrt.winrt_base):
    ...
    def get_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[BitmapPropertySet]:
        ...
    def set_properties_async(properties_to_set: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, BitmapTypedValue]]) -> winrt.windows.foundation.IAsyncAction:
        ...

class BitmapPropertiesView(IBitmapPropertiesView, _winrt.winrt_base):
    ...
    def get_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[BitmapPropertySet]:
        ...

class BitmapPropertySet(winrt.windows.foundation.collections.IMap[str, BitmapTypedValue], winrt.windows.foundation.collections.IIterable[winrt.windows.foundation.collections.IKeyValuePair[str, BitmapTypedValue]], _winrt.winrt_base):
    ...
    size: int
    def clear() -> None:
        ...
    def first() -> winrt.windows.foundation.collections.IIterator[winrt.windows.foundation.collections.IKeyValuePair[str, BitmapTypedValue]]:
        ...
    def get_view() -> winrt.windows.foundation.collections.IMapView[str, BitmapTypedValue]:
        ...
    def has_key(key: str) -> bool:
        ...
    def insert(key: str, value: BitmapTypedValue) -> bool:
        ...
    def lookup(key: str) -> BitmapTypedValue:
        ...
    def remove(key: str) -> None:
        ...

class BitmapTransform(_winrt.winrt_base):
    ...
    scaled_width: int
    scaled_height: int
    rotation: BitmapRotation
    interpolation_mode: BitmapInterpolationMode
    flip: BitmapFlip
    bounds: BitmapBounds

class BitmapTypedValue(_winrt.winrt_base):
    ...
    type: winrt.windows.foundation.PropertyType
    value: _winrt.winrt_base

class ImageStream(winrt.windows.storage.streams.IRandomAccessStreamWithContentType, winrt.windows.storage.streams.IContentTypeProvider, winrt.windows.storage.streams.IRandomAccessStream, winrt.windows.storage.streams.IOutputStream, winrt.windows.foundation.IClosable, winrt.windows.storage.streams.IInputStream, _winrt.winrt_base):
    ...
    content_type: str
    size: int
    can_read: bool
    can_write: bool
    position: int
    def clone_stream() -> winrt.windows.storage.streams.IRandomAccessStream:
        ...
    def close() -> None:
        ...
    def flush_async() -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def get_input_stream_at(position: int) -> winrt.windows.storage.streams.IInputStream:
        ...
    def get_output_stream_at(position: int) -> winrt.windows.storage.streams.IOutputStream:
        ...
    def read_async(buffer: winrt.windows.storage.streams.IBuffer, count: int, options: winrt.windows.storage.streams.InputStreamOptions) -> winrt.windows.foundation.IAsyncOperationWithProgress[winrt.windows.storage.streams.IBuffer, int]:
        ...
    def seek(position: int) -> None:
        ...
    def write_async(buffer: winrt.windows.storage.streams.IBuffer) -> winrt.windows.foundation.IAsyncOperationWithProgress[int, int]:
        ...

class PixelDataProvider(_winrt.winrt_base):
    ...
    def detach_pixel_data() -> int:
        ...

class SoftwareBitmap(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    dpi_y: float
    dpi_x: float
    bitmap_alpha_mode: BitmapAlphaMode
    bitmap_pixel_format: BitmapPixelFormat
    is_read_only: bool
    pixel_height: int
    pixel_width: int
    def close() -> None:
        ...
    def convert(source: SoftwareBitmap, format: BitmapPixelFormat) -> SoftwareBitmap:
        ...
    def convert(source: SoftwareBitmap, format: BitmapPixelFormat, alpha: BitmapAlphaMode) -> SoftwareBitmap:
        ...
    def copy(source: SoftwareBitmap) -> SoftwareBitmap:
        ...
    def copy_from_buffer(buffer: winrt.windows.storage.streams.IBuffer) -> None:
        ...
    def copy_to(bitmap: SoftwareBitmap) -> None:
        ...
    def copy_to_buffer(buffer: winrt.windows.storage.streams.IBuffer) -> None:
        ...
    def create_copy_from_buffer(source: winrt.windows.storage.streams.IBuffer, format: BitmapPixelFormat, width: int, height: int) -> SoftwareBitmap:
        ...
    def create_copy_from_buffer(source: winrt.windows.storage.streams.IBuffer, format: BitmapPixelFormat, width: int, height: int, alpha: BitmapAlphaMode) -> SoftwareBitmap:
        ...
    def create_copy_from_surface_async(surface: winrt.windows.graphics.directx.direct3d11.IDirect3DSurface) -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def create_copy_from_surface_async(surface: winrt.windows.graphics.directx.direct3d11.IDirect3DSurface, alpha: BitmapAlphaMode) -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_read_only_view() -> SoftwareBitmap:
        ...
    def lock_buffer(mode: BitmapBufferAccessMode) -> BitmapBuffer:
        ...

class IBitmapFrame(_winrt.winrt_base):
    ...
    bitmap_alpha_mode: BitmapAlphaMode
    bitmap_pixel_format: BitmapPixelFormat
    bitmap_properties: BitmapPropertiesView
    dpi_x: float
    dpi_y: float
    oriented_pixel_height: int
    oriented_pixel_width: int
    pixel_height: int
    pixel_width: int
    def get_pixel_data_async() -> winrt.windows.foundation.IAsyncOperation[PixelDataProvider]:
        ...
    def get_pixel_data_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode, transform: BitmapTransform, exif_orientation_mode: ExifOrientationMode, color_management_mode: ColorManagementMode) -> winrt.windows.foundation.IAsyncOperation[PixelDataProvider]:
        ...
    def get_thumbnail_async() -> winrt.windows.foundation.IAsyncOperation[ImageStream]:
        ...

class IBitmapFrameWithSoftwareBitmap(IBitmapFrame, _winrt.winrt_base):
    ...
    bitmap_alpha_mode: BitmapAlphaMode
    bitmap_pixel_format: BitmapPixelFormat
    bitmap_properties: BitmapPropertiesView
    dpi_x: float
    dpi_y: float
    oriented_pixel_height: int
    oriented_pixel_width: int
    pixel_height: int
    pixel_width: int
    def get_software_bitmap_async() -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_software_bitmap_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode) -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_software_bitmap_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode, transform: BitmapTransform, exif_orientation_mode: ExifOrientationMode, color_management_mode: ColorManagementMode) -> winrt.windows.foundation.IAsyncOperation[SoftwareBitmap]:
        ...
    def get_pixel_data_async() -> winrt.windows.foundation.IAsyncOperation[PixelDataProvider]:
        ...
    def get_pixel_data_async(pixel_format: BitmapPixelFormat, alpha_mode: BitmapAlphaMode, transform: BitmapTransform, exif_orientation_mode: ExifOrientationMode, color_management_mode: ColorManagementMode) -> winrt.windows.foundation.IAsyncOperation[PixelDataProvider]:
        ...
    def get_thumbnail_async() -> winrt.windows.foundation.IAsyncOperation[ImageStream]:
        ...

class IBitmapPropertiesView(_winrt.winrt_base):
    ...
    def get_properties_async(properties_to_retrieve: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[BitmapPropertySet]:
        ...

