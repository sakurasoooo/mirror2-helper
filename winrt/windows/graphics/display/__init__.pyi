# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.graphics
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class AdvancedColorKind(enum.IntEnum):
    STANDARD_DYNAMIC_RANGE = 0
    WIDE_COLOR_GAMUT = 1
    HIGH_DYNAMIC_RANGE = 2

class DisplayBrightnessOverrideOptions(enum.IntFlag):
    NONE = 0
    USE_DIMMED_POLICY_WHEN_BATTERY_IS_LOW = 0x1

class DisplayBrightnessOverrideScenario(enum.IntEnum):
    IDLE_BRIGHTNESS = 0
    BARCODE_READING_BRIGHTNESS = 1
    FULL_BRIGHTNESS = 2

class DisplayBrightnessScenario(enum.IntEnum):
    DEFAULT_BRIGHTNESS = 0
    IDLE_BRIGHTNESS = 1
    BARCODE_READING_BRIGHTNESS = 2
    FULL_BRIGHTNESS = 3

class DisplayColorOverrideScenario(enum.IntEnum):
    ACCURATE = 0

class DisplayOrientations(enum.IntFlag):
    NONE = 0
    LANDSCAPE = 0x1
    PORTRAIT = 0x2
    LANDSCAPE_FLIPPED = 0x4
    PORTRAIT_FLIPPED = 0x8

class HdrMetadataFormat(enum.IntEnum):
    HDR10 = 0
    HDR10_PLUS = 1

class ResolutionScale(enum.IntEnum):
    INVALID = 0
    SCALE100_PERCENT = 100
    SCALE120_PERCENT = 120
    SCALE125_PERCENT = 125
    SCALE140_PERCENT = 140
    SCALE150_PERCENT = 150
    SCALE160_PERCENT = 160
    SCALE175_PERCENT = 175
    SCALE180_PERCENT = 180
    SCALE200_PERCENT = 200
    SCALE225_PERCENT = 225
    SCALE250_PERCENT = 250
    SCALE300_PERCENT = 300
    SCALE350_PERCENT = 350
    SCALE400_PERCENT = 400
    SCALE450_PERCENT = 450
    SCALE500_PERCENT = 500

class NitRange(_winrt.winrt_base):
    ...

class AdvancedColorInfo(_winrt.winrt_base):
    ...
    blue_primary: winrt.windows.foundation.Point
    current_advanced_color_kind: AdvancedColorKind
    green_primary: winrt.windows.foundation.Point
    max_average_full_frame_luminance_in_nits: float
    max_luminance_in_nits: float
    min_luminance_in_nits: float
    red_primary: winrt.windows.foundation.Point
    sdr_white_level_in_nits: float
    white_point: winrt.windows.foundation.Point
    def is_advanced_color_kind_available(kind: AdvancedColorKind) -> bool:
        ...
    def is_hdr_metadata_format_currently_supported(format: HdrMetadataFormat) -> bool:
        ...

class BrightnessOverride(_winrt.winrt_base):
    ...
    brightness_level: float
    is_override_active: bool
    is_supported: bool
    def get_default_for_system() -> BrightnessOverride:
        ...
    def get_for_current_view() -> BrightnessOverride:
        ...
    def get_level_for_scenario(scenario: DisplayBrightnessScenario) -> float:
        ...
    def save_for_system_async(value: BrightnessOverride) -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def set_brightness_level(brightness_level: float, options: DisplayBrightnessOverrideOptions) -> None:
        ...
    def set_brightness_scenario(scenario: DisplayBrightnessScenario, options: DisplayBrightnessOverrideOptions) -> None:
        ...
    def start_override() -> None:
        ...
    def stop_override() -> None:
        ...
    def add_brightness_level_changed(handler: winrt.windows.foundation.TypedEventHandler[BrightnessOverride, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_brightness_level_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_is_override_active_changed(handler: winrt.windows.foundation.TypedEventHandler[BrightnessOverride, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_is_override_active_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_is_supported_changed(handler: winrt.windows.foundation.TypedEventHandler[BrightnessOverride, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_is_supported_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class BrightnessOverrideSettings(_winrt.winrt_base):
    ...
    desired_level: float
    desired_nits: float
    def create_from_display_brightness_override_scenario(override_scenario: DisplayBrightnessOverrideScenario) -> BrightnessOverrideSettings:
        ...
    def create_from_level(level: float) -> BrightnessOverrideSettings:
        ...
    def create_from_nits(nits: float) -> BrightnessOverrideSettings:
        ...

class ColorOverrideSettings(_winrt.winrt_base):
    ...
    desired_display_color_override_scenario: DisplayColorOverrideScenario
    def create_from_display_color_override_scenario(override_scenario: DisplayColorOverrideScenario) -> ColorOverrideSettings:
        ...

class DisplayEnhancementOverride(_winrt.winrt_base):
    ...
    color_override_settings: ColorOverrideSettings
    brightness_override_settings: BrightnessOverrideSettings
    can_override: bool
    is_override_active: bool
    def get_current_display_enhancement_override_capabilities() -> DisplayEnhancementOverrideCapabilities:
        ...
    def get_for_current_view() -> DisplayEnhancementOverride:
        ...
    def request_override() -> None:
        ...
    def stop_override() -> None:
        ...
    def add_can_override_changed(handler: winrt.windows.foundation.TypedEventHandler[DisplayEnhancementOverride, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_can_override_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_display_enhancement_override_capabilities_changed(handler: winrt.windows.foundation.TypedEventHandler[DisplayEnhancementOverride, DisplayEnhancementOverrideCapabilitiesChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_display_enhancement_override_capabilities_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_is_override_active_changed(handler: winrt.windows.foundation.TypedEventHandler[DisplayEnhancementOverride, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_is_override_active_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class DisplayEnhancementOverrideCapabilities(_winrt.winrt_base):
    ...
    is_brightness_control_supported: bool
    is_brightness_nits_control_supported: bool
    def get_supported_nit_ranges() -> winrt.windows.foundation.collections.IVectorView[NitRange]:
        ...

class DisplayEnhancementOverrideCapabilitiesChangedEventArgs(_winrt.winrt_base):
    ...
    capabilities: DisplayEnhancementOverrideCapabilities

class DisplayInformation(_winrt.winrt_base):
    ...
    current_orientation: DisplayOrientations
    logical_dpi: float
    native_orientation: DisplayOrientations
    raw_dpi_x: float
    raw_dpi_y: float
    resolution_scale: ResolutionScale
    stereo_enabled: bool
    raw_pixels_per_view_pixel: float
    diagonal_size_in_inches: typing.Optional[float]
    screen_height_in_raw_pixels: int
    screen_width_in_raw_pixels: int
    auto_rotation_preferences: DisplayOrientations
    def get_advanced_color_info() -> AdvancedColorInfo:
        ...
    def get_color_profile_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.streams.IRandomAccessStream]:
        ...
    def get_for_current_view() -> DisplayInformation:
        ...
    def add_color_profile_changed(handler: winrt.windows.foundation.TypedEventHandler[DisplayInformation, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_color_profile_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_dpi_changed(handler: winrt.windows.foundation.TypedEventHandler[DisplayInformation, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_dpi_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_orientation_changed(handler: winrt.windows.foundation.TypedEventHandler[DisplayInformation, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_orientation_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stereo_enabled_changed(handler: winrt.windows.foundation.TypedEventHandler[DisplayInformation, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_stereo_enabled_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_advanced_color_info_changed(handler: winrt.windows.foundation.TypedEventHandler[DisplayInformation, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_advanced_color_info_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_display_contents_invalidated(handler: winrt.windows.foundation.TypedEventHandler[DisplayInformation, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_display_contents_invalidated(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class DisplayProperties(_winrt.winrt_base):
    ...
    auto_rotation_preferences: DisplayOrientations
    current_orientation: DisplayOrientations
    logical_dpi: float
    native_orientation: DisplayOrientations
    resolution_scale: ResolutionScale
    stereo_enabled: bool
    def get_color_profile_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.storage.streams.IRandomAccessStream]:
        ...
    def add_color_profile_changed(handler: DisplayPropertiesEventHandler) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_color_profile_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_display_contents_invalidated(handler: DisplayPropertiesEventHandler) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_display_contents_invalidated(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_logical_dpi_changed(handler: DisplayPropertiesEventHandler) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_logical_dpi_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_orientation_changed(handler: DisplayPropertiesEventHandler) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_orientation_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stereo_enabled_changed(handler: DisplayPropertiesEventHandler) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_stereo_enabled_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class DisplayServices(_winrt.winrt_base):
    ...
    def find_all() -> winrt.windows.graphics.DisplayId:
        ...

DisplayPropertiesEventHandler = typing.Callable[[_winrt.winrt_base], None]

