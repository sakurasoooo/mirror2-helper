# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.enumeration
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.globalization
except Exception:
    pass

try:
    import winrt.windows.networking.sockets
except Exception:
    pass

try:
    import winrt.windows.security.credentials
except Exception:
    pass

try:
    import winrt.windows.security.cryptography.certificates
except Exception:
    pass

class AllJoynAuthenticationMechanism(enum.IntEnum):
    NONE = 0
    SRP_ANONYMOUS = 1
    SRP_LOGON = 2
    ECDHE_NULL = 3
    ECDHE_PSK = 4
    ECDHE_ECDSA = 5
    ECDHE_SPEKE = 6

class AllJoynBusAttachmentState(enum.IntEnum):
    DISCONNECTED = 0
    CONNECTING = 1
    CONNECTED = 2
    DISCONNECTING = 3

class AllJoynSessionLostReason(enum.IntEnum):
    NONE = 0
    PRODUCER_LEFT_SESSION = 1
    PRODUCER_CLOSED_ABRUPTLY = 2
    REMOVED_BY_PRODUCER = 3
    LINK_TIMEOUT = 4
    OTHER = 5

class AllJoynTrafficType(enum.IntEnum):
    UNKNOWN = 0
    MESSAGES = 1
    RAW_UNRELIABLE = 2
    RAW_RELIABLE = 4

class AllJoynAboutData(_winrt.winrt_base):
    ...
    default_description: str
    default_app_name: str
    date_of_manufacture: typing.Optional[winrt.windows.foundation.DateTime]
    default_manufacturer: str
    app_id: uuid.UUID
    support_url: winrt.windows.foundation.Uri
    software_version: str
    model_number: str
    is_enabled: bool
    app_names: winrt.windows.foundation.collections.IMap[str, str]
    manufacturers: winrt.windows.foundation.collections.IMap[str, str]
    descriptions: winrt.windows.foundation.collections.IMap[str, str]

class AllJoynAboutDataView(_winrt.winrt_base):
    ...
    a_j_software_version: str
    app_id: uuid.UUID
    app_name: str
    date_of_manufacture: typing.Optional[winrt.windows.foundation.DateTime]
    default_language: winrt.windows.globalization.Language
    description: str
    device_id: str
    device_name: str
    hardware_version: str
    manufacturer: str
    model_number: str
    properties: winrt.windows.foundation.collections.IMapView[str, _winrt.winrt_base]
    software_version: str
    status: int
    support_url: winrt.windows.foundation.Uri
    supported_languages: winrt.windows.foundation.collections.IVectorView[winrt.windows.globalization.Language]
    def get_data_by_session_port_async(unique_name: str, bus_attachment: AllJoynBusAttachment, session_port: int) -> winrt.windows.foundation.IAsyncOperation[AllJoynAboutDataView]:
        ...
    def get_data_by_session_port_async(unique_name: str, bus_attachment: AllJoynBusAttachment, session_port: int, language: winrt.windows.globalization.Language) -> winrt.windows.foundation.IAsyncOperation[AllJoynAboutDataView]:
        ...

class AllJoynAcceptSessionJoinerEventArgs(_winrt.winrt_base):
    ...
    same_network: bool
    same_physical_node: bool
    session_port: int
    traffic_type: AllJoynTrafficType
    unique_name: str
    def accept() -> None:
        ...

class AllJoynAuthenticationCompleteEventArgs(_winrt.winrt_base):
    ...
    authentication_mechanism: AllJoynAuthenticationMechanism
    peer_unique_name: str
    succeeded: bool

class AllJoynBusAttachment(_winrt.winrt_base):
    ...
    about_data: AllJoynAboutData
    authentication_mechanisms: winrt.windows.foundation.collections.IVector[AllJoynAuthenticationMechanism]
    connection_specification: str
    state: AllJoynBusAttachmentState
    unique_name: str
    def connect() -> None:
        ...
    def disconnect() -> None:
        ...
    def get_about_data_async(service_info: AllJoynServiceInfo) -> winrt.windows.foundation.IAsyncOperation[AllJoynAboutDataView]:
        ...
    def get_about_data_async(service_info: AllJoynServiceInfo, language: winrt.windows.globalization.Language) -> winrt.windows.foundation.IAsyncOperation[AllJoynAboutDataView]:
        ...
    def get_default() -> AllJoynBusAttachment:
        ...
    def get_watcher(required_interfaces: typing.Iterable[str]) -> winrt.windows.devices.enumeration.DeviceWatcher:
        ...
    def ping_async(unique_name: str) -> winrt.windows.foundation.IAsyncOperation[int]:
        ...
    def add_authentication_complete(handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynAuthenticationCompleteEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_authentication_complete(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_credentials_requested(handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynCredentialsRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_credentials_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_credentials_verification_requested(handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynCredentialsVerificationRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_credentials_verification_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_state_changed(handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynBusAttachmentStateChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_state_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_accept_session_joiner_requested(handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynAcceptSessionJoinerEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_accept_session_joiner_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_session_joined(handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusAttachment, AllJoynSessionJoinedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_session_joined(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class AllJoynBusAttachmentStateChangedEventArgs(_winrt.winrt_base):
    ...
    state: AllJoynBusAttachmentState
    status: int

class AllJoynBusObject(_winrt.winrt_base):
    ...
    bus_attachment: AllJoynBusAttachment
    session: AllJoynSession
    def add_producer(producer: IAllJoynProducer) -> None:
        ...
    def start() -> None:
        ...
    def stop() -> None:
        ...
    def add_stopped(handler: winrt.windows.foundation.TypedEventHandler[AllJoynBusObject, AllJoynBusObjectStoppedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_stopped(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class AllJoynBusObjectStoppedEventArgs(_winrt.winrt_base):
    ...
    status: int

class AllJoynCredentials(_winrt.winrt_base):
    ...
    timeout: winrt.windows.foundation.TimeSpan
    password_credential: winrt.windows.security.credentials.PasswordCredential
    certificate: winrt.windows.security.cryptography.certificates.Certificate
    authentication_mechanism: AllJoynAuthenticationMechanism

class AllJoynCredentialsRequestedEventArgs(_winrt.winrt_base):
    ...
    attempt_count: int
    credentials: AllJoynCredentials
    peer_unique_name: str
    requested_user_name: str
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class AllJoynCredentialsVerificationRequestedEventArgs(_winrt.winrt_base):
    ...
    authentication_mechanism: AllJoynAuthenticationMechanism
    peer_certificate: winrt.windows.security.cryptography.certificates.Certificate
    peer_certificate_error_severity: winrt.windows.networking.sockets.SocketSslErrorSeverity
    peer_certificate_errors: winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.ChainValidationResult]
    peer_intermediate_certificates: winrt.windows.foundation.collections.IVectorView[winrt.windows.security.cryptography.certificates.Certificate]
    peer_unique_name: str
    def accept() -> None:
        ...
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class AllJoynMessageInfo(_winrt.winrt_base):
    ...
    sender_unique_name: str

class AllJoynProducerStoppedEventArgs(_winrt.winrt_base):
    ...
    status: int

class AllJoynServiceInfo(_winrt.winrt_base):
    ...
    object_path: str
    session_port: int
    unique_name: str
    def from_id_async(device_id: str) -> winrt.windows.foundation.IAsyncOperation[AllJoynServiceInfo]:
        ...

class AllJoynServiceInfoRemovedEventArgs(_winrt.winrt_base):
    ...
    unique_name: str

class AllJoynSession(_winrt.winrt_base):
    ...
    id: int
    status: int
    def get_from_service_info_async(service_info: AllJoynServiceInfo) -> winrt.windows.foundation.IAsyncOperation[AllJoynSession]:
        ...
    def get_from_service_info_async(service_info: AllJoynServiceInfo, bus_attachment: AllJoynBusAttachment) -> winrt.windows.foundation.IAsyncOperation[AllJoynSession]:
        ...
    def remove_member_async(unique_name: str) -> winrt.windows.foundation.IAsyncOperation[int]:
        ...
    def add_lost(handler: winrt.windows.foundation.TypedEventHandler[AllJoynSession, AllJoynSessionLostEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_lost(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_member_added(handler: winrt.windows.foundation.TypedEventHandler[AllJoynSession, AllJoynSessionMemberAddedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_member_added(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_member_removed(handler: winrt.windows.foundation.TypedEventHandler[AllJoynSession, AllJoynSessionMemberRemovedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_member_removed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class AllJoynSessionJoinedEventArgs(_winrt.winrt_base):
    ...
    session: AllJoynSession

class AllJoynSessionLostEventArgs(_winrt.winrt_base):
    ...
    reason: AllJoynSessionLostReason

class AllJoynSessionMemberAddedEventArgs(_winrt.winrt_base):
    ...
    unique_name: str

class AllJoynSessionMemberRemovedEventArgs(_winrt.winrt_base):
    ...
    unique_name: str

class AllJoynStatus(_winrt.winrt_base):
    ...
    authentication_failed: int
    authentication_rejected_by_user: int
    connection_refused: int
    fail: int
    insufficient_security: int
    invalid_argument1: int
    invalid_argument2: int
    invalid_argument3: int
    invalid_argument4: int
    invalid_argument5: int
    invalid_argument6: int
    invalid_argument7: int
    invalid_argument8: int
    ok: int
    operation_timed_out: int
    other_end_closed: int
    ssl_connect_failed: int
    ssl_identity_verification_failed: int

class AllJoynWatcherStoppedEventArgs(_winrt.winrt_base):
    ...
    status: int

class IAllJoynAcceptSessionJoiner(_winrt.winrt_base):
    ...
    def accept() -> None:
        ...

class IAllJoynProducer(_winrt.winrt_base):
    ...
    def set_bus_object(bus_object: AllJoynBusObject) -> None:
        ...

