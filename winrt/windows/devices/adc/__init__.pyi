# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.adc.provider
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

class AdcChannelMode(enum.IntEnum):
    SINGLE_ENDED = 0
    DIFFERENTIAL = 1

class AdcChannel(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    controller: AdcController
    def close() -> None:
        ...
    def read_ratio() -> float:
        ...
    def read_value() -> int:
        ...

class AdcController(_winrt.winrt_base):
    ...
    channel_mode: AdcChannelMode
    channel_count: int
    max_value: int
    min_value: int
    resolution_in_bits: int
    def get_controllers_async(provider: winrt.windows.devices.adc.provider.IAdcProvider) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[AdcController]]:
        ...
    def get_default_async() -> winrt.windows.foundation.IAsyncOperation[AdcController]:
        ...
    def is_channel_mode_supported(channel_mode: AdcChannelMode) -> bool:
        ...
    def open_channel(channel_number: int) -> AdcChannel:
        ...

