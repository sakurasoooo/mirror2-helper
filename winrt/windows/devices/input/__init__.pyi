# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.haptics
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

class PointerDeviceType(enum.IntEnum):
    TOUCH = 0
    PEN = 1
    MOUSE = 2

class MouseDelta(_winrt.winrt_base):
    ...

class PointerDeviceUsage(_winrt.winrt_base):
    ...

class KeyboardCapabilities(_winrt.winrt_base):
    ...
    keyboard_present: int

class MouseCapabilities(_winrt.winrt_base):
    ...
    horizontal_wheel_present: int
    mouse_present: int
    number_of_buttons: int
    swap_buttons: int
    vertical_wheel_present: int

class MouseDevice(_winrt.winrt_base):
    ...
    def get_for_current_view() -> MouseDevice:
        ...
    def add_mouse_moved(handler: winrt.windows.foundation.TypedEventHandler[MouseDevice, MouseEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_mouse_moved(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class MouseEventArgs(_winrt.winrt_base):
    ...
    mouse_delta: MouseDelta

class PenButtonListener(_winrt.winrt_base):
    ...
    def get_default() -> PenButtonListener:
        ...
    def is_supported() -> bool:
        ...
    def add_is_supported_changed(handler: winrt.windows.foundation.TypedEventHandler[PenButtonListener, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_is_supported_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_tail_button_clicked(handler: winrt.windows.foundation.TypedEventHandler[PenButtonListener, PenTailButtonClickedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_tail_button_clicked(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_tail_button_double_clicked(handler: winrt.windows.foundation.TypedEventHandler[PenButtonListener, PenTailButtonDoubleClickedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_tail_button_double_clicked(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_tail_button_long_pressed(handler: winrt.windows.foundation.TypedEventHandler[PenButtonListener, PenTailButtonLongPressedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_tail_button_long_pressed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PenDevice(_winrt.winrt_base):
    ...
    pen_id: uuid.UUID
    simple_haptics_controller: winrt.windows.devices.haptics.SimpleHapticsController
    def get_from_pointer_id(pointer_id: int) -> PenDevice:
        ...

class PenDockListener(_winrt.winrt_base):
    ...
    def get_default() -> PenDockListener:
        ...
    def is_supported() -> bool:
        ...
    def add_docked(handler: winrt.windows.foundation.TypedEventHandler[PenDockListener, PenDockedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_docked(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_is_supported_changed(handler: winrt.windows.foundation.TypedEventHandler[PenDockListener, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_is_supported_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_undocked(handler: winrt.windows.foundation.TypedEventHandler[PenDockListener, PenUndockedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_undocked(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PenDockedEventArgs(_winrt.winrt_base):
    ...

class PenTailButtonClickedEventArgs(_winrt.winrt_base):
    ...

class PenTailButtonDoubleClickedEventArgs(_winrt.winrt_base):
    ...

class PenTailButtonLongPressedEventArgs(_winrt.winrt_base):
    ...

class PenUndockedEventArgs(_winrt.winrt_base):
    ...

class PointerDevice(_winrt.winrt_base):
    ...
    is_integrated: bool
    max_contacts: int
    physical_device_rect: winrt.windows.foundation.Rect
    pointer_device_type: PointerDeviceType
    screen_rect: winrt.windows.foundation.Rect
    supported_usages: winrt.windows.foundation.collections.IVectorView[PointerDeviceUsage]
    max_pointers_with_z_distance: int
    def get_pointer_device(pointer_id: int) -> PointerDevice:
        ...
    def get_pointer_devices() -> winrt.windows.foundation.collections.IVectorView[PointerDevice]:
        ...

class TouchCapabilities(_winrt.winrt_base):
    ...
    contacts: int
    touch_present: int

