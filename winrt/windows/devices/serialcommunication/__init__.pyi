# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class SerialError(enum.IntEnum):
    FRAME = 0
    BUFFER_OVERRUN = 1
    RECEIVE_FULL = 2
    RECEIVE_PARITY = 3
    TRANSMIT_FULL = 4

class SerialHandshake(enum.IntEnum):
    NONE = 0
    REQUEST_TO_SEND = 1
    X_ON_X_OFF = 2
    REQUEST_TO_SEND_X_ON_X_OFF = 3

class SerialParity(enum.IntEnum):
    NONE = 0
    ODD = 1
    EVEN = 2
    MARK = 3
    SPACE = 4

class SerialPinChange(enum.IntEnum):
    BREAK_SIGNAL = 0
    CARRIER_DETECT = 1
    CLEAR_TO_SEND = 2
    DATA_SET_READY = 3
    RING_INDICATOR = 4

class SerialStopBitCount(enum.IntEnum):
    ONE = 0
    ONE_POINT_FIVE = 1
    TWO = 2

class ErrorReceivedEventArgs(_winrt.winrt_base):
    ...
    error: SerialError

class PinChangedEventArgs(_winrt.winrt_base):
    ...
    pin_change: SerialPinChange

class SerialDevice(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    is_data_terminal_ready_enabled: bool
    data_bits: int
    handshake: SerialHandshake
    break_signal_state: bool
    baud_rate: int
    write_timeout: winrt.windows.foundation.TimeSpan
    stop_bits: SerialStopBitCount
    read_timeout: winrt.windows.foundation.TimeSpan
    parity: SerialParity
    is_request_to_send_enabled: bool
    bytes_received: int
    carrier_detect_state: bool
    clear_to_send_state: bool
    data_set_ready_state: bool
    input_stream: winrt.windows.storage.streams.IInputStream
    output_stream: winrt.windows.storage.streams.IOutputStream
    port_name: str
    usb_product_id: int
    usb_vendor_id: int
    def close() -> None:
        ...
    def from_id_async(device_id: str) -> winrt.windows.foundation.IAsyncOperation[SerialDevice]:
        ...
    def get_device_selector() -> str:
        ...
    def get_device_selector(port_name: str) -> str:
        ...
    def get_device_selector_from_usb_vid_pid(vendor_id: int, product_id: int) -> str:
        ...
    def add_error_received(report_handler: winrt.windows.foundation.TypedEventHandler[SerialDevice, ErrorReceivedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_error_received(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_pin_changed(report_handler: winrt.windows.foundation.TypedEventHandler[SerialDevice, PinChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_pin_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

