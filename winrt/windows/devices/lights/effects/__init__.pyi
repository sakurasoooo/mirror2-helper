# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.lights
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.graphics.imaging
except Exception:
    pass

try:
    import winrt.windows.ui
except Exception:
    pass

class LampArrayEffectCompletionBehavior(enum.IntEnum):
    CLEAR_STATE = 0
    KEEP_STATE = 1

class LampArrayEffectStartMode(enum.IntEnum):
    SEQUENTIAL = 0
    SIMULTANEOUS = 1

class LampArrayRepetitionMode(enum.IntEnum):
    OCCURRENCES = 0
    FOREVER = 1

class LampArrayBitmapEffect(ILampArrayEffect, _winrt.winrt_base):
    ...
    update_interval: winrt.windows.foundation.TimeSpan
    start_delay: winrt.windows.foundation.TimeSpan
    duration: winrt.windows.foundation.TimeSpan
    suggested_bitmap_size: winrt.windows.foundation.Size
    z_index: int
    def add_bitmap_requested(handler: winrt.windows.foundation.TypedEventHandler[LampArrayBitmapEffect, LampArrayBitmapRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_bitmap_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class LampArrayBitmapRequestedEventArgs(_winrt.winrt_base):
    ...
    since_started: winrt.windows.foundation.TimeSpan
    def update_bitmap(bitmap: winrt.windows.graphics.imaging.SoftwareBitmap) -> None:
        ...

class LampArrayBlinkEffect(ILampArrayEffect, _winrt.winrt_base):
    ...
    sustain_duration: winrt.windows.foundation.TimeSpan
    start_delay: winrt.windows.foundation.TimeSpan
    repetition_mode: LampArrayRepetitionMode
    repetition_delay: winrt.windows.foundation.TimeSpan
    occurrences: int
    decay_duration: winrt.windows.foundation.TimeSpan
    color: winrt.windows.ui.Color
    attack_duration: winrt.windows.foundation.TimeSpan
    z_index: int

class LampArrayColorRampEffect(ILampArrayEffect, _winrt.winrt_base):
    ...
    start_delay: winrt.windows.foundation.TimeSpan
    ramp_duration: winrt.windows.foundation.TimeSpan
    completion_behavior: LampArrayEffectCompletionBehavior
    color: winrt.windows.ui.Color
    z_index: int

class LampArrayCustomEffect(ILampArrayEffect, _winrt.winrt_base):
    ...
    update_interval: winrt.windows.foundation.TimeSpan
    duration: winrt.windows.foundation.TimeSpan
    z_index: int
    def add_update_requested(handler: winrt.windows.foundation.TypedEventHandler[LampArrayCustomEffect, LampArrayUpdateRequestedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_update_requested(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class LampArrayEffectPlaylist(winrt.windows.foundation.collections.IVectorView[ILampArrayEffect], winrt.windows.foundation.collections.IIterable[ILampArrayEffect], _winrt.winrt_base):
    ...
    repetition_mode: LampArrayRepetitionMode
    occurrences: int
    effect_start_mode: LampArrayEffectStartMode
    size: int
    def append(effect: ILampArrayEffect) -> None:
        ...
    def first() -> winrt.windows.foundation.collections.IIterator[ILampArrayEffect]:
        ...
    def get_at(index: int) -> ILampArrayEffect:
        ...
    def get_many(start_index: int, items_size: int) -> typing.Tuple[int, typing.List[ILampArrayEffect]]:
        ...
    def index_of(value: ILampArrayEffect) -> typing.Tuple[bool, int]:
        ...
    def override_z_index(z_index: int) -> None:
        ...
    def pause() -> None:
        ...
    def pause_all(value: typing.Iterable[LampArrayEffectPlaylist]) -> None:
        ...
    def start() -> None:
        ...
    def start_all(value: typing.Iterable[LampArrayEffectPlaylist]) -> None:
        ...
    def stop() -> None:
        ...
    def stop_all(value: typing.Iterable[LampArrayEffectPlaylist]) -> None:
        ...

class LampArraySolidEffect(ILampArrayEffect, _winrt.winrt_base):
    ...
    z_index: int
    start_delay: winrt.windows.foundation.TimeSpan
    duration: winrt.windows.foundation.TimeSpan
    completion_behavior: LampArrayEffectCompletionBehavior
    color: winrt.windows.ui.Color

class LampArrayUpdateRequestedEventArgs(_winrt.winrt_base):
    ...
    since_started: winrt.windows.foundation.TimeSpan
    def set_color(desired_color: winrt.windows.ui.Color) -> None:
        ...
    def set_color_for_index(lamp_index: int, desired_color: winrt.windows.ui.Color) -> None:
        ...
    def set_colors_for_indices(desired_colors: typing.Sequence[winrt.windows.ui.Color], lamp_indexes: typing.Sequence[int]) -> None:
        ...
    def set_single_color_for_indices(desired_color: winrt.windows.ui.Color, lamp_indexes: typing.Sequence[int]) -> None:
        ...

class ILampArrayEffect(_winrt.winrt_base):
    ...
    z_index: int

