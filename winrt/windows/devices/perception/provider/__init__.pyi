# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.perception
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.foundation.numerics
except Exception:
    pass

try:
    import winrt.windows.graphics.imaging
except Exception:
    pass

try:
    import winrt.windows.media
except Exception:
    pass

class KnownPerceptionFrameKind(_winrt.winrt_base):
    ...
    color: str
    depth: str
    infrared: str

class PerceptionControlGroup(_winrt.winrt_base):
    ...
    frame_provider_ids: winrt.windows.foundation.collections.IVectorView[str]

class PerceptionCorrelation(_winrt.winrt_base):
    ...
    orientation: winrt.windows.foundation.numerics.Quaternion
    position: winrt.windows.foundation.numerics.Vector3
    target_id: str

class PerceptionCorrelationGroup(_winrt.winrt_base):
    ...
    relative_locations: winrt.windows.foundation.collections.IVectorView[PerceptionCorrelation]

class PerceptionFaceAuthenticationGroup(_winrt.winrt_base):
    ...
    frame_provider_ids: winrt.windows.foundation.collections.IVectorView[str]

class PerceptionFrame(_winrt.winrt_base):
    ...
    relative_time: winrt.windows.foundation.TimeSpan
    frame_data: winrt.windows.foundation.IMemoryBuffer
    properties: winrt.windows.foundation.collections.ValueSet

class PerceptionFrameProviderInfo(_winrt.winrt_base):
    ...
    id: str
    hidden: bool
    frame_kind: str
    display_name: str
    device_kind: str

class PerceptionFrameProviderManagerService(_winrt.winrt_base):
    ...
    def publish_frame_for_provider(provider: IPerceptionFrameProvider, frame: PerceptionFrame) -> None:
        ...
    def register_control_group(manager: IPerceptionFrameProviderManager, control_group: PerceptionControlGroup) -> None:
        ...
    def register_correlation_group(manager: IPerceptionFrameProviderManager, correlation_group: PerceptionCorrelationGroup) -> None:
        ...
    def register_face_authentication_group(manager: IPerceptionFrameProviderManager, face_authentication_group: PerceptionFaceAuthenticationGroup) -> None:
        ...
    def register_frame_provider_info(manager: IPerceptionFrameProviderManager, frame_provider_info: PerceptionFrameProviderInfo) -> None:
        ...
    def unregister_control_group(manager: IPerceptionFrameProviderManager, control_group: PerceptionControlGroup) -> None:
        ...
    def unregister_correlation_group(manager: IPerceptionFrameProviderManager, correlation_group: PerceptionCorrelationGroup) -> None:
        ...
    def unregister_face_authentication_group(manager: IPerceptionFrameProviderManager, face_authentication_group: PerceptionFaceAuthenticationGroup) -> None:
        ...
    def unregister_frame_provider_info(manager: IPerceptionFrameProviderManager, frame_provider_info: PerceptionFrameProviderInfo) -> None:
        ...
    def update_availability_for_provider(provider: IPerceptionFrameProvider, available: bool) -> None:
        ...

class PerceptionPropertyChangeRequest(_winrt.winrt_base):
    ...
    status: winrt.windows.devices.perception.PerceptionFrameSourcePropertyChangeStatus
    name: str
    value: _winrt.winrt_base
    def get_deferral() -> winrt.windows.foundation.Deferral:
        ...

class PerceptionVideoFrameAllocator(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    def allocate_frame() -> PerceptionFrame:
        ...
    def close() -> None:
        ...
    def copy_from_video_frame(frame: winrt.windows.media.VideoFrame) -> PerceptionFrame:
        ...

class IPerceptionFrameProvider(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    available: bool
    frame_provider_info: PerceptionFrameProviderInfo
    properties: winrt.windows.foundation.collections.IPropertySet
    def set_property(value: PerceptionPropertyChangeRequest) -> None:
        ...
    def start() -> None:
        ...
    def stop() -> None:
        ...
    def close() -> None:
        ...

class IPerceptionFrameProviderManager(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    def get_frame_provider(frame_provider_info: PerceptionFrameProviderInfo) -> IPerceptionFrameProvider:
        ...
    def close() -> None:
        ...

PerceptionStartFaceAuthenticationHandler = typing.Callable[[PerceptionFaceAuthenticationGroup], bool]

PerceptionStopFaceAuthenticationHandler = typing.Callable[[PerceptionFaceAuthenticationGroup], None]

