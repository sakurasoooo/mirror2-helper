# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.enumeration
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.foundation.numerics
except Exception:
    pass

try:
    import winrt.windows.graphics.imaging
except Exception:
    pass

try:
    import winrt.windows.media
except Exception:
    pass

try:
    import winrt.windows.media.devices.core
except Exception:
    pass

class PerceptionFrameSourceAccessStatus(enum.IntEnum):
    UNSPECIFIED = 0
    ALLOWED = 1
    DENIED_BY_USER = 2
    DENIED_BY_SYSTEM = 3

class PerceptionFrameSourcePropertyChangeStatus(enum.IntEnum):
    UNKNOWN = 0
    ACCEPTED = 1
    LOST_CONTROL = 2
    PROPERTY_NOT_SUPPORTED = 3
    PROPERTY_READ_ONLY = 4
    VALUE_OUT_OF_RANGE = 5

class KnownCameraIntrinsicsProperties(_winrt.winrt_base):
    ...
    focal_length: str
    principal_point: str
    radial_distortion: str
    tangential_distortion: str

class KnownPerceptionColorFrameSourceProperties(_winrt.winrt_base):
    ...
    auto_exposure_enabled: str
    exposure: str
    exposure_compensation: str

class KnownPerceptionDepthFrameSourceProperties(_winrt.winrt_base):
    ...
    max_depth: str
    min_depth: str

class KnownPerceptionFrameSourceProperties(_winrt.winrt_base):
    ...
    device_model_version: str
    enclosure_location: str
    frame_kind: str
    id: str
    physical_device_ids: str
    device_id: str

class KnownPerceptionInfraredFrameSourceProperties(_winrt.winrt_base):
    ...
    active_illumination_enabled: str
    ambient_subtraction_enabled: str
    auto_exposure_enabled: str
    exposure: str
    exposure_compensation: str
    interleaved_illumination_enabled: str
    structure_light_pattern_enabled: str

class KnownPerceptionVideoFrameSourceProperties(_winrt.winrt_base):
    ...
    available_video_profiles: str
    camera_intrinsics: str
    is_mirrored: str
    supported_video_profiles: str
    video_profile: str

class KnownPerceptionVideoProfileProperties(_winrt.winrt_base):
    ...
    bitmap_alpha_mode: str
    bitmap_pixel_format: str
    frame_duration: str
    height: str
    width: str

class PerceptionColorFrame(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    video_frame: winrt.windows.media.VideoFrame
    def close() -> None:
        ...

class PerceptionColorFrameArrivedEventArgs(_winrt.winrt_base):
    ...
    relative_time: winrt.windows.foundation.TimeSpan
    def try_open_frame() -> PerceptionColorFrame:
        ...

class PerceptionColorFrameReader(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    is_paused: bool
    source: PerceptionColorFrameSource
    def close() -> None:
        ...
    def try_read_latest_frame() -> PerceptionColorFrame:
        ...
    def add_frame_arrived(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameReader, PerceptionColorFrameArrivedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_frame_arrived(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionColorFrameSource(_winrt.winrt_base):
    ...
    active: bool
    available: bool
    available_video_profiles: winrt.windows.foundation.collections.IVectorView[PerceptionVideoProfile]
    camera_intrinsics: winrt.windows.media.devices.core.CameraIntrinsics
    device_kind: str
    display_name: str
    id: str
    is_controlled: bool
    properties: winrt.windows.foundation.collections.IMapView[str, _winrt.winrt_base]
    supported_video_profiles: winrt.windows.foundation.collections.IVectorView[PerceptionVideoProfile]
    video_profile: PerceptionVideoProfile
    device_id: str
    def acquire_control_session() -> PerceptionControlSession:
        ...
    def can_control_independently_from(target_id: str) -> bool:
        ...
    def create_watcher() -> PerceptionColorFrameSourceWatcher:
        ...
    def find_all_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[PerceptionColorFrameSource]]:
        ...
    def from_id_async(id: str) -> winrt.windows.foundation.IAsyncOperation[PerceptionColorFrameSource]:
        ...
    def is_correlated_with(target_id: str) -> bool:
        ...
    def open_reader() -> PerceptionColorFrameReader:
        ...
    def request_access_async() -> winrt.windows.foundation.IAsyncOperation[PerceptionFrameSourceAccessStatus]:
        ...
    def try_get_depth_correlated_camera_intrinsics_async(correlated_depth_frame_source: PerceptionDepthFrameSource) -> winrt.windows.foundation.IAsyncOperation[PerceptionDepthCorrelatedCameraIntrinsics]:
        ...
    def try_get_depth_correlated_coordinate_mapper_async(target_source_id: str, correlated_depth_frame_source: PerceptionDepthFrameSource) -> winrt.windows.foundation.IAsyncOperation[PerceptionDepthCorrelatedCoordinateMapper]:
        ...
    def try_get_transform_to(target_id: str) -> typing.Tuple[bool, winrt.windows.foundation.numerics.Matrix4x4]:
        ...
    def try_set_video_profile_async(control_session: PerceptionControlSession, profile: PerceptionVideoProfile) -> winrt.windows.foundation.IAsyncOperation[PerceptionFrameSourcePropertyChangeResult]:
        ...
    def add_active_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_active_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_available_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_available_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_camera_intrinsics_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_camera_intrinsics_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_properties_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSource, PerceptionFrameSourcePropertiesChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_properties_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_video_profile_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_video_profile_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionColorFrameSourceAddedEventArgs(_winrt.winrt_base):
    ...
    frame_source: PerceptionColorFrameSource

class PerceptionColorFrameSourceRemovedEventArgs(_winrt.winrt_base):
    ...
    frame_source: PerceptionColorFrameSource

class PerceptionColorFrameSourceWatcher(_winrt.winrt_base):
    ...
    status: winrt.windows.devices.enumeration.DeviceWatcherStatus
    def start() -> None:
        ...
    def stop() -> None:
        ...
    def add_enumeration_completed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSourceWatcher, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_enumeration_completed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_added(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSourceWatcher, PerceptionColorFrameSourceAddedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_added(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_removed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSourceWatcher, PerceptionColorFrameSourceRemovedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_removed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stopped(handler: winrt.windows.foundation.TypedEventHandler[PerceptionColorFrameSourceWatcher, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_stopped(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionControlSession(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    def close() -> None:
        ...
    def try_set_property_async(name: str, value: _winrt.winrt_base) -> winrt.windows.foundation.IAsyncOperation[PerceptionFrameSourcePropertyChangeResult]:
        ...
    def add_control_lost(handler: winrt.windows.foundation.TypedEventHandler[PerceptionControlSession, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_control_lost(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionDepthCorrelatedCameraIntrinsics(_winrt.winrt_base):
    ...
    def unproject_all_pixels_at_correlated_depth_async(depth_frame: PerceptionDepthFrame, results_size: int) -> typing.Tuple[winrt.windows.foundation.IAsyncAction, typing.List[winrt.windows.foundation.numerics.Vector3]]:
        ...
    def unproject_pixel_at_correlated_depth(pixel_coordinate: winrt.windows.foundation.Point, depth_frame: PerceptionDepthFrame) -> winrt.windows.foundation.numerics.Vector3:
        ...
    def unproject_pixels_at_correlated_depth(source_coordinates: typing.Sequence[winrt.windows.foundation.Point], depth_frame: PerceptionDepthFrame, results_size: int) -> typing.List[winrt.windows.foundation.numerics.Vector3]:
        ...
    def unproject_region_pixels_at_correlated_depth_async(region: winrt.windows.foundation.Rect, depth_frame: PerceptionDepthFrame, results_size: int) -> typing.Tuple[winrt.windows.foundation.IAsyncAction, typing.List[winrt.windows.foundation.numerics.Vector3]]:
        ...

class PerceptionDepthCorrelatedCoordinateMapper(_winrt.winrt_base):
    ...
    def map_all_pixels_to_target_async(depth_frame: PerceptionDepthFrame, target_coordinates_size: int) -> typing.Tuple[winrt.windows.foundation.IAsyncAction, typing.List[winrt.windows.foundation.Point]]:
        ...
    def map_pixel_to_target(source_pixel_coordinate: winrt.windows.foundation.Point, depth_frame: PerceptionDepthFrame) -> winrt.windows.foundation.Point:
        ...
    def map_pixels_to_target(source_coordinates: typing.Sequence[winrt.windows.foundation.Point], depth_frame: PerceptionDepthFrame, results_size: int) -> typing.List[winrt.windows.foundation.Point]:
        ...
    def map_region_of_pixels_to_target_async(region: winrt.windows.foundation.Rect, depth_frame: PerceptionDepthFrame, target_coordinates_size: int) -> typing.Tuple[winrt.windows.foundation.IAsyncAction, typing.List[winrt.windows.foundation.Point]]:
        ...

class PerceptionDepthFrame(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    video_frame: winrt.windows.media.VideoFrame
    def close() -> None:
        ...

class PerceptionDepthFrameArrivedEventArgs(_winrt.winrt_base):
    ...
    relative_time: winrt.windows.foundation.TimeSpan
    def try_open_frame() -> PerceptionDepthFrame:
        ...

class PerceptionDepthFrameReader(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    is_paused: bool
    source: PerceptionDepthFrameSource
    def close() -> None:
        ...
    def try_read_latest_frame() -> PerceptionDepthFrame:
        ...
    def add_frame_arrived(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameReader, PerceptionDepthFrameArrivedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_frame_arrived(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionDepthFrameSource(_winrt.winrt_base):
    ...
    active: bool
    available: bool
    available_video_profiles: winrt.windows.foundation.collections.IVectorView[PerceptionVideoProfile]
    camera_intrinsics: winrt.windows.media.devices.core.CameraIntrinsics
    device_kind: str
    display_name: str
    id: str
    is_controlled: bool
    properties: winrt.windows.foundation.collections.IMapView[str, _winrt.winrt_base]
    supported_video_profiles: winrt.windows.foundation.collections.IVectorView[PerceptionVideoProfile]
    video_profile: PerceptionVideoProfile
    device_id: str
    def acquire_control_session() -> PerceptionControlSession:
        ...
    def can_control_independently_from(target_id: str) -> bool:
        ...
    def create_watcher() -> PerceptionDepthFrameSourceWatcher:
        ...
    def find_all_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[PerceptionDepthFrameSource]]:
        ...
    def from_id_async(id: str) -> winrt.windows.foundation.IAsyncOperation[PerceptionDepthFrameSource]:
        ...
    def is_correlated_with(target_id: str) -> bool:
        ...
    def open_reader() -> PerceptionDepthFrameReader:
        ...
    def request_access_async() -> winrt.windows.foundation.IAsyncOperation[PerceptionFrameSourceAccessStatus]:
        ...
    def try_get_depth_correlated_camera_intrinsics_async(target: PerceptionDepthFrameSource) -> winrt.windows.foundation.IAsyncOperation[PerceptionDepthCorrelatedCameraIntrinsics]:
        ...
    def try_get_depth_correlated_coordinate_mapper_async(target_id: str, depth_frame_source_to_map_with: PerceptionDepthFrameSource) -> winrt.windows.foundation.IAsyncOperation[PerceptionDepthCorrelatedCoordinateMapper]:
        ...
    def try_get_transform_to(target_id: str) -> typing.Tuple[bool, winrt.windows.foundation.numerics.Matrix4x4]:
        ...
    def try_set_video_profile_async(control_session: PerceptionControlSession, profile: PerceptionVideoProfile) -> winrt.windows.foundation.IAsyncOperation[PerceptionFrameSourcePropertyChangeResult]:
        ...
    def add_active_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_active_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_available_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_available_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_camera_intrinsics_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_camera_intrinsics_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_properties_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSource, PerceptionFrameSourcePropertiesChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_properties_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_video_profile_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_video_profile_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionDepthFrameSourceAddedEventArgs(_winrt.winrt_base):
    ...
    frame_source: PerceptionDepthFrameSource

class PerceptionDepthFrameSourceRemovedEventArgs(_winrt.winrt_base):
    ...
    frame_source: PerceptionDepthFrameSource

class PerceptionDepthFrameSourceWatcher(_winrt.winrt_base):
    ...
    status: winrt.windows.devices.enumeration.DeviceWatcherStatus
    def start() -> None:
        ...
    def stop() -> None:
        ...
    def add_enumeration_completed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSourceWatcher, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_enumeration_completed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_added(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSourceWatcher, PerceptionDepthFrameSourceAddedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_added(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_removed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSourceWatcher, PerceptionDepthFrameSourceRemovedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_removed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stopped(handler: winrt.windows.foundation.TypedEventHandler[PerceptionDepthFrameSourceWatcher, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_stopped(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionFrameSourcePropertiesChangedEventArgs(_winrt.winrt_base):
    ...
    collection_change: winrt.windows.foundation.collections.CollectionChange
    key: str

class PerceptionFrameSourcePropertyChangeResult(_winrt.winrt_base):
    ...
    new_value: _winrt.winrt_base
    status: PerceptionFrameSourcePropertyChangeStatus

class PerceptionInfraredFrame(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    video_frame: winrt.windows.media.VideoFrame
    def close() -> None:
        ...

class PerceptionInfraredFrameArrivedEventArgs(_winrt.winrt_base):
    ...
    relative_time: winrt.windows.foundation.TimeSpan
    def try_open_frame() -> PerceptionInfraredFrame:
        ...

class PerceptionInfraredFrameReader(winrt.windows.foundation.IClosable, _winrt.winrt_base):
    ...
    is_paused: bool
    source: PerceptionInfraredFrameSource
    def close() -> None:
        ...
    def try_read_latest_frame() -> PerceptionInfraredFrame:
        ...
    def add_frame_arrived(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameReader, PerceptionInfraredFrameArrivedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_frame_arrived(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionInfraredFrameSource(_winrt.winrt_base):
    ...
    active: bool
    available: bool
    available_video_profiles: winrt.windows.foundation.collections.IVectorView[PerceptionVideoProfile]
    camera_intrinsics: winrt.windows.media.devices.core.CameraIntrinsics
    device_kind: str
    display_name: str
    id: str
    is_controlled: bool
    properties: winrt.windows.foundation.collections.IMapView[str, _winrt.winrt_base]
    supported_video_profiles: winrt.windows.foundation.collections.IVectorView[PerceptionVideoProfile]
    video_profile: PerceptionVideoProfile
    device_id: str
    def acquire_control_session() -> PerceptionControlSession:
        ...
    def can_control_independently_from(target_id: str) -> bool:
        ...
    def create_watcher() -> PerceptionInfraredFrameSourceWatcher:
        ...
    def find_all_async() -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IVectorView[PerceptionInfraredFrameSource]]:
        ...
    def from_id_async(id: str) -> winrt.windows.foundation.IAsyncOperation[PerceptionInfraredFrameSource]:
        ...
    def is_correlated_with(target_id: str) -> bool:
        ...
    def open_reader() -> PerceptionInfraredFrameReader:
        ...
    def request_access_async() -> winrt.windows.foundation.IAsyncOperation[PerceptionFrameSourceAccessStatus]:
        ...
    def try_get_depth_correlated_camera_intrinsics_async(target: PerceptionDepthFrameSource) -> winrt.windows.foundation.IAsyncOperation[PerceptionDepthCorrelatedCameraIntrinsics]:
        ...
    def try_get_depth_correlated_coordinate_mapper_async(target_id: str, depth_frame_source_to_map_with: PerceptionDepthFrameSource) -> winrt.windows.foundation.IAsyncOperation[PerceptionDepthCorrelatedCoordinateMapper]:
        ...
    def try_get_transform_to(target_id: str) -> typing.Tuple[bool, winrt.windows.foundation.numerics.Matrix4x4]:
        ...
    def try_set_video_profile_async(control_session: PerceptionControlSession, profile: PerceptionVideoProfile) -> winrt.windows.foundation.IAsyncOperation[PerceptionFrameSourcePropertyChangeResult]:
        ...
    def add_active_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_active_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_available_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_available_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_camera_intrinsics_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_camera_intrinsics_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_properties_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSource, PerceptionFrameSourcePropertiesChangedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_properties_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_video_profile_changed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSource, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_video_profile_changed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionInfraredFrameSourceAddedEventArgs(_winrt.winrt_base):
    ...
    frame_source: PerceptionInfraredFrameSource

class PerceptionInfraredFrameSourceRemovedEventArgs(_winrt.winrt_base):
    ...
    frame_source: PerceptionInfraredFrameSource

class PerceptionInfraredFrameSourceWatcher(_winrt.winrt_base):
    ...
    status: winrt.windows.devices.enumeration.DeviceWatcherStatus
    def start() -> None:
        ...
    def stop() -> None:
        ...
    def add_enumeration_completed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSourceWatcher, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_enumeration_completed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_added(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSourceWatcher, PerceptionInfraredFrameSourceAddedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_added(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_source_removed(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSourceWatcher, PerceptionInfraredFrameSourceRemovedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_source_removed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_stopped(handler: winrt.windows.foundation.TypedEventHandler[PerceptionInfraredFrameSourceWatcher, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_stopped(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class PerceptionVideoProfile(_winrt.winrt_base):
    ...
    bitmap_alpha_mode: winrt.windows.graphics.imaging.BitmapAlphaMode
    bitmap_pixel_format: winrt.windows.graphics.imaging.BitmapPixelFormat
    frame_duration: winrt.windows.foundation.TimeSpan
    height: int
    width: int
    def is_equal(other: PerceptionVideoProfile) -> bool:
        ...

