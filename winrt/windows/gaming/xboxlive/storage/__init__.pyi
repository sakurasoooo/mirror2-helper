# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

try:
    import winrt.windows.system
except Exception:
    pass

class GameSaveErrorStatus(enum.IntEnum):
    OK = 0
    ABORT = -2147467260
    INVALID_CONTAINER_NAME = -2138898431
    NO_ACCESS = -2138898430
    OUT_OF_LOCAL_STORAGE = -2138898429
    USER_CANCELED = -2138898428
    UPDATE_TOO_BIG = -2138898427
    QUOTA_EXCEEDED = -2138898426
    PROVIDED_BUFFER_TOO_SMALL = -2138898425
    BLOB_NOT_FOUND = -2138898424
    NO_XBOX_LIVE_INFO = -2138898423
    CONTAINER_NOT_IN_SYNC = -2138898422
    CONTAINER_SYNC_FAILED = -2138898421
    USER_HAS_NO_XBOX_LIVE_INFO = -2138898420
    OBJECT_EXPIRED = -2138898419

class GameSaveBlobGetResult(_winrt.winrt_base):
    ...
    status: GameSaveErrorStatus
    value: winrt.windows.foundation.collections.IMapView[str, winrt.windows.storage.streams.IBuffer]

class GameSaveBlobInfo(_winrt.winrt_base):
    ...
    name: str
    size: int

class GameSaveBlobInfoGetResult(_winrt.winrt_base):
    ...
    status: GameSaveErrorStatus
    value: winrt.windows.foundation.collections.IVectorView[GameSaveBlobInfo]

class GameSaveBlobInfoQuery(_winrt.winrt_base):
    ...
    def get_blob_info_async() -> winrt.windows.foundation.IAsyncOperation[GameSaveBlobInfoGetResult]:
        ...
    def get_blob_info_async(start_index: int, max_number_of_items: int) -> winrt.windows.foundation.IAsyncOperation[GameSaveBlobInfoGetResult]:
        ...
    def get_item_count_async() -> winrt.windows.foundation.IAsyncOperation[int]:
        ...

class GameSaveContainer(_winrt.winrt_base):
    ...
    name: str
    provider: GameSaveProvider
    def create_blob_info_query(blob_name_prefix: str) -> GameSaveBlobInfoQuery:
        ...
    def get_async(blobs_to_read: typing.Iterable[str]) -> winrt.windows.foundation.IAsyncOperation[GameSaveBlobGetResult]:
        ...
    def read_async(blobs_to_read: winrt.windows.foundation.collections.IMapView[str, winrt.windows.storage.streams.IBuffer]) -> winrt.windows.foundation.IAsyncOperation[GameSaveOperationResult]:
        ...
    def submit_property_set_updates_async(blobs_to_write: winrt.windows.foundation.collections.IPropertySet, blobs_to_delete: typing.Iterable[str], display_name: str) -> winrt.windows.foundation.IAsyncOperation[GameSaveOperationResult]:
        ...
    def submit_updates_async(blobs_to_write: winrt.windows.foundation.collections.IMapView[str, winrt.windows.storage.streams.IBuffer], blobs_to_delete: typing.Iterable[str], display_name: str) -> winrt.windows.foundation.IAsyncOperation[GameSaveOperationResult]:
        ...

class GameSaveContainerInfo(_winrt.winrt_base):
    ...
    display_name: str
    last_modified_time: winrt.windows.foundation.DateTime
    name: str
    needs_sync: bool
    total_size: int

class GameSaveContainerInfoGetResult(_winrt.winrt_base):
    ...
    status: GameSaveErrorStatus
    value: winrt.windows.foundation.collections.IVectorView[GameSaveContainerInfo]

class GameSaveContainerInfoQuery(_winrt.winrt_base):
    ...
    def get_container_info_async() -> winrt.windows.foundation.IAsyncOperation[GameSaveContainerInfoGetResult]:
        ...
    def get_container_info_async(start_index: int, max_number_of_items: int) -> winrt.windows.foundation.IAsyncOperation[GameSaveContainerInfoGetResult]:
        ...
    def get_item_count_async() -> winrt.windows.foundation.IAsyncOperation[int]:
        ...

class GameSaveOperationResult(_winrt.winrt_base):
    ...
    status: GameSaveErrorStatus

class GameSaveProvider(_winrt.winrt_base):
    ...
    containers_changed_since_last_sync: winrt.windows.foundation.collections.IVectorView[str]
    user: winrt.windows.system.User
    def create_container(name: str) -> GameSaveContainer:
        ...
    def create_container_info_query() -> GameSaveContainerInfoQuery:
        ...
    def create_container_info_query(container_name_prefix: str) -> GameSaveContainerInfoQuery:
        ...
    def delete_container_async(name: str) -> winrt.windows.foundation.IAsyncOperation[GameSaveOperationResult]:
        ...
    def get_for_user_async(user: winrt.windows.system.User, service_config_id: str) -> winrt.windows.foundation.IAsyncOperation[GameSaveProviderGetResult]:
        ...
    def get_remaining_bytes_in_quota_async() -> winrt.windows.foundation.IAsyncOperation[int]:
        ...
    def get_sync_on_demand_for_user_async(user: winrt.windows.system.User, service_config_id: str) -> winrt.windows.foundation.IAsyncOperation[GameSaveProviderGetResult]:
        ...

class GameSaveProviderGetResult(_winrt.winrt_base):
    ...
    status: GameSaveErrorStatus
    value: GameSaveProvider

