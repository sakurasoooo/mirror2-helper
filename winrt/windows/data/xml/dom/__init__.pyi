# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.storage
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

class NodeType(enum.IntEnum):
    INVALID = 0
    ELEMENT_NODE = 1
    ATTRIBUTE_NODE = 2
    TEXT_NODE = 3
    DATA_SECTION_NODE = 4
    ENTITY_REFERENCE_NODE = 5
    ENTITY_NODE = 6
    PROCESSING_INSTRUCTION_NODE = 7
    COMMENT_NODE = 8
    DOCUMENT_NODE = 9
    DOCUMENT_TYPE_NODE = 10
    DOCUMENT_FRAGMENT_NODE = 11
    NOTATION_NODE = 12

class DtdEntity(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    notation_name: _winrt.winrt_base
    public_id: _winrt.winrt_base
    system_id: _winrt.winrt_base
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    child_nodes: XmlNodeList
    parent_node: IXmlNode
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class DtdNotation(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    public_id: _winrt.winrt_base
    system_id: _winrt.winrt_base
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    child_nodes: XmlNodeList
    parent_node: IXmlNode
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class XmlAttribute(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    value: str
    specified: bool
    name: str
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    child_nodes: XmlNodeList
    parent_node: IXmlNode
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class XmlCDataSection(IXmlText, IXmlCharacterData, IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    data: str
    length: int
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    child_nodes: XmlNodeList
    parent_node: IXmlNode
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def append_data(data: str) -> None:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def delete_data(offset: int, count: int) -> None:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def insert_data(offset: int, data: str) -> None:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def replace_data(offset: int, count: int, data: str) -> None:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...
    def split_text(offset: int) -> IXmlText:
        ...
    def substring_data(offset: int, count: int) -> str:
        ...

class XmlComment(IXmlCharacterData, IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    data: str
    length: int
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    child_nodes: XmlNodeList
    parent_node: IXmlNode
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def append_data(data: str) -> None:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def delete_data(offset: int, count: int) -> None:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def insert_data(offset: int, data: str) -> None:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def replace_data(offset: int, count: int, data: str) -> None:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...
    def substring_data(offset: int, count: int) -> str:
        ...

class XmlDocument(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    doctype: XmlDocumentType
    document_element: XmlElement
    document_uri: str
    implementation: XmlDomImplementation
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    child_nodes: XmlNodeList
    parent_node: IXmlNode
    owner_document: XmlDocument
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def create_attribute(name: str) -> XmlAttribute:
        ...
    def create_attribute_n_s(namespace_uri: _winrt.winrt_base, qualified_name: str) -> XmlAttribute:
        ...
    def create_c_data_section(data: str) -> XmlCDataSection:
        ...
    def create_comment(data: str) -> XmlComment:
        ...
    def create_document_fragment() -> XmlDocumentFragment:
        ...
    def create_element(tag_name: str) -> XmlElement:
        ...
    def create_element_n_s(namespace_uri: _winrt.winrt_base, qualified_name: str) -> XmlElement:
        ...
    def create_entity_reference(name: str) -> XmlEntityReference:
        ...
    def create_processing_instruction(target: str, data: str) -> XmlProcessingInstruction:
        ...
    def create_text_node(data: str) -> XmlText:
        ...
    def get_element_by_id(element_id: str) -> XmlElement:
        ...
    def get_elements_by_tag_name(tag_name: str) -> XmlNodeList:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def import_node(node: IXmlNode, deep: bool) -> IXmlNode:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def load_from_file_async(file: winrt.windows.storage.IStorageFile) -> winrt.windows.foundation.IAsyncOperation[XmlDocument]:
        ...
    def load_from_file_async(file: winrt.windows.storage.IStorageFile, load_settings: XmlLoadSettings) -> winrt.windows.foundation.IAsyncOperation[XmlDocument]:
        ...
    def load_from_uri_async(uri: winrt.windows.foundation.Uri) -> winrt.windows.foundation.IAsyncOperation[XmlDocument]:
        ...
    def load_from_uri_async(uri: winrt.windows.foundation.Uri, load_settings: XmlLoadSettings) -> winrt.windows.foundation.IAsyncOperation[XmlDocument]:
        ...
    def load_xml(xml: str) -> None:
        ...
    def load_xml(xml: str, load_settings: XmlLoadSettings) -> None:
        ...
    def load_xml_from_buffer(buffer: winrt.windows.storage.streams.IBuffer) -> None:
        ...
    def load_xml_from_buffer(buffer: winrt.windows.storage.streams.IBuffer, load_settings: XmlLoadSettings) -> None:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def save_to_file_async(file: winrt.windows.storage.IStorageFile) -> winrt.windows.foundation.IAsyncAction:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class XmlDocumentFragment(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    parent_node: IXmlNode
    child_nodes: XmlNodeList
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class XmlDocumentType(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    entities: XmlNamedNodeMap
    name: str
    notations: XmlNamedNodeMap
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    child_nodes: XmlNodeList
    parent_node: IXmlNode
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class XmlDomImplementation(_winrt.winrt_base):
    ...
    def has_feature(feature: str, version: _winrt.winrt_base) -> bool:
        ...

class XmlElement(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    tag_name: str
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    next_sibling: IXmlNode
    namespace_uri: _winrt.winrt_base
    node_type: NodeType
    node_name: str
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    parent_node: IXmlNode
    child_nodes: XmlNodeList
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def get_attribute(attribute_name: str) -> str:
        ...
    def get_attribute_n_s(namespace_uri: _winrt.winrt_base, local_name: str) -> str:
        ...
    def get_attribute_node(attribute_name: str) -> XmlAttribute:
        ...
    def get_attribute_node_n_s(namespace_uri: _winrt.winrt_base, local_name: str) -> XmlAttribute:
        ...
    def get_elements_by_tag_name(tag_name: str) -> XmlNodeList:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_attribute(attribute_name: str) -> None:
        ...
    def remove_attribute_n_s(namespace_uri: _winrt.winrt_base, local_name: str) -> None:
        ...
    def remove_attribute_node(attribute_node: XmlAttribute) -> XmlAttribute:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...
    def set_attribute(attribute_name: str, attribute_value: str) -> None:
        ...
    def set_attribute_n_s(namespace_uri: _winrt.winrt_base, qualified_name: str, value: str) -> None:
        ...
    def set_attribute_node(new_attribute: XmlAttribute) -> XmlAttribute:
        ...
    def set_attribute_node_n_s(new_attribute: XmlAttribute) -> XmlAttribute:
        ...

class XmlEntityReference(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    parent_node: IXmlNode
    child_nodes: XmlNodeList
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class XmlLoadSettings(_winrt.winrt_base):
    ...
    validate_on_parse: bool
    resolve_externals: bool
    prohibit_dtd: bool
    max_element_depth: int
    element_content_white_space: bool

class XmlNamedNodeMap(winrt.windows.foundation.collections.IVectorView[IXmlNode], winrt.windows.foundation.collections.IIterable[IXmlNode], _winrt.winrt_base):
    ...
    length: int
    size: int
    def first() -> winrt.windows.foundation.collections.IIterator[IXmlNode]:
        ...
    def get_at(index: int) -> IXmlNode:
        ...
    def get_many(start_index: int, items_size: int) -> typing.Tuple[int, typing.List[IXmlNode]]:
        ...
    def get_named_item(name: str) -> IXmlNode:
        ...
    def get_named_item_n_s(namespace_uri: _winrt.winrt_base, name: str) -> IXmlNode:
        ...
    def index_of(value: IXmlNode) -> typing.Tuple[bool, int]:
        ...
    def item(index: int) -> IXmlNode:
        ...
    def remove_named_item(name: str) -> IXmlNode:
        ...
    def remove_named_item_n_s(namespace_uri: _winrt.winrt_base, name: str) -> IXmlNode:
        ...
    def set_named_item(node: IXmlNode) -> IXmlNode:
        ...
    def set_named_item_n_s(node: IXmlNode) -> IXmlNode:
        ...

class XmlNodeList(winrt.windows.foundation.collections.IVectorView[IXmlNode], winrt.windows.foundation.collections.IIterable[IXmlNode], _winrt.winrt_base):
    ...
    length: int
    size: int
    def first() -> winrt.windows.foundation.collections.IIterator[IXmlNode]:
        ...
    def get_at(index: int) -> IXmlNode:
        ...
    def get_many(start_index: int, items_size: int) -> typing.Tuple[int, typing.List[IXmlNode]]:
        ...
    def index_of(value: IXmlNode) -> typing.Tuple[bool, int]:
        ...
    def item(index: int) -> IXmlNode:
        ...

class XmlProcessingInstruction(IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    attributes: XmlNamedNodeMap
    first_child: IXmlNode
    child_nodes: XmlNodeList
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    owner_document: XmlDocument
    parent_node: IXmlNode
    previous_sibling: IXmlNode
    inner_text: str
    data: str
    target: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class XmlText(IXmlText, IXmlCharacterData, IXmlNode, IXmlNodeSerializer, IXmlNodeSelector, _winrt.winrt_base):
    ...
    data: str
    length: int
    prefix: _winrt.winrt_base
    node_value: _winrt.winrt_base
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    attributes: XmlNamedNodeMap
    owner_document: XmlDocument
    child_nodes: XmlNodeList
    parent_node: IXmlNode
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def append_data(data: str) -> None:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def delete_data(offset: int, count: int) -> None:
        ...
    def get_xml() -> str:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def insert_data(offset: int, data: str) -> None:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def replace_data(offset: int, count: int, data: str) -> None:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...
    def split_text(offset: int) -> IXmlText:
        ...
    def substring_data(offset: int, count: int) -> str:
        ...

class IXmlCharacterData(IXmlNode, IXmlNodeSelector, IXmlNodeSerializer, _winrt.winrt_base):
    ...
    data: str
    length: int
    attributes: XmlNamedNodeMap
    child_nodes: XmlNodeList
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    node_value: _winrt.winrt_base
    owner_document: XmlDocument
    parent_node: IXmlNode
    prefix: _winrt.winrt_base
    previous_sibling: IXmlNode
    inner_text: str
    def append_data(data: str) -> None:
        ...
    def delete_data(offset: int, count: int) -> None:
        ...
    def insert_data(offset: int, data: str) -> None:
        ...
    def replace_data(offset: int, count: int, data: str) -> None:
        ...
    def substring_data(offset: int, count: int) -> str:
        ...
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...

class IXmlNode(IXmlNodeSelector, IXmlNodeSerializer, _winrt.winrt_base):
    ...
    attributes: XmlNamedNodeMap
    child_nodes: XmlNodeList
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    node_value: _winrt.winrt_base
    owner_document: XmlDocument
    parent_node: IXmlNode
    prefix: _winrt.winrt_base
    previous_sibling: IXmlNode
    inner_text: str
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...

class IXmlNodeSelector(_winrt.winrt_base):
    ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...

class IXmlNodeSerializer(_winrt.winrt_base):
    ...
    inner_text: str
    def get_xml() -> str:
        ...

class IXmlText(IXmlCharacterData, IXmlNode, IXmlNodeSelector, IXmlNodeSerializer, _winrt.winrt_base):
    ...
    data: str
    length: int
    attributes: XmlNamedNodeMap
    child_nodes: XmlNodeList
    first_child: IXmlNode
    last_child: IXmlNode
    local_name: _winrt.winrt_base
    namespace_uri: _winrt.winrt_base
    next_sibling: IXmlNode
    node_name: str
    node_type: NodeType
    node_value: _winrt.winrt_base
    owner_document: XmlDocument
    parent_node: IXmlNode
    prefix: _winrt.winrt_base
    previous_sibling: IXmlNode
    inner_text: str
    def split_text(offset: int) -> IXmlText:
        ...
    def append_data(data: str) -> None:
        ...
    def delete_data(offset: int, count: int) -> None:
        ...
    def insert_data(offset: int, data: str) -> None:
        ...
    def replace_data(offset: int, count: int, data: str) -> None:
        ...
    def substring_data(offset: int, count: int) -> str:
        ...
    def append_child(new_child: IXmlNode) -> IXmlNode:
        ...
    def clone_node(deep: bool) -> IXmlNode:
        ...
    def has_child_nodes() -> bool:
        ...
    def insert_before(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def normalize() -> None:
        ...
    def remove_child(child_node: IXmlNode) -> IXmlNode:
        ...
    def replace_child(new_child: IXmlNode, reference_child: IXmlNode) -> IXmlNode:
        ...
    def select_nodes(xpath: str) -> XmlNodeList:
        ...
    def select_nodes_n_s(xpath: str, namespaces: _winrt.winrt_base) -> XmlNodeList:
        ...
    def select_single_node(xpath: str) -> IXmlNode:
        ...
    def select_single_node_n_s(xpath: str, namespaces: _winrt.winrt_base) -> IXmlNode:
        ...
    def get_xml() -> str:
        ...

