# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.devices.geolocation
except Exception:
    pass

try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.globalization
except Exception:
    pass

try:
    import winrt.windows.services.maps
except Exception:
    pass

class LocalLocationFinderStatus(enum.IntEnum):
    SUCCESS = 0
    UNKNOWN_ERROR = 1
    INVALID_CREDENTIALS = 2
    INVALID_CATEGORY = 3
    INVALID_SEARCH_TERM = 4
    INVALID_SEARCH_AREA = 5
    NETWORK_FAILURE = 6
    NOT_SUPPORTED = 7

class LocalCategories(_winrt.winrt_base):
    ...
    all: str
    bank_and_credit_unions: str
    eat_drink: str
    hospitals: str
    hotels_and_motels: str
    parking: str
    see_do: str
    shop: str

class LocalLocation(_winrt.winrt_base):
    ...
    address: winrt.windows.services.maps.MapAddress
    data_attribution: str
    description: str
    display_name: str
    identifier: str
    phone_number: str
    point: winrt.windows.devices.geolocation.Geopoint
    category: str
    hours_of_operation: winrt.windows.foundation.collections.IVectorView[LocalLocationHoursOfOperationItem]
    rating_info: LocalLocationRatingInfo

class LocalLocationFinder(_winrt.winrt_base):
    ...
    def find_local_locations_async(search_term: str, search_area: winrt.windows.devices.geolocation.Geocircle, local_category: str, max_results: int) -> winrt.windows.foundation.IAsyncOperation[LocalLocationFinderResult]:
        ...

class LocalLocationFinderResult(_winrt.winrt_base):
    ...
    local_locations: winrt.windows.foundation.collections.IVectorView[LocalLocation]
    status: LocalLocationFinderStatus

class LocalLocationHoursOfOperationItem(_winrt.winrt_base):
    ...
    day: winrt.windows.globalization.DayOfWeek
    span: winrt.windows.foundation.TimeSpan
    start: winrt.windows.foundation.TimeSpan

class LocalLocationRatingInfo(_winrt.winrt_base):
    ...
    aggregate_rating: typing.Optional[float]
    provider_identifier: str
    rating_count: typing.Optional[int]

class PlaceInfoHelper(_winrt.winrt_base):
    ...
    def create_from_local_location(location: LocalLocation) -> winrt.windows.services.maps.PlaceInfo:
        ...

