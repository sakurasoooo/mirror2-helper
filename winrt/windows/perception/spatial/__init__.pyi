# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.2.3.4

import enum
import typing
import uuid

import winrt._winrt as _winrt
try:
    import winrt.windows.foundation
except Exception:
    pass

try:
    import winrt.windows.foundation.collections
except Exception:
    pass

try:
    import winrt.windows.foundation.numerics
except Exception:
    pass

try:
    import winrt.windows.perception
except Exception:
    pass

try:
    import winrt.windows.storage.streams
except Exception:
    pass

try:
    import winrt.windows.system.remotesystems
except Exception:
    pass

class SpatialAnchorExportPurpose(enum.IntEnum):
    RELOCALIZATION = 0
    SHARING = 1

class SpatialEntityWatcherStatus(enum.IntEnum):
    CREATED = 0
    STARTED = 1
    ENUMERATION_COMPLETED = 2
    STOPPING = 3
    STOPPED = 4
    ABORTED = 5

class SpatialLocatability(enum.IntEnum):
    UNAVAILABLE = 0
    ORIENTATION_ONLY = 1
    POSITIONAL_TRACKING_ACTIVATING = 2
    POSITIONAL_TRACKING_ACTIVE = 3
    POSITIONAL_TRACKING_INHIBITED = 4

class SpatialLookDirectionRange(enum.IntEnum):
    FORWARD_ONLY = 0
    OMNIDIRECTIONAL = 1

class SpatialMovementRange(enum.IntEnum):
    NO_MOVEMENT = 0
    BOUNDED = 1

class SpatialPerceptionAccessStatus(enum.IntEnum):
    UNSPECIFIED = 0
    ALLOWED = 1
    DENIED_BY_USER = 2
    DENIED_BY_SYSTEM = 3

class SpatialBoundingBox(_winrt.winrt_base):
    ...

class SpatialBoundingFrustum(_winrt.winrt_base):
    ...

class SpatialBoundingOrientedBox(_winrt.winrt_base):
    ...

class SpatialBoundingSphere(_winrt.winrt_base):
    ...

class SpatialRay(_winrt.winrt_base):
    ...

class SpatialAnchor(_winrt.winrt_base):
    ...
    coordinate_system: SpatialCoordinateSystem
    raw_coordinate_system: SpatialCoordinateSystem
    removed_by_user: bool
    def try_create_relative_to(coordinate_system: SpatialCoordinateSystem) -> SpatialAnchor:
        ...
    def try_create_relative_to(coordinate_system: SpatialCoordinateSystem, position: winrt.windows.foundation.numerics.Vector3) -> SpatialAnchor:
        ...
    def try_create_relative_to(coordinate_system: SpatialCoordinateSystem, position: winrt.windows.foundation.numerics.Vector3, orientation: winrt.windows.foundation.numerics.Quaternion) -> SpatialAnchor:
        ...
    def add_raw_coordinate_system_adjusted(handler: winrt.windows.foundation.TypedEventHandler[SpatialAnchor, SpatialAnchorRawCoordinateSystemAdjustedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_raw_coordinate_system_adjusted(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class SpatialAnchorExportSufficiency(_winrt.winrt_base):
    ...
    is_minimally_sufficient: bool
    recommended_sufficiency_level: float
    sufficiency_level: float

class SpatialAnchorExporter(_winrt.winrt_base):
    ...
    def get_anchor_export_sufficiency_async(anchor: SpatialAnchor, purpose: SpatialAnchorExportPurpose) -> winrt.windows.foundation.IAsyncOperation[SpatialAnchorExportSufficiency]:
        ...
    def get_default() -> SpatialAnchorExporter:
        ...
    def request_access_async() -> winrt.windows.foundation.IAsyncOperation[SpatialPerceptionAccessStatus]:
        ...
    def try_export_anchor_async(anchor: SpatialAnchor, purpose: SpatialAnchorExportPurpose, stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...

class SpatialAnchorManager(_winrt.winrt_base):
    ...
    def request_store_async() -> winrt.windows.foundation.IAsyncOperation[SpatialAnchorStore]:
        ...

class SpatialAnchorRawCoordinateSystemAdjustedEventArgs(_winrt.winrt_base):
    ...
    old_raw_coordinate_system_to_new_raw_coordinate_system_transform: winrt.windows.foundation.numerics.Matrix4x4

class SpatialAnchorStore(_winrt.winrt_base):
    ...
    def clear() -> None:
        ...
    def get_all_saved_anchors() -> winrt.windows.foundation.collections.IMapView[str, SpatialAnchor]:
        ...
    def remove(id: str) -> None:
        ...
    def try_save(id: str, anchor: SpatialAnchor) -> bool:
        ...

class SpatialAnchorTransferManager(_winrt.winrt_base):
    ...
    def request_access_async() -> winrt.windows.foundation.IAsyncOperation[SpatialPerceptionAccessStatus]:
        ...
    def try_export_anchors_async(anchors: typing.Iterable[winrt.windows.foundation.collections.IKeyValuePair[str, SpatialAnchor]], stream: winrt.windows.storage.streams.IOutputStream) -> winrt.windows.foundation.IAsyncOperation[bool]:
        ...
    def try_import_anchors_async(stream: winrt.windows.storage.streams.IInputStream) -> winrt.windows.foundation.IAsyncOperation[winrt.windows.foundation.collections.IMapView[str, SpatialAnchor]]:
        ...

class SpatialBoundingVolume(_winrt.winrt_base):
    ...
    def from_box(coordinate_system: SpatialCoordinateSystem, box: SpatialBoundingBox) -> SpatialBoundingVolume:
        ...
    def from_frustum(coordinate_system: SpatialCoordinateSystem, frustum: SpatialBoundingFrustum) -> SpatialBoundingVolume:
        ...
    def from_oriented_box(coordinate_system: SpatialCoordinateSystem, box: SpatialBoundingOrientedBox) -> SpatialBoundingVolume:
        ...
    def from_sphere(coordinate_system: SpatialCoordinateSystem, sphere: SpatialBoundingSphere) -> SpatialBoundingVolume:
        ...

class SpatialCoordinateSystem(_winrt.winrt_base):
    ...
    def try_get_transform_to(target: SpatialCoordinateSystem) -> typing.Optional[winrt.windows.foundation.numerics.Matrix4x4]:
        ...

class SpatialEntity(_winrt.winrt_base):
    ...
    anchor: SpatialAnchor
    id: str
    properties: winrt.windows.foundation.collections.ValueSet

class SpatialEntityAddedEventArgs(_winrt.winrt_base):
    ...
    entity: SpatialEntity

class SpatialEntityRemovedEventArgs(_winrt.winrt_base):
    ...
    entity: SpatialEntity

class SpatialEntityStore(_winrt.winrt_base):
    ...
    is_supported: bool
    def create_entity_watcher() -> SpatialEntityWatcher:
        ...
    def remove_async(entity: SpatialEntity) -> winrt.windows.foundation.IAsyncAction:
        ...
    def save_async(entity: SpatialEntity) -> winrt.windows.foundation.IAsyncAction:
        ...
    def try_get(session: winrt.windows.system.remotesystems.RemoteSystemSession) -> SpatialEntityStore:
        ...

class SpatialEntityUpdatedEventArgs(_winrt.winrt_base):
    ...
    entity: SpatialEntity

class SpatialEntityWatcher(_winrt.winrt_base):
    ...
    status: SpatialEntityWatcherStatus
    def start() -> None:
        ...
    def stop() -> None:
        ...
    def add_added(handler: winrt.windows.foundation.TypedEventHandler[SpatialEntityWatcher, SpatialEntityAddedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_added(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_enumeration_completed(handler: winrt.windows.foundation.TypedEventHandler[SpatialEntityWatcher, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_enumeration_completed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_removed(handler: winrt.windows.foundation.TypedEventHandler[SpatialEntityWatcher, SpatialEntityRemovedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_removed(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_updated(handler: winrt.windows.foundation.TypedEventHandler[SpatialEntityWatcher, SpatialEntityUpdatedEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_updated(token: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class SpatialLocation(_winrt.winrt_base):
    ...
    absolute_angular_acceleration: winrt.windows.foundation.numerics.Quaternion
    absolute_angular_velocity: winrt.windows.foundation.numerics.Quaternion
    absolute_linear_acceleration: winrt.windows.foundation.numerics.Vector3
    absolute_linear_velocity: winrt.windows.foundation.numerics.Vector3
    orientation: winrt.windows.foundation.numerics.Quaternion
    position: winrt.windows.foundation.numerics.Vector3
    absolute_angular_acceleration_axis_angle: winrt.windows.foundation.numerics.Vector3
    absolute_angular_velocity_axis_angle: winrt.windows.foundation.numerics.Vector3

class SpatialLocator(_winrt.winrt_base):
    ...
    locatability: SpatialLocatability
    def create_attached_frame_of_reference_at_current_heading() -> SpatialLocatorAttachedFrameOfReference:
        ...
    def create_attached_frame_of_reference_at_current_heading(relative_position: winrt.windows.foundation.numerics.Vector3) -> SpatialLocatorAttachedFrameOfReference:
        ...
    def create_attached_frame_of_reference_at_current_heading(relative_position: winrt.windows.foundation.numerics.Vector3, relative_orientation: winrt.windows.foundation.numerics.Quaternion) -> SpatialLocatorAttachedFrameOfReference:
        ...
    def create_attached_frame_of_reference_at_current_heading(relative_position: winrt.windows.foundation.numerics.Vector3, relative_orientation: winrt.windows.foundation.numerics.Quaternion, relative_heading_in_radians: float) -> SpatialLocatorAttachedFrameOfReference:
        ...
    def create_stationary_frame_of_reference_at_current_location() -> SpatialStationaryFrameOfReference:
        ...
    def create_stationary_frame_of_reference_at_current_location(relative_position: winrt.windows.foundation.numerics.Vector3) -> SpatialStationaryFrameOfReference:
        ...
    def create_stationary_frame_of_reference_at_current_location(relative_position: winrt.windows.foundation.numerics.Vector3, relative_orientation: winrt.windows.foundation.numerics.Quaternion) -> SpatialStationaryFrameOfReference:
        ...
    def create_stationary_frame_of_reference_at_current_location(relative_position: winrt.windows.foundation.numerics.Vector3, relative_orientation: winrt.windows.foundation.numerics.Quaternion, relative_heading_in_radians: float) -> SpatialStationaryFrameOfReference:
        ...
    def get_default() -> SpatialLocator:
        ...
    def try_locate_at_timestamp(timestamp: winrt.windows.perception.PerceptionTimestamp, coordinate_system: SpatialCoordinateSystem) -> SpatialLocation:
        ...
    def add_locatability_changed(handler: winrt.windows.foundation.TypedEventHandler[SpatialLocator, _winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_locatability_changed(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...
    def add_positional_tracking_deactivating(handler: winrt.windows.foundation.TypedEventHandler[SpatialLocator, SpatialLocatorPositionalTrackingDeactivatingEventArgs]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_positional_tracking_deactivating(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class SpatialLocatorAttachedFrameOfReference(_winrt.winrt_base):
    ...
    relative_position: winrt.windows.foundation.numerics.Vector3
    relative_orientation: winrt.windows.foundation.numerics.Quaternion
    def adjust_heading(heading_offset_in_radians: float) -> None:
        ...
    def get_stationary_coordinate_system_at_timestamp(timestamp: winrt.windows.perception.PerceptionTimestamp) -> SpatialCoordinateSystem:
        ...
    def try_get_relative_heading_at_timestamp(timestamp: winrt.windows.perception.PerceptionTimestamp) -> typing.Optional[float]:
        ...

class SpatialLocatorPositionalTrackingDeactivatingEventArgs(_winrt.winrt_base):
    ...
    canceled: bool

class SpatialStageFrameOfReference(_winrt.winrt_base):
    ...
    coordinate_system: SpatialCoordinateSystem
    look_direction_range: SpatialLookDirectionRange
    movement_range: SpatialMovementRange
    current: SpatialStageFrameOfReference
    def get_coordinate_system_at_current_location(locator: SpatialLocator) -> SpatialCoordinateSystem:
        ...
    def request_new_stage_async() -> winrt.windows.foundation.IAsyncOperation[SpatialStageFrameOfReference]:
        ...
    def try_get_movement_bounds(coordinate_system: SpatialCoordinateSystem) -> winrt.windows.foundation.numerics.Vector3:
        ...
    def add_current_changed(handler: winrt.windows.foundation.EventHandler[_winrt.winrt_base]) -> winrt.windows.foundation.EventRegistrationToken:
        ...
    def remove_current_changed(cookie: winrt.windows.foundation.EventRegistrationToken) -> None:
        ...

class SpatialStationaryFrameOfReference(_winrt.winrt_base):
    ...
    coordinate_system: SpatialCoordinateSystem

